// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"errors"
	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NodeConfiguration struct {
	pulumi.CustomResourceState

	Aks NodeConfigurationAksPtrOutput `pulumi:"aks"`
	// CAST AI cluster id
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: `dockerd`, `containerd`
	ContainerRuntime pulumi.StringPtrOutput `pulumi:"containerRuntime"`
	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
	DiskCpuRatio pulumi.IntPtrOutput `pulumi:"diskCpuRatio"`
	// Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
	DockerConfig pulumi.StringPtrOutput `pulumi:"dockerConfig"`
	// Timeout in seconds for draining the node. Defaults to 0
	DrainTimeoutSec pulumi.IntPtrOutput           `pulumi:"drainTimeoutSec"`
	Eks             NodeConfigurationEksPtrOutput `pulumi:"eks"`
	Gke             NodeConfigurationGkeOutput    `pulumi:"gke"`
	// Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
	Image pulumi.StringPtrOutput `pulumi:"image"`
	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
	InitScript pulumi.StringPtrOutput         `pulumi:"initScript"`
	Kops       NodeConfigurationKopsPtrOutput `pulumi:"kops"`
	// Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
	KubeletConfig pulumi.StringPtrOutput `pulumi:"kubeletConfig"`
	// Minimal disk size in GiB. Defaults to 100, min 30, max 65536
	MinDiskSize pulumi.IntPtrOutput `pulumi:"minDiskSize"`
	Name        pulumi.StringOutput `pulumi:"name"`
	// SSH public key to be used for provisioned nodes
	SshPublicKey pulumi.StringPtrOutput `pulumi:"sshPublicKey"`
	// Subnet ids to be used for provisioned nodes
	Subnets pulumi.StringArrayOutput `pulumi:"subnets"`
	// Tags to be added on cloud instances for provisioned nodes
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewNodeConfiguration registers a new resource with the given unique name, arguments, and options.
func NewNodeConfiguration(ctx *pulumi.Context,
	name string, args *NodeConfigurationArgs, opts ...pulumi.ResourceOption) (*NodeConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Subnets == nil {
		return nil, errors.New("invalid value for required argument 'Subnets'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NodeConfiguration
	err := ctx.RegisterResource("castai:config/node:NodeConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodeConfiguration gets an existing NodeConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodeConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeConfigurationState, opts ...pulumi.ResourceOption) (*NodeConfiguration, error) {
	var resource NodeConfiguration
	err := ctx.ReadResource("castai:config/node:NodeConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodeConfiguration resources.
type nodeConfigurationState struct {
	Aks *NodeConfigurationAks `pulumi:"aks"`
	// CAST AI cluster id
	ClusterId *string `pulumi:"clusterId"`
	// Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: `dockerd`, `containerd`
	ContainerRuntime *string `pulumi:"containerRuntime"`
	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
	DiskCpuRatio *int `pulumi:"diskCpuRatio"`
	// Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
	DockerConfig *string `pulumi:"dockerConfig"`
	// Timeout in seconds for draining the node. Defaults to 0
	DrainTimeoutSec *int                  `pulumi:"drainTimeoutSec"`
	Eks             *NodeConfigurationEks `pulumi:"eks"`
	Gke             *NodeConfigurationGke `pulumi:"gke"`
	// Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
	Image *string `pulumi:"image"`
	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
	InitScript *string                `pulumi:"initScript"`
	Kops       *NodeConfigurationKops `pulumi:"kops"`
	// Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
	KubeletConfig *string `pulumi:"kubeletConfig"`
	// Minimal disk size in GiB. Defaults to 100, min 30, max 65536
	MinDiskSize *int    `pulumi:"minDiskSize"`
	Name        *string `pulumi:"name"`
	// SSH public key to be used for provisioned nodes
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// Subnet ids to be used for provisioned nodes
	Subnets []string `pulumi:"subnets"`
	// Tags to be added on cloud instances for provisioned nodes
	Tags map[string]string `pulumi:"tags"`
}

type NodeConfigurationState struct {
	Aks NodeConfigurationAksPtrInput
	// CAST AI cluster id
	ClusterId pulumi.StringPtrInput
	// Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: `dockerd`, `containerd`
	ContainerRuntime pulumi.StringPtrInput
	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
	DiskCpuRatio pulumi.IntPtrInput
	// Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
	DockerConfig pulumi.StringPtrInput
	// Timeout in seconds for draining the node. Defaults to 0
	DrainTimeoutSec pulumi.IntPtrInput
	Eks             NodeConfigurationEksPtrInput
	Gke             NodeConfigurationGkePtrInput
	// Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
	Image pulumi.StringPtrInput
	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
	InitScript pulumi.StringPtrInput
	Kops       NodeConfigurationKopsPtrInput
	// Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
	KubeletConfig pulumi.StringPtrInput
	// Minimal disk size in GiB. Defaults to 100, min 30, max 65536
	MinDiskSize pulumi.IntPtrInput
	Name        pulumi.StringPtrInput
	// SSH public key to be used for provisioned nodes
	SshPublicKey pulumi.StringPtrInput
	// Subnet ids to be used for provisioned nodes
	Subnets pulumi.StringArrayInput
	// Tags to be added on cloud instances for provisioned nodes
	Tags pulumi.StringMapInput
}

func (NodeConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeConfigurationState)(nil)).Elem()
}

type nodeConfigurationArgs struct {
	Aks *NodeConfigurationAks `pulumi:"aks"`
	// CAST AI cluster id
	ClusterId string `pulumi:"clusterId"`
	// Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: `dockerd`, `containerd`
	ContainerRuntime *string `pulumi:"containerRuntime"`
	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
	DiskCpuRatio *int `pulumi:"diskCpuRatio"`
	// Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
	DockerConfig *string `pulumi:"dockerConfig"`
	// Timeout in seconds for draining the node. Defaults to 0
	DrainTimeoutSec *int                  `pulumi:"drainTimeoutSec"`
	Eks             *NodeConfigurationEks `pulumi:"eks"`
	Gke             *NodeConfigurationGke `pulumi:"gke"`
	// Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
	Image *string `pulumi:"image"`
	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
	InitScript *string                `pulumi:"initScript"`
	Kops       *NodeConfigurationKops `pulumi:"kops"`
	// Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
	KubeletConfig *string `pulumi:"kubeletConfig"`
	// Minimal disk size in GiB. Defaults to 100, min 30, max 65536
	MinDiskSize *int    `pulumi:"minDiskSize"`
	Name        *string `pulumi:"name"`
	// SSH public key to be used for provisioned nodes
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// Subnet ids to be used for provisioned nodes
	Subnets []string `pulumi:"subnets"`
	// Tags to be added on cloud instances for provisioned nodes
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NodeConfiguration resource.
type NodeConfigurationArgs struct {
	Aks NodeConfigurationAksPtrInput
	// CAST AI cluster id
	ClusterId pulumi.StringInput
	// Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: `dockerd`, `containerd`
	ContainerRuntime pulumi.StringPtrInput
	// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
	DiskCpuRatio pulumi.IntPtrInput
	// Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
	DockerConfig pulumi.StringPtrInput
	// Timeout in seconds for draining the node. Defaults to 0
	DrainTimeoutSec pulumi.IntPtrInput
	Eks             NodeConfigurationEksPtrInput
	Gke             NodeConfigurationGkePtrInput
	// Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
	Image pulumi.StringPtrInput
	// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
	InitScript pulumi.StringPtrInput
	Kops       NodeConfigurationKopsPtrInput
	// Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
	KubeletConfig pulumi.StringPtrInput
	// Minimal disk size in GiB. Defaults to 100, min 30, max 65536
	MinDiskSize pulumi.IntPtrInput
	Name        pulumi.StringPtrInput
	// SSH public key to be used for provisioned nodes
	SshPublicKey pulumi.StringPtrInput
	// Subnet ids to be used for provisioned nodes
	Subnets pulumi.StringArrayInput
	// Tags to be added on cloud instances for provisioned nodes
	Tags pulumi.StringMapInput
}

func (NodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeConfigurationArgs)(nil)).Elem()
}

type NodeConfigurationInput interface {
	pulumi.Input

	ToNodeConfigurationOutput() NodeConfigurationOutput
	ToNodeConfigurationOutputWithContext(ctx context.Context) NodeConfigurationOutput
}

func (*NodeConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfiguration)(nil)).Elem()
}

func (i *NodeConfiguration) ToNodeConfigurationOutput() NodeConfigurationOutput {
	return i.ToNodeConfigurationOutputWithContext(context.Background())
}

func (i *NodeConfiguration) ToNodeConfigurationOutputWithContext(ctx context.Context) NodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationOutput)
}

// NodeConfigurationArrayInput is an input type that accepts NodeConfigurationArray and NodeConfigurationArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationArrayInput` via:
//
//	NodeConfigurationArray{ NodeConfigurationArgs{...} }
type NodeConfigurationArrayInput interface {
	pulumi.Input

	ToNodeConfigurationArrayOutput() NodeConfigurationArrayOutput
	ToNodeConfigurationArrayOutputWithContext(context.Context) NodeConfigurationArrayOutput
}

type NodeConfigurationArray []NodeConfigurationInput

func (NodeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodeConfiguration)(nil)).Elem()
}

func (i NodeConfigurationArray) ToNodeConfigurationArrayOutput() NodeConfigurationArrayOutput {
	return i.ToNodeConfigurationArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationArray) ToNodeConfigurationArrayOutputWithContext(ctx context.Context) NodeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationArrayOutput)
}

// NodeConfigurationMapInput is an input type that accepts NodeConfigurationMap and NodeConfigurationMapOutput values.
// You can construct a concrete instance of `NodeConfigurationMapInput` via:
//
//	NodeConfigurationMap{ "key": NodeConfigurationArgs{...} }
type NodeConfigurationMapInput interface {
	pulumi.Input

	ToNodeConfigurationMapOutput() NodeConfigurationMapOutput
	ToNodeConfigurationMapOutputWithContext(context.Context) NodeConfigurationMapOutput
}

type NodeConfigurationMap map[string]NodeConfigurationInput

func (NodeConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodeConfiguration)(nil)).Elem()
}

func (i NodeConfigurationMap) ToNodeConfigurationMapOutput() NodeConfigurationMapOutput {
	return i.ToNodeConfigurationMapOutputWithContext(context.Background())
}

func (i NodeConfigurationMap) ToNodeConfigurationMapOutputWithContext(ctx context.Context) NodeConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationMapOutput)
}

type NodeConfigurationOutput struct{ *pulumi.OutputState }

func (NodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfiguration)(nil)).Elem()
}

func (o NodeConfigurationOutput) ToNodeConfigurationOutput() NodeConfigurationOutput {
	return o
}

func (o NodeConfigurationOutput) ToNodeConfigurationOutputWithContext(ctx context.Context) NodeConfigurationOutput {
	return o
}

func (o NodeConfigurationOutput) Aks() NodeConfigurationAksPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) NodeConfigurationAksPtrOutput { return v.Aks }).(NodeConfigurationAksPtrOutput)
}

// CAST AI cluster id
func (o NodeConfigurationOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: `dockerd`, `containerd`
func (o NodeConfigurationOutput) ContainerRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringPtrOutput { return v.ContainerRuntime }).(pulumi.StringPtrOutput)
}

// Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
func (o NodeConfigurationOutput) DiskCpuRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.IntPtrOutput { return v.DiskCpuRatio }).(pulumi.IntPtrOutput)
}

// Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
func (o NodeConfigurationOutput) DockerConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringPtrOutput { return v.DockerConfig }).(pulumi.StringPtrOutput)
}

// Timeout in seconds for draining the node. Defaults to 0
func (o NodeConfigurationOutput) DrainTimeoutSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.IntPtrOutput { return v.DrainTimeoutSec }).(pulumi.IntPtrOutput)
}

func (o NodeConfigurationOutput) Eks() NodeConfigurationEksPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) NodeConfigurationEksPtrOutput { return v.Eks }).(NodeConfigurationEksPtrOutput)
}

func (o NodeConfigurationOutput) Gke() NodeConfigurationGkeOutput {
	return o.ApplyT(func(v *NodeConfiguration) NodeConfigurationGkeOutput { return v.Gke }).(NodeConfigurationGkeOutput)
}

// Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
func (o NodeConfigurationOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringPtrOutput { return v.Image }).(pulumi.StringPtrOutput)
}

// Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
func (o NodeConfigurationOutput) InitScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringPtrOutput { return v.InitScript }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationOutput) Kops() NodeConfigurationKopsPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) NodeConfigurationKopsPtrOutput { return v.Kops }).(NodeConfigurationKopsPtrOutput)
}

// Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
func (o NodeConfigurationOutput) KubeletConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringPtrOutput { return v.KubeletConfig }).(pulumi.StringPtrOutput)
}

// Minimal disk size in GiB. Defaults to 100, min 30, max 65536
func (o NodeConfigurationOutput) MinDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.IntPtrOutput { return v.MinDiskSize }).(pulumi.IntPtrOutput)
}

func (o NodeConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// SSH public key to be used for provisioned nodes
func (o NodeConfigurationOutput) SshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringPtrOutput { return v.SshPublicKey }).(pulumi.StringPtrOutput)
}

// Subnet ids to be used for provisioned nodes
func (o NodeConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringArrayOutput { return v.Subnets }).(pulumi.StringArrayOutput)
}

// Tags to be added on cloud instances for provisioned nodes
func (o NodeConfigurationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodeConfiguration) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type NodeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodeConfiguration)(nil)).Elem()
}

func (o NodeConfigurationArrayOutput) ToNodeConfigurationArrayOutput() NodeConfigurationArrayOutput {
	return o
}

func (o NodeConfigurationArrayOutput) ToNodeConfigurationArrayOutputWithContext(ctx context.Context) NodeConfigurationArrayOutput {
	return o
}

func (o NodeConfigurationArrayOutput) Index(i pulumi.IntInput) NodeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodeConfiguration {
		return vs[0].([]*NodeConfiguration)[vs[1].(int)]
	}).(NodeConfigurationOutput)
}

type NodeConfigurationMapOutput struct{ *pulumi.OutputState }

func (NodeConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodeConfiguration)(nil)).Elem()
}

func (o NodeConfigurationMapOutput) ToNodeConfigurationMapOutput() NodeConfigurationMapOutput {
	return o
}

func (o NodeConfigurationMapOutput) ToNodeConfigurationMapOutputWithContext(ctx context.Context) NodeConfigurationMapOutput {
	return o
}

func (o NodeConfigurationMapOutput) MapIndex(k pulumi.StringInput) NodeConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodeConfiguration {
		return vs[0].(map[string]*NodeConfiguration)[vs[1].(string)]
	}).(NodeConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationInput)(nil)).Elem(), &NodeConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationArrayInput)(nil)).Elem(), NodeConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationMapInput)(nil)).Elem(), NodeConfigurationMap{})
	pulumi.RegisterOutputType(NodeConfigurationOutput{})
	pulumi.RegisterOutputType(NodeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationMapOutput{})
}
