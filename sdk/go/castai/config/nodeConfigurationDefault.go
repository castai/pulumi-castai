// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"errors"
	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NodeConfigurationDefault struct {
	pulumi.CustomResourceState

	// CAST AI cluster id
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Id of the node configuration
	ConfigurationId pulumi.StringOutput `pulumi:"configurationId"`
}

// NewNodeConfigurationDefault registers a new resource with the given unique name, arguments, and options.
func NewNodeConfigurationDefault(ctx *pulumi.Context,
	name string, args *NodeConfigurationDefaultArgs, opts ...pulumi.ResourceOption) (*NodeConfigurationDefault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.ConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NodeConfigurationDefault
	err := ctx.RegisterResource("castai:config/node:NodeConfigurationDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodeConfigurationDefault gets an existing NodeConfigurationDefault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodeConfigurationDefault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeConfigurationDefaultState, opts ...pulumi.ResourceOption) (*NodeConfigurationDefault, error) {
	var resource NodeConfigurationDefault
	err := ctx.ReadResource("castai:config/node:NodeConfigurationDefault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodeConfigurationDefault resources.
type nodeConfigurationDefaultState struct {
	// CAST AI cluster id
	ClusterId *string `pulumi:"clusterId"`
	// Id of the node configuration
	ConfigurationId *string `pulumi:"configurationId"`
}

type NodeConfigurationDefaultState struct {
	// CAST AI cluster id
	ClusterId pulumi.StringPtrInput
	// Id of the node configuration
	ConfigurationId pulumi.StringPtrInput
}

func (NodeConfigurationDefaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeConfigurationDefaultState)(nil)).Elem()
}

type nodeConfigurationDefaultArgs struct {
	// CAST AI cluster id
	ClusterId string `pulumi:"clusterId"`
	// Id of the node configuration
	ConfigurationId string `pulumi:"configurationId"`
}

// The set of arguments for constructing a NodeConfigurationDefault resource.
type NodeConfigurationDefaultArgs struct {
	// CAST AI cluster id
	ClusterId pulumi.StringInput
	// Id of the node configuration
	ConfigurationId pulumi.StringInput
}

func (NodeConfigurationDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeConfigurationDefaultArgs)(nil)).Elem()
}

type NodeConfigurationDefaultInput interface {
	pulumi.Input

	ToNodeConfigurationDefaultOutput() NodeConfigurationDefaultOutput
	ToNodeConfigurationDefaultOutputWithContext(ctx context.Context) NodeConfigurationDefaultOutput
}

func (*NodeConfigurationDefault) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationDefault)(nil)).Elem()
}

func (i *NodeConfigurationDefault) ToNodeConfigurationDefaultOutput() NodeConfigurationDefaultOutput {
	return i.ToNodeConfigurationDefaultOutputWithContext(context.Background())
}

func (i *NodeConfigurationDefault) ToNodeConfigurationDefaultOutputWithContext(ctx context.Context) NodeConfigurationDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationDefaultOutput)
}

// NodeConfigurationDefaultArrayInput is an input type that accepts NodeConfigurationDefaultArray and NodeConfigurationDefaultArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationDefaultArrayInput` via:
//
//	NodeConfigurationDefaultArray{ NodeConfigurationDefaultArgs{...} }
type NodeConfigurationDefaultArrayInput interface {
	pulumi.Input

	ToNodeConfigurationDefaultArrayOutput() NodeConfigurationDefaultArrayOutput
	ToNodeConfigurationDefaultArrayOutputWithContext(context.Context) NodeConfigurationDefaultArrayOutput
}

type NodeConfigurationDefaultArray []NodeConfigurationDefaultInput

func (NodeConfigurationDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodeConfigurationDefault)(nil)).Elem()
}

func (i NodeConfigurationDefaultArray) ToNodeConfigurationDefaultArrayOutput() NodeConfigurationDefaultArrayOutput {
	return i.ToNodeConfigurationDefaultArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationDefaultArray) ToNodeConfigurationDefaultArrayOutputWithContext(ctx context.Context) NodeConfigurationDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationDefaultArrayOutput)
}

// NodeConfigurationDefaultMapInput is an input type that accepts NodeConfigurationDefaultMap and NodeConfigurationDefaultMapOutput values.
// You can construct a concrete instance of `NodeConfigurationDefaultMapInput` via:
//
//	NodeConfigurationDefaultMap{ "key": NodeConfigurationDefaultArgs{...} }
type NodeConfigurationDefaultMapInput interface {
	pulumi.Input

	ToNodeConfigurationDefaultMapOutput() NodeConfigurationDefaultMapOutput
	ToNodeConfigurationDefaultMapOutputWithContext(context.Context) NodeConfigurationDefaultMapOutput
}

type NodeConfigurationDefaultMap map[string]NodeConfigurationDefaultInput

func (NodeConfigurationDefaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodeConfigurationDefault)(nil)).Elem()
}

func (i NodeConfigurationDefaultMap) ToNodeConfigurationDefaultMapOutput() NodeConfigurationDefaultMapOutput {
	return i.ToNodeConfigurationDefaultMapOutputWithContext(context.Background())
}

func (i NodeConfigurationDefaultMap) ToNodeConfigurationDefaultMapOutputWithContext(ctx context.Context) NodeConfigurationDefaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationDefaultMapOutput)
}

type NodeConfigurationDefaultOutput struct{ *pulumi.OutputState }

func (NodeConfigurationDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationDefault)(nil)).Elem()
}

func (o NodeConfigurationDefaultOutput) ToNodeConfigurationDefaultOutput() NodeConfigurationDefaultOutput {
	return o
}

func (o NodeConfigurationDefaultOutput) ToNodeConfigurationDefaultOutputWithContext(ctx context.Context) NodeConfigurationDefaultOutput {
	return o
}

// CAST AI cluster id
func (o NodeConfigurationDefaultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodeConfigurationDefault) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Id of the node configuration
func (o NodeConfigurationDefaultOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodeConfigurationDefault) pulumi.StringOutput { return v.ConfigurationId }).(pulumi.StringOutput)
}

type NodeConfigurationDefaultArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodeConfigurationDefault)(nil)).Elem()
}

func (o NodeConfigurationDefaultArrayOutput) ToNodeConfigurationDefaultArrayOutput() NodeConfigurationDefaultArrayOutput {
	return o
}

func (o NodeConfigurationDefaultArrayOutput) ToNodeConfigurationDefaultArrayOutputWithContext(ctx context.Context) NodeConfigurationDefaultArrayOutput {
	return o
}

func (o NodeConfigurationDefaultArrayOutput) Index(i pulumi.IntInput) NodeConfigurationDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodeConfigurationDefault {
		return vs[0].([]*NodeConfigurationDefault)[vs[1].(int)]
	}).(NodeConfigurationDefaultOutput)
}

type NodeConfigurationDefaultMapOutput struct{ *pulumi.OutputState }

func (NodeConfigurationDefaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodeConfigurationDefault)(nil)).Elem()
}

func (o NodeConfigurationDefaultMapOutput) ToNodeConfigurationDefaultMapOutput() NodeConfigurationDefaultMapOutput {
	return o
}

func (o NodeConfigurationDefaultMapOutput) ToNodeConfigurationDefaultMapOutputWithContext(ctx context.Context) NodeConfigurationDefaultMapOutput {
	return o
}

func (o NodeConfigurationDefaultMapOutput) MapIndex(k pulumi.StringInput) NodeConfigurationDefaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodeConfigurationDefault {
		return vs[0].(map[string]*NodeConfigurationDefault)[vs[1].(string)]
	}).(NodeConfigurationDefaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationDefaultInput)(nil)).Elem(), &NodeConfigurationDefault{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationDefaultArrayInput)(nil)).Elem(), NodeConfigurationDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationDefaultMapInput)(nil)).Elem(), NodeConfigurationDefaultMap{})
	pulumi.RegisterOutputType(NodeConfigurationDefaultOutput{})
	pulumi.RegisterOutputType(NodeConfigurationDefaultArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationDefaultMapOutput{})
}
