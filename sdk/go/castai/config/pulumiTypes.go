// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NodeConfigurationAks struct {
	// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux,windows2019,windows2022)
	AksImageFamily *string `pulumi:"aksImageFamily"`
	// Application security groups to be used for provisioned nodes
	ApplicationSecurityGroups []string `pulumi:"applicationSecurityGroups"`
	// Ephemeral OS disk configuration for CAST provisioned nodes
	EphemeralOsDisk *NodeConfigurationAksEphemeralOsDisk `pulumi:"ephemeralOsDisk"`
	// Load balancer configuration for CAST provisioned nodes
	Loadbalancers []NodeConfigurationAksLoadbalancer `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
	// Network security group to be used for provisioned nodes, if not provided default security group from `castpool` will be used
	NetworkSecurityGroup *string `pulumi:"networkSecurityGroup"`
	// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
	OsDiskType *string `pulumi:"osDiskType"`
	// ID of pod subnet to be used for provisioned nodes.
	PodSubnetId *string `pulumi:"podSubnetId"`
	// Public IP configuration for CAST AI provisioned nodes
	PublicIp *NodeConfigurationAksPublicIp `pulumi:"publicIp"`
}

// NodeConfigurationAksInput is an input type that accepts NodeConfigurationAksArgs and NodeConfigurationAksOutput values.
// You can construct a concrete instance of `NodeConfigurationAksInput` via:
//
//	NodeConfigurationAksArgs{...}
type NodeConfigurationAksInput interface {
	pulumi.Input

	ToNodeConfigurationAksOutput() NodeConfigurationAksOutput
	ToNodeConfigurationAksOutputWithContext(context.Context) NodeConfigurationAksOutput
}

type NodeConfigurationAksArgs struct {
	// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux,windows2019,windows2022)
	AksImageFamily pulumi.StringPtrInput `pulumi:"aksImageFamily"`
	// Application security groups to be used for provisioned nodes
	ApplicationSecurityGroups pulumi.StringArrayInput `pulumi:"applicationSecurityGroups"`
	// Ephemeral OS disk configuration for CAST provisioned nodes
	EphemeralOsDisk NodeConfigurationAksEphemeralOsDiskPtrInput `pulumi:"ephemeralOsDisk"`
	// Load balancer configuration for CAST provisioned nodes
	Loadbalancers NodeConfigurationAksLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
	// Network security group to be used for provisioned nodes, if not provided default security group from `castpool` will be used
	NetworkSecurityGroup pulumi.StringPtrInput `pulumi:"networkSecurityGroup"`
	// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
	OsDiskType pulumi.StringPtrInput `pulumi:"osDiskType"`
	// ID of pod subnet to be used for provisioned nodes.
	PodSubnetId pulumi.StringPtrInput `pulumi:"podSubnetId"`
	// Public IP configuration for CAST AI provisioned nodes
	PublicIp NodeConfigurationAksPublicIpPtrInput `pulumi:"publicIp"`
}

func (NodeConfigurationAksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAks)(nil)).Elem()
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksOutput() NodeConfigurationAksOutput {
	return i.ToNodeConfigurationAksOutputWithContext(context.Background())
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksOutputWithContext(ctx context.Context) NodeConfigurationAksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksOutput)
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return i.ToNodeConfigurationAksPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksOutput).ToNodeConfigurationAksPtrOutputWithContext(ctx)
}

// NodeConfigurationAksPtrInput is an input type that accepts NodeConfigurationAksArgs, NodeConfigurationAksPtr and NodeConfigurationAksPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationAksPtrInput` via:
//
//	        NodeConfigurationAksArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationAksPtrInput interface {
	pulumi.Input

	ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput
	ToNodeConfigurationAksPtrOutputWithContext(context.Context) NodeConfigurationAksPtrOutput
}

type nodeConfigurationAksPtrType NodeConfigurationAksArgs

func NodeConfigurationAksPtr(v *NodeConfigurationAksArgs) NodeConfigurationAksPtrInput {
	return (*nodeConfigurationAksPtrType)(v)
}

func (*nodeConfigurationAksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAks)(nil)).Elem()
}

func (i *nodeConfigurationAksPtrType) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return i.ToNodeConfigurationAksPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationAksPtrType) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksPtrOutput)
}

type NodeConfigurationAksOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAks)(nil)).Elem()
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksOutput() NodeConfigurationAksOutput {
	return o
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksOutputWithContext(ctx context.Context) NodeConfigurationAksOutput {
	return o
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return o.ToNodeConfigurationAksPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationAks) *NodeConfigurationAks {
		return &v
	}).(NodeConfigurationAksPtrOutput)
}

// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux,windows2019,windows2022)
func (o NodeConfigurationAksOutput) AksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *string { return v.AksImageFamily }).(pulumi.StringPtrOutput)
}

// Application security groups to be used for provisioned nodes
func (o NodeConfigurationAksOutput) ApplicationSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAks) []string { return v.ApplicationSecurityGroups }).(pulumi.StringArrayOutput)
}

// Ephemeral OS disk configuration for CAST provisioned nodes
func (o NodeConfigurationAksOutput) EphemeralOsDisk() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *NodeConfigurationAksEphemeralOsDisk { return v.EphemeralOsDisk }).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

// Load balancer configuration for CAST provisioned nodes
func (o NodeConfigurationAksOutput) Loadbalancers() NodeConfigurationAksLoadbalancerArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAks) []NodeConfigurationAksLoadbalancer { return v.Loadbalancers }).(NodeConfigurationAksLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
func (o NodeConfigurationAksOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// Network security group to be used for provisioned nodes, if not provided default security group from `castpool` will be used
func (o NodeConfigurationAksOutput) NetworkSecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *string { return v.NetworkSecurityGroup }).(pulumi.StringPtrOutput)
}

// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
func (o NodeConfigurationAksOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *string { return v.OsDiskType }).(pulumi.StringPtrOutput)
}

// ID of pod subnet to be used for provisioned nodes.
func (o NodeConfigurationAksOutput) PodSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *string { return v.PodSubnetId }).(pulumi.StringPtrOutput)
}

// Public IP configuration for CAST AI provisioned nodes
func (o NodeConfigurationAksOutput) PublicIp() NodeConfigurationAksPublicIpPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *NodeConfigurationAksPublicIp { return v.PublicIp }).(NodeConfigurationAksPublicIpPtrOutput)
}

type NodeConfigurationAksPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAks)(nil)).Elem()
}

func (o NodeConfigurationAksPtrOutput) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return o
}

func (o NodeConfigurationAksPtrOutput) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return o
}

func (o NodeConfigurationAksPtrOutput) Elem() NodeConfigurationAksOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) NodeConfigurationAks {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationAks
		return ret
	}).(NodeConfigurationAksOutput)
}

// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux,windows2019,windows2022)
func (o NodeConfigurationAksPtrOutput) AksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *string {
		if v == nil {
			return nil
		}
		return v.AksImageFamily
	}).(pulumi.StringPtrOutput)
}

// Application security groups to be used for provisioned nodes
func (o NodeConfigurationAksPtrOutput) ApplicationSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) []string {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(pulumi.StringArrayOutput)
}

// Ephemeral OS disk configuration for CAST provisioned nodes
func (o NodeConfigurationAksPtrOutput) EphemeralOsDisk() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *NodeConfigurationAksEphemeralOsDisk {
		if v == nil {
			return nil
		}
		return v.EphemeralOsDisk
	}).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

// Load balancer configuration for CAST provisioned nodes
func (o NodeConfigurationAksPtrOutput) Loadbalancers() NodeConfigurationAksLoadbalancerArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) []NodeConfigurationAksLoadbalancer {
		if v == nil {
			return nil
		}
		return v.Loadbalancers
	}).(NodeConfigurationAksLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
func (o NodeConfigurationAksPtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *int {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

// Network security group to be used for provisioned nodes, if not provided default security group from `castpool` will be used
func (o NodeConfigurationAksPtrOutput) NetworkSecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *string {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(pulumi.StringPtrOutput)
}

// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
func (o NodeConfigurationAksPtrOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskType
	}).(pulumi.StringPtrOutput)
}

// ID of pod subnet to be used for provisioned nodes.
func (o NodeConfigurationAksPtrOutput) PodSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *string {
		if v == nil {
			return nil
		}
		return v.PodSubnetId
	}).(pulumi.StringPtrOutput)
}

// Public IP configuration for CAST AI provisioned nodes
func (o NodeConfigurationAksPtrOutput) PublicIp() NodeConfigurationAksPublicIpPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *NodeConfigurationAksPublicIp {
		if v == nil {
			return nil
		}
		return v.PublicIp
	}).(NodeConfigurationAksPublicIpPtrOutput)
}

type NodeConfigurationAksEphemeralOsDisk struct {
	// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
	Cache *string `pulumi:"cache"`
	// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
	Placement string `pulumi:"placement"`
}

// NodeConfigurationAksEphemeralOsDiskInput is an input type that accepts NodeConfigurationAksEphemeralOsDiskArgs and NodeConfigurationAksEphemeralOsDiskOutput values.
// You can construct a concrete instance of `NodeConfigurationAksEphemeralOsDiskInput` via:
//
//	NodeConfigurationAksEphemeralOsDiskArgs{...}
type NodeConfigurationAksEphemeralOsDiskInput interface {
	pulumi.Input

	ToNodeConfigurationAksEphemeralOsDiskOutput() NodeConfigurationAksEphemeralOsDiskOutput
	ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(context.Context) NodeConfigurationAksEphemeralOsDiskOutput
}

type NodeConfigurationAksEphemeralOsDiskArgs struct {
	// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
	Cache pulumi.StringPtrInput `pulumi:"cache"`
	// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
	Placement pulumi.StringInput `pulumi:"placement"`
}

func (NodeConfigurationAksEphemeralOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskOutput() NodeConfigurationAksEphemeralOsDiskOutput {
	return i.ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(context.Background())
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksEphemeralOsDiskOutput)
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return i.ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksEphemeralOsDiskOutput).ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx)
}

// NodeConfigurationAksEphemeralOsDiskPtrInput is an input type that accepts NodeConfigurationAksEphemeralOsDiskArgs, NodeConfigurationAksEphemeralOsDiskPtr and NodeConfigurationAksEphemeralOsDiskPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationAksEphemeralOsDiskPtrInput` via:
//
//	        NodeConfigurationAksEphemeralOsDiskArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationAksEphemeralOsDiskPtrInput interface {
	pulumi.Input

	ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput
	ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput
}

type nodeConfigurationAksEphemeralOsDiskPtrType NodeConfigurationAksEphemeralOsDiskArgs

func NodeConfigurationAksEphemeralOsDiskPtr(v *NodeConfigurationAksEphemeralOsDiskArgs) NodeConfigurationAksEphemeralOsDiskPtrInput {
	return (*nodeConfigurationAksEphemeralOsDiskPtrType)(v)
}

func (*nodeConfigurationAksEphemeralOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (i *nodeConfigurationAksEphemeralOsDiskPtrType) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return i.ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationAksEphemeralOsDiskPtrType) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

type NodeConfigurationAksEphemeralOsDiskOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksEphemeralOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskOutput() NodeConfigurationAksEphemeralOsDiskOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationAksEphemeralOsDisk) *NodeConfigurationAksEphemeralOsDisk {
		return &v
	}).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
func (o NodeConfigurationAksEphemeralOsDiskOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksEphemeralOsDisk) *string { return v.Cache }).(pulumi.StringPtrOutput)
}

// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
func (o NodeConfigurationAksEphemeralOsDiskOutput) Placement() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationAksEphemeralOsDisk) string { return v.Placement }).(pulumi.StringOutput)
}

type NodeConfigurationAksEphemeralOsDiskPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksEphemeralOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) Elem() NodeConfigurationAksEphemeralOsDiskOutput {
	return o.ApplyT(func(v *NodeConfigurationAksEphemeralOsDisk) NodeConfigurationAksEphemeralOsDisk {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationAksEphemeralOsDisk
		return ret
	}).(NodeConfigurationAksEphemeralOsDiskOutput)
}

// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAksEphemeralOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Cache
	}).(pulumi.StringPtrOutput)
}

// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) Placement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAksEphemeralOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Placement
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationAksLoadbalancer struct {
	// The full ID of the load balancer in azure.
	Id *string `pulumi:"id"`
	// IP based backend pools configuration for CAST provisioned nodes
	IpBasedBackendPools []NodeConfigurationAksLoadbalancerIpBasedBackendPool `pulumi:"ipBasedBackendPools"`
	// Name of load balancer
	//
	// Deprecated: name field is deprecated, use ID instead. Will be removed in future versions.
	Name *string `pulumi:"name"`
	// NIC based backend pools configuration for CAST provisioned nodes.
	NicBasedBackendPools []NodeConfigurationAksLoadbalancerNicBasedBackendPool `pulumi:"nicBasedBackendPools"`
}

// NodeConfigurationAksLoadbalancerInput is an input type that accepts NodeConfigurationAksLoadbalancerArgs and NodeConfigurationAksLoadbalancerOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerInput` via:
//
//	NodeConfigurationAksLoadbalancerArgs{...}
type NodeConfigurationAksLoadbalancerInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerOutput() NodeConfigurationAksLoadbalancerOutput
	ToNodeConfigurationAksLoadbalancerOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerOutput
}

type NodeConfigurationAksLoadbalancerArgs struct {
	// The full ID of the load balancer in azure.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP based backend pools configuration for CAST provisioned nodes
	IpBasedBackendPools NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput `pulumi:"ipBasedBackendPools"`
	// Name of load balancer
	//
	// Deprecated: name field is deprecated, use ID instead. Will be removed in future versions.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// NIC based backend pools configuration for CAST provisioned nodes.
	NicBasedBackendPools NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput `pulumi:"nicBasedBackendPools"`
}

func (NodeConfigurationAksLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerArgs) ToNodeConfigurationAksLoadbalancerOutput() NodeConfigurationAksLoadbalancerOutput {
	return i.ToNodeConfigurationAksLoadbalancerOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerArgs) ToNodeConfigurationAksLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerOutput)
}

// NodeConfigurationAksLoadbalancerArrayInput is an input type that accepts NodeConfigurationAksLoadbalancerArray and NodeConfigurationAksLoadbalancerArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerArrayInput` via:
//
//	NodeConfigurationAksLoadbalancerArray{ NodeConfigurationAksLoadbalancerArgs{...} }
type NodeConfigurationAksLoadbalancerArrayInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerArrayOutput() NodeConfigurationAksLoadbalancerArrayOutput
	ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerArrayOutput
}

type NodeConfigurationAksLoadbalancerArray []NodeConfigurationAksLoadbalancerInput

func (NodeConfigurationAksLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerArray) ToNodeConfigurationAksLoadbalancerArrayOutput() NodeConfigurationAksLoadbalancerArrayOutput {
	return i.ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerArray) ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerArrayOutput)
}

type NodeConfigurationAksLoadbalancerOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerOutput) ToNodeConfigurationAksLoadbalancerOutput() NodeConfigurationAksLoadbalancerOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerOutput) ToNodeConfigurationAksLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerOutput {
	return o
}

// The full ID of the load balancer in azure.
func (o NodeConfigurationAksLoadbalancerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP based backend pools configuration for CAST provisioned nodes
func (o NodeConfigurationAksLoadbalancerOutput) IpBasedBackendPools() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) []NodeConfigurationAksLoadbalancerIpBasedBackendPool {
		return v.IpBasedBackendPools
	}).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput)
}

// Name of load balancer
//
// Deprecated: name field is deprecated, use ID instead. Will be removed in future versions.
func (o NodeConfigurationAksLoadbalancerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// NIC based backend pools configuration for CAST provisioned nodes.
func (o NodeConfigurationAksLoadbalancerOutput) NicBasedBackendPools() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) []NodeConfigurationAksLoadbalancerNicBasedBackendPool {
		return v.NicBasedBackendPools
	}).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput)
}

type NodeConfigurationAksLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerArrayOutput) ToNodeConfigurationAksLoadbalancerArrayOutput() NodeConfigurationAksLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerArrayOutput) ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerArrayOutput) Index(i pulumi.IntInput) NodeConfigurationAksLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationAksLoadbalancer {
		return vs[0].([]NodeConfigurationAksLoadbalancer)[vs[1].(int)]
	}).(NodeConfigurationAksLoadbalancerOutput)
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPool struct {
	// Name of the ip based backend pool
	Name string `pulumi:"name"`
}

// NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput is an input type that accepts NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs and NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput` via:
//
//	NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs{...}
type NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput
	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs struct {
	// Name of the ip based backend pool
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return i.ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput)
}

// NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput is an input type that accepts NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray and NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput` via:
//
//	NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray{ NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs{...} }
type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput
	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray []NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return i.ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput)
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return o
}

// Name of the ip based backend pool
func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancerIpBasedBackendPool) string { return v.Name }).(pulumi.StringOutput)
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) Index(i pulumi.IntInput) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationAksLoadbalancerIpBasedBackendPool {
		return vs[0].([]NodeConfigurationAksLoadbalancerIpBasedBackendPool)[vs[1].(int)]
	}).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput)
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPool struct {
	// Name of the NIC based backend pool
	Name string `pulumi:"name"`
}

// NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput is an input type that accepts NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs and NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput` via:
//
//	NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs{...}
type NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput
	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs struct {
	// Name of the NIC based backend pool
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return i.ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput)
}

// NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput is an input type that accepts NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray and NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput` via:
//
//	NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray{ NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs{...} }
type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput
	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray []NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return i.ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput)
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return o
}

// Name of the NIC based backend pool
func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancerNicBasedBackendPool) string { return v.Name }).(pulumi.StringOutput)
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) Index(i pulumi.IntInput) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationAksLoadbalancerNicBasedBackendPool {
		return vs[0].([]NodeConfigurationAksLoadbalancerNicBasedBackendPool)[vs[1].(int)]
	}).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput)
}

type NodeConfigurationAksPublicIp struct {
	// Idle timeout in minutes for public IP
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Public IP prefix to be used for provisioned nodes
	PublicIpPrefix *string           `pulumi:"publicIpPrefix"`
	Tags           map[string]string `pulumi:"tags"`
}

// NodeConfigurationAksPublicIpInput is an input type that accepts NodeConfigurationAksPublicIpArgs and NodeConfigurationAksPublicIpOutput values.
// You can construct a concrete instance of `NodeConfigurationAksPublicIpInput` via:
//
//	NodeConfigurationAksPublicIpArgs{...}
type NodeConfigurationAksPublicIpInput interface {
	pulumi.Input

	ToNodeConfigurationAksPublicIpOutput() NodeConfigurationAksPublicIpOutput
	ToNodeConfigurationAksPublicIpOutputWithContext(context.Context) NodeConfigurationAksPublicIpOutput
}

type NodeConfigurationAksPublicIpArgs struct {
	// Idle timeout in minutes for public IP
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Public IP prefix to be used for provisioned nodes
	PublicIpPrefix pulumi.StringPtrInput `pulumi:"publicIpPrefix"`
	Tags           pulumi.StringMapInput `pulumi:"tags"`
}

func (NodeConfigurationAksPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksPublicIp)(nil)).Elem()
}

func (i NodeConfigurationAksPublicIpArgs) ToNodeConfigurationAksPublicIpOutput() NodeConfigurationAksPublicIpOutput {
	return i.ToNodeConfigurationAksPublicIpOutputWithContext(context.Background())
}

func (i NodeConfigurationAksPublicIpArgs) ToNodeConfigurationAksPublicIpOutputWithContext(ctx context.Context) NodeConfigurationAksPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksPublicIpOutput)
}

func (i NodeConfigurationAksPublicIpArgs) ToNodeConfigurationAksPublicIpPtrOutput() NodeConfigurationAksPublicIpPtrOutput {
	return i.ToNodeConfigurationAksPublicIpPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationAksPublicIpArgs) ToNodeConfigurationAksPublicIpPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksPublicIpOutput).ToNodeConfigurationAksPublicIpPtrOutputWithContext(ctx)
}

// NodeConfigurationAksPublicIpPtrInput is an input type that accepts NodeConfigurationAksPublicIpArgs, NodeConfigurationAksPublicIpPtr and NodeConfigurationAksPublicIpPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationAksPublicIpPtrInput` via:
//
//	        NodeConfigurationAksPublicIpArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationAksPublicIpPtrInput interface {
	pulumi.Input

	ToNodeConfigurationAksPublicIpPtrOutput() NodeConfigurationAksPublicIpPtrOutput
	ToNodeConfigurationAksPublicIpPtrOutputWithContext(context.Context) NodeConfigurationAksPublicIpPtrOutput
}

type nodeConfigurationAksPublicIpPtrType NodeConfigurationAksPublicIpArgs

func NodeConfigurationAksPublicIpPtr(v *NodeConfigurationAksPublicIpArgs) NodeConfigurationAksPublicIpPtrInput {
	return (*nodeConfigurationAksPublicIpPtrType)(v)
}

func (*nodeConfigurationAksPublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAksPublicIp)(nil)).Elem()
}

func (i *nodeConfigurationAksPublicIpPtrType) ToNodeConfigurationAksPublicIpPtrOutput() NodeConfigurationAksPublicIpPtrOutput {
	return i.ToNodeConfigurationAksPublicIpPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationAksPublicIpPtrType) ToNodeConfigurationAksPublicIpPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksPublicIpPtrOutput)
}

type NodeConfigurationAksPublicIpOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksPublicIp)(nil)).Elem()
}

func (o NodeConfigurationAksPublicIpOutput) ToNodeConfigurationAksPublicIpOutput() NodeConfigurationAksPublicIpOutput {
	return o
}

func (o NodeConfigurationAksPublicIpOutput) ToNodeConfigurationAksPublicIpOutputWithContext(ctx context.Context) NodeConfigurationAksPublicIpOutput {
	return o
}

func (o NodeConfigurationAksPublicIpOutput) ToNodeConfigurationAksPublicIpPtrOutput() NodeConfigurationAksPublicIpPtrOutput {
	return o.ToNodeConfigurationAksPublicIpPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationAksPublicIpOutput) ToNodeConfigurationAksPublicIpPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPublicIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationAksPublicIp) *NodeConfigurationAksPublicIp {
		return &v
	}).(NodeConfigurationAksPublicIpPtrOutput)
}

// Idle timeout in minutes for public IP
func (o NodeConfigurationAksPublicIpOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksPublicIp) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Public IP prefix to be used for provisioned nodes
func (o NodeConfigurationAksPublicIpOutput) PublicIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksPublicIp) *string { return v.PublicIpPrefix }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationAksPublicIpOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodeConfigurationAksPublicIp) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NodeConfigurationAksPublicIpPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksPublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAksPublicIp)(nil)).Elem()
}

func (o NodeConfigurationAksPublicIpPtrOutput) ToNodeConfigurationAksPublicIpPtrOutput() NodeConfigurationAksPublicIpPtrOutput {
	return o
}

func (o NodeConfigurationAksPublicIpPtrOutput) ToNodeConfigurationAksPublicIpPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPublicIpPtrOutput {
	return o
}

func (o NodeConfigurationAksPublicIpPtrOutput) Elem() NodeConfigurationAksPublicIpOutput {
	return o.ApplyT(func(v *NodeConfigurationAksPublicIp) NodeConfigurationAksPublicIp {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationAksPublicIp
		return ret
	}).(NodeConfigurationAksPublicIpOutput)
}

// Idle timeout in minutes for public IP
func (o NodeConfigurationAksPublicIpPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAksPublicIp) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Public IP prefix to be used for provisioned nodes
func (o NodeConfigurationAksPublicIpPtrOutput) PublicIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAksPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpPrefix
	}).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationAksPublicIpPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodeConfigurationAksPublicIp) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type NodeConfigurationEks struct {
	// IP address to use for DNS queries within the cluster
	DnsClusterIp *string `pulumi:"dnsClusterIp"`
	// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
	EksImageFamily *string `pulumi:"eksImageFamily"`
	// Allow configure the IMDSv2 hop limit, the default is 2
	ImdsHopLimit *int `pulumi:"imdsHopLimit"`
	// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
	ImdsV1 *bool `pulumi:"imdsV1"`
	// Cluster's instance profile ARN used for CAST provisioned nodes
	InstanceProfileArn string `pulumi:"instanceProfileArn"`
	// Number of IPs per prefix to be used for calculating max pods.
	IpsPerPrefix *int `pulumi:"ipsPerPrefix"`
	// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
	KeyPairId *string `pulumi:"keyPairId"`
	// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
	MaxPodsPerNodeFormula *string `pulumi:"maxPodsPerNodeFormula"`
	// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
	NodeGroupArn *string `pulumi:"nodeGroupArn"`
	// Cluster's security groups configuration for CAST provisioned nodes
	SecurityGroups []string `pulumi:"securityGroups"`
	// AWS target groups configuration for CAST provisioned nodes
	TargetGroups []NodeConfigurationEksTargetGroup `pulumi:"targetGroups"`
	// Number of threads per core.
	ThreadsPerCpu *int `pulumi:"threadsPerCpu"`
	// AWS EBS volume IOPS to be used for CAST provisioned nodes
	VolumeIops *int `pulumi:"volumeIops"`
	// AWS KMS key ARN for encrypting EBS volume attached to the node
	VolumeKmsKeyArn *string `pulumi:"volumeKmsKeyArn"`
	// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
	VolumeThroughput *int `pulumi:"volumeThroughput"`
	// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
	VolumeType *string `pulumi:"volumeType"`
}

// NodeConfigurationEksInput is an input type that accepts NodeConfigurationEksArgs and NodeConfigurationEksOutput values.
// You can construct a concrete instance of `NodeConfigurationEksInput` via:
//
//	NodeConfigurationEksArgs{...}
type NodeConfigurationEksInput interface {
	pulumi.Input

	ToNodeConfigurationEksOutput() NodeConfigurationEksOutput
	ToNodeConfigurationEksOutputWithContext(context.Context) NodeConfigurationEksOutput
}

type NodeConfigurationEksArgs struct {
	// IP address to use for DNS queries within the cluster
	DnsClusterIp pulumi.StringPtrInput `pulumi:"dnsClusterIp"`
	// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
	EksImageFamily pulumi.StringPtrInput `pulumi:"eksImageFamily"`
	// Allow configure the IMDSv2 hop limit, the default is 2
	ImdsHopLimit pulumi.IntPtrInput `pulumi:"imdsHopLimit"`
	// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
	ImdsV1 pulumi.BoolPtrInput `pulumi:"imdsV1"`
	// Cluster's instance profile ARN used for CAST provisioned nodes
	InstanceProfileArn pulumi.StringInput `pulumi:"instanceProfileArn"`
	// Number of IPs per prefix to be used for calculating max pods.
	IpsPerPrefix pulumi.IntPtrInput `pulumi:"ipsPerPrefix"`
	// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
	KeyPairId pulumi.StringPtrInput `pulumi:"keyPairId"`
	// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
	MaxPodsPerNodeFormula pulumi.StringPtrInput `pulumi:"maxPodsPerNodeFormula"`
	// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
	NodeGroupArn pulumi.StringPtrInput `pulumi:"nodeGroupArn"`
	// Cluster's security groups configuration for CAST provisioned nodes
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// AWS target groups configuration for CAST provisioned nodes
	TargetGroups NodeConfigurationEksTargetGroupArrayInput `pulumi:"targetGroups"`
	// Number of threads per core.
	ThreadsPerCpu pulumi.IntPtrInput `pulumi:"threadsPerCpu"`
	// AWS EBS volume IOPS to be used for CAST provisioned nodes
	VolumeIops pulumi.IntPtrInput `pulumi:"volumeIops"`
	// AWS KMS key ARN for encrypting EBS volume attached to the node
	VolumeKmsKeyArn pulumi.StringPtrInput `pulumi:"volumeKmsKeyArn"`
	// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
	VolumeThroughput pulumi.IntPtrInput `pulumi:"volumeThroughput"`
	// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (NodeConfigurationEksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEks)(nil)).Elem()
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksOutput() NodeConfigurationEksOutput {
	return i.ToNodeConfigurationEksOutputWithContext(context.Background())
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksOutputWithContext(ctx context.Context) NodeConfigurationEksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksOutput)
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return i.ToNodeConfigurationEksPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksOutput).ToNodeConfigurationEksPtrOutputWithContext(ctx)
}

// NodeConfigurationEksPtrInput is an input type that accepts NodeConfigurationEksArgs, NodeConfigurationEksPtr and NodeConfigurationEksPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationEksPtrInput` via:
//
//	        NodeConfigurationEksArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationEksPtrInput interface {
	pulumi.Input

	ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput
	ToNodeConfigurationEksPtrOutputWithContext(context.Context) NodeConfigurationEksPtrOutput
}

type nodeConfigurationEksPtrType NodeConfigurationEksArgs

func NodeConfigurationEksPtr(v *NodeConfigurationEksArgs) NodeConfigurationEksPtrInput {
	return (*nodeConfigurationEksPtrType)(v)
}

func (*nodeConfigurationEksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationEks)(nil)).Elem()
}

func (i *nodeConfigurationEksPtrType) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return i.ToNodeConfigurationEksPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationEksPtrType) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksPtrOutput)
}

type NodeConfigurationEksOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEks)(nil)).Elem()
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksOutput() NodeConfigurationEksOutput {
	return o
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksOutputWithContext(ctx context.Context) NodeConfigurationEksOutput {
	return o
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return o.ToNodeConfigurationEksPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationEks) *NodeConfigurationEks {
		return &v
	}).(NodeConfigurationEksPtrOutput)
}

// IP address to use for DNS queries within the cluster
func (o NodeConfigurationEksOutput) DnsClusterIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.DnsClusterIp }).(pulumi.StringPtrOutput)
}

// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
func (o NodeConfigurationEksOutput) EksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.EksImageFamily }).(pulumi.StringPtrOutput)
}

// Allow configure the IMDSv2 hop limit, the default is 2
func (o NodeConfigurationEksOutput) ImdsHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *int { return v.ImdsHopLimit }).(pulumi.IntPtrOutput)
}

// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
func (o NodeConfigurationEksOutput) ImdsV1() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *bool { return v.ImdsV1 }).(pulumi.BoolPtrOutput)
}

// Cluster's instance profile ARN used for CAST provisioned nodes
func (o NodeConfigurationEksOutput) InstanceProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationEks) string { return v.InstanceProfileArn }).(pulumi.StringOutput)
}

// Number of IPs per prefix to be used for calculating max pods.
func (o NodeConfigurationEksOutput) IpsPerPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *int { return v.IpsPerPrefix }).(pulumi.IntPtrOutput)
}

// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
func (o NodeConfigurationEksOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.KeyPairId }).(pulumi.StringPtrOutput)
}

// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
func (o NodeConfigurationEksOutput) MaxPodsPerNodeFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.MaxPodsPerNodeFormula }).(pulumi.StringPtrOutput)
}

// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
func (o NodeConfigurationEksOutput) NodeGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.NodeGroupArn }).(pulumi.StringPtrOutput)
}

// Cluster's security groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationEks) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// AWS target groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksOutput) TargetGroups() NodeConfigurationEksTargetGroupArrayOutput {
	return o.ApplyT(func(v NodeConfigurationEks) []NodeConfigurationEksTargetGroup { return v.TargetGroups }).(NodeConfigurationEksTargetGroupArrayOutput)
}

// Number of threads per core.
func (o NodeConfigurationEksOutput) ThreadsPerCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *int { return v.ThreadsPerCpu }).(pulumi.IntPtrOutput)
}

// AWS EBS volume IOPS to be used for CAST provisioned nodes
func (o NodeConfigurationEksOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *int { return v.VolumeIops }).(pulumi.IntPtrOutput)
}

// AWS KMS key ARN for encrypting EBS volume attached to the node
func (o NodeConfigurationEksOutput) VolumeKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.VolumeKmsKeyArn }).(pulumi.StringPtrOutput)
}

// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
func (o NodeConfigurationEksOutput) VolumeThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *int { return v.VolumeThroughput }).(pulumi.IntPtrOutput)
}

// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
func (o NodeConfigurationEksOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type NodeConfigurationEksPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationEks)(nil)).Elem()
}

func (o NodeConfigurationEksPtrOutput) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return o
}

func (o NodeConfigurationEksPtrOutput) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return o
}

func (o NodeConfigurationEksPtrOutput) Elem() NodeConfigurationEksOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) NodeConfigurationEks {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationEks
		return ret
	}).(NodeConfigurationEksOutput)
}

// IP address to use for DNS queries within the cluster
func (o NodeConfigurationEksPtrOutput) DnsClusterIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.DnsClusterIp
	}).(pulumi.StringPtrOutput)
}

// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
func (o NodeConfigurationEksPtrOutput) EksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.EksImageFamily
	}).(pulumi.StringPtrOutput)
}

// Allow configure the IMDSv2 hop limit, the default is 2
func (o NodeConfigurationEksPtrOutput) ImdsHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *int {
		if v == nil {
			return nil
		}
		return v.ImdsHopLimit
	}).(pulumi.IntPtrOutput)
}

// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
func (o NodeConfigurationEksPtrOutput) ImdsV1() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *bool {
		if v == nil {
			return nil
		}
		return v.ImdsV1
	}).(pulumi.BoolPtrOutput)
}

// Cluster's instance profile ARN used for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) InstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceProfileArn
	}).(pulumi.StringPtrOutput)
}

// Number of IPs per prefix to be used for calculating max pods.
func (o NodeConfigurationEksPtrOutput) IpsPerPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *int {
		if v == nil {
			return nil
		}
		return v.IpsPerPrefix
	}).(pulumi.IntPtrOutput)
}

// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
func (o NodeConfigurationEksPtrOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.KeyPairId
	}).(pulumi.StringPtrOutput)
}

// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
func (o NodeConfigurationEksPtrOutput) MaxPodsPerNodeFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNodeFormula
	}).(pulumi.StringPtrOutput)
}

// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
func (o NodeConfigurationEksPtrOutput) NodeGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.NodeGroupArn
	}).(pulumi.StringPtrOutput)
}

// Cluster's security groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// AWS target groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) TargetGroups() NodeConfigurationEksTargetGroupArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) []NodeConfigurationEksTargetGroup {
		if v == nil {
			return nil
		}
		return v.TargetGroups
	}).(NodeConfigurationEksTargetGroupArrayOutput)
}

// Number of threads per core.
func (o NodeConfigurationEksPtrOutput) ThreadsPerCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *int {
		if v == nil {
			return nil
		}
		return v.ThreadsPerCpu
	}).(pulumi.IntPtrOutput)
}

// AWS EBS volume IOPS to be used for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *int {
		if v == nil {
			return nil
		}
		return v.VolumeIops
	}).(pulumi.IntPtrOutput)
}

// AWS KMS key ARN for encrypting EBS volume attached to the node
func (o NodeConfigurationEksPtrOutput) VolumeKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.VolumeKmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) VolumeThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *int {
		if v == nil {
			return nil
		}
		return v.VolumeThroughput
	}).(pulumi.IntPtrOutput)
}

// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
func (o NodeConfigurationEksPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationEksTargetGroup struct {
	// AWS target group ARN for CAST provisioned nodes
	Arn string `pulumi:"arn"`
	// Port for AWS target group for CAST provisioned nodes
	Port *int `pulumi:"port"`
}

// NodeConfigurationEksTargetGroupInput is an input type that accepts NodeConfigurationEksTargetGroupArgs and NodeConfigurationEksTargetGroupOutput values.
// You can construct a concrete instance of `NodeConfigurationEksTargetGroupInput` via:
//
//	NodeConfigurationEksTargetGroupArgs{...}
type NodeConfigurationEksTargetGroupInput interface {
	pulumi.Input

	ToNodeConfigurationEksTargetGroupOutput() NodeConfigurationEksTargetGroupOutput
	ToNodeConfigurationEksTargetGroupOutputWithContext(context.Context) NodeConfigurationEksTargetGroupOutput
}

type NodeConfigurationEksTargetGroupArgs struct {
	// AWS target group ARN for CAST provisioned nodes
	Arn pulumi.StringInput `pulumi:"arn"`
	// Port for AWS target group for CAST provisioned nodes
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (NodeConfigurationEksTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (i NodeConfigurationEksTargetGroupArgs) ToNodeConfigurationEksTargetGroupOutput() NodeConfigurationEksTargetGroupOutput {
	return i.ToNodeConfigurationEksTargetGroupOutputWithContext(context.Background())
}

func (i NodeConfigurationEksTargetGroupArgs) ToNodeConfigurationEksTargetGroupOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksTargetGroupOutput)
}

// NodeConfigurationEksTargetGroupArrayInput is an input type that accepts NodeConfigurationEksTargetGroupArray and NodeConfigurationEksTargetGroupArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationEksTargetGroupArrayInput` via:
//
//	NodeConfigurationEksTargetGroupArray{ NodeConfigurationEksTargetGroupArgs{...} }
type NodeConfigurationEksTargetGroupArrayInput interface {
	pulumi.Input

	ToNodeConfigurationEksTargetGroupArrayOutput() NodeConfigurationEksTargetGroupArrayOutput
	ToNodeConfigurationEksTargetGroupArrayOutputWithContext(context.Context) NodeConfigurationEksTargetGroupArrayOutput
}

type NodeConfigurationEksTargetGroupArray []NodeConfigurationEksTargetGroupInput

func (NodeConfigurationEksTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (i NodeConfigurationEksTargetGroupArray) ToNodeConfigurationEksTargetGroupArrayOutput() NodeConfigurationEksTargetGroupArrayOutput {
	return i.ToNodeConfigurationEksTargetGroupArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationEksTargetGroupArray) ToNodeConfigurationEksTargetGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksTargetGroupArrayOutput)
}

type NodeConfigurationEksTargetGroupOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (o NodeConfigurationEksTargetGroupOutput) ToNodeConfigurationEksTargetGroupOutput() NodeConfigurationEksTargetGroupOutput {
	return o
}

func (o NodeConfigurationEksTargetGroupOutput) ToNodeConfigurationEksTargetGroupOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupOutput {
	return o
}

// AWS target group ARN for CAST provisioned nodes
func (o NodeConfigurationEksTargetGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationEksTargetGroup) string { return v.Arn }).(pulumi.StringOutput)
}

// Port for AWS target group for CAST provisioned nodes
func (o NodeConfigurationEksTargetGroupOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEksTargetGroup) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type NodeConfigurationEksTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (o NodeConfigurationEksTargetGroupArrayOutput) ToNodeConfigurationEksTargetGroupArrayOutput() NodeConfigurationEksTargetGroupArrayOutput {
	return o
}

func (o NodeConfigurationEksTargetGroupArrayOutput) ToNodeConfigurationEksTargetGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupArrayOutput {
	return o
}

func (o NodeConfigurationEksTargetGroupArrayOutput) Index(i pulumi.IntInput) NodeConfigurationEksTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationEksTargetGroup {
		return vs[0].([]NodeConfigurationEksTargetGroup)[vs[1].(int)]
	}).(NodeConfigurationEksTargetGroupOutput)
}

type NodeConfigurationGke struct {
	// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
	DiskType *string `pulumi:"diskType"`
	// Loadboalancer configuration for CAST provisioned nodes
	Loadbalancers []NodeConfigurationGkeLoadbalancer `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
	// This is an advanced configuration field. In general, we recommend using maxPodsPerNode instead.
	// This field accepts a formula to calculate the maximum number of pods that can run on a node. This will affect the pod CIDR range that the node reserves. The following variables are available for use in the formula and will be bound to numeric values before evaluation:
	//
	//     * NUM_CPU - Number of CPUs available on the node
	//     * NUM_RAM_GB - Amount of RAM in gigabytes available on the node.
	//
	// If you want the smallest value between 5 times the CPUs, 5 times the RAM, or a cap of 110, your formula would be math.least(110, 5 \* NUM_CPU, 5 \* NUM_RAM_GB).
	// For a node with 8 CPUs and 16 GB RAM, this calculates to 40 (5×8), 80 (5×16), and 110, then picks the smallest value: 40 pods.
	MaxPodsPerNodeFormula *string `pulumi:"maxPodsPerNodeFormula"`
	// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
	NetworkTags []string `pulumi:"networkTags"`
	// Maintenance behavior of the instances. If not set, the default value for spot nodes is terminate, and for non-spot nodes, it is migrate.
	OnHostMaintenance *string `pulumi:"onHostMaintenance"`
	// Secondary IP range configuration for pods in GKE nodes
	SecondaryIpRange *NodeConfigurationGkeSecondaryIpRange `pulumi:"secondaryIpRange"`
	// Use ephemeral storage local SSD. Defaults to false
	UseEphemeralStorageLocalSsd *bool `pulumi:"useEphemeralStorageLocalSsd"`
	// List of preferred availability zones to choose from when provisioning new nodes.
	//
	// Deprecated: The argument will be moved into node template.
	Zones []string `pulumi:"zones"`
}

// NodeConfigurationGkeInput is an input type that accepts NodeConfigurationGkeArgs and NodeConfigurationGkeOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeInput` via:
//
//	NodeConfigurationGkeArgs{...}
type NodeConfigurationGkeInput interface {
	pulumi.Input

	ToNodeConfigurationGkeOutput() NodeConfigurationGkeOutput
	ToNodeConfigurationGkeOutputWithContext(context.Context) NodeConfigurationGkeOutput
}

type NodeConfigurationGkeArgs struct {
	// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Loadboalancer configuration for CAST provisioned nodes
	Loadbalancers NodeConfigurationGkeLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
	// This is an advanced configuration field. In general, we recommend using maxPodsPerNode instead.
	// This field accepts a formula to calculate the maximum number of pods that can run on a node. This will affect the pod CIDR range that the node reserves. The following variables are available for use in the formula and will be bound to numeric values before evaluation:
	//
	//     * NUM_CPU - Number of CPUs available on the node
	//     * NUM_RAM_GB - Amount of RAM in gigabytes available on the node.
	//
	// If you want the smallest value between 5 times the CPUs, 5 times the RAM, or a cap of 110, your formula would be math.least(110, 5 \* NUM_CPU, 5 \* NUM_RAM_GB).
	// For a node with 8 CPUs and 16 GB RAM, this calculates to 40 (5×8), 80 (5×16), and 110, then picks the smallest value: 40 pods.
	MaxPodsPerNodeFormula pulumi.StringPtrInput `pulumi:"maxPodsPerNodeFormula"`
	// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// Maintenance behavior of the instances. If not set, the default value for spot nodes is terminate, and for non-spot nodes, it is migrate.
	OnHostMaintenance pulumi.StringPtrInput `pulumi:"onHostMaintenance"`
	// Secondary IP range configuration for pods in GKE nodes
	SecondaryIpRange NodeConfigurationGkeSecondaryIpRangePtrInput `pulumi:"secondaryIpRange"`
	// Use ephemeral storage local SSD. Defaults to false
	UseEphemeralStorageLocalSsd pulumi.BoolPtrInput `pulumi:"useEphemeralStorageLocalSsd"`
	// List of preferred availability zones to choose from when provisioning new nodes.
	//
	// Deprecated: The argument will be moved into node template.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (NodeConfigurationGkeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGke)(nil)).Elem()
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkeOutput() NodeConfigurationGkeOutput {
	return i.ToNodeConfigurationGkeOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkeOutputWithContext(ctx context.Context) NodeConfigurationGkeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeOutput)
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return i.ToNodeConfigurationGkePtrOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeOutput).ToNodeConfigurationGkePtrOutputWithContext(ctx)
}

// NodeConfigurationGkePtrInput is an input type that accepts NodeConfigurationGkeArgs, NodeConfigurationGkePtr and NodeConfigurationGkePtrOutput values.
// You can construct a concrete instance of `NodeConfigurationGkePtrInput` via:
//
//	        NodeConfigurationGkeArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationGkePtrInput interface {
	pulumi.Input

	ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput
	ToNodeConfigurationGkePtrOutputWithContext(context.Context) NodeConfigurationGkePtrOutput
}

type nodeConfigurationGkePtrType NodeConfigurationGkeArgs

func NodeConfigurationGkePtr(v *NodeConfigurationGkeArgs) NodeConfigurationGkePtrInput {
	return (*nodeConfigurationGkePtrType)(v)
}

func (*nodeConfigurationGkePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationGke)(nil)).Elem()
}

func (i *nodeConfigurationGkePtrType) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return i.ToNodeConfigurationGkePtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationGkePtrType) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkePtrOutput)
}

type NodeConfigurationGkeOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGke)(nil)).Elem()
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkeOutput() NodeConfigurationGkeOutput {
	return o
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkeOutputWithContext(ctx context.Context) NodeConfigurationGkeOutput {
	return o
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return o.ToNodeConfigurationGkePtrOutputWithContext(context.Background())
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationGke) *NodeConfigurationGke {
		return &v
	}).(NodeConfigurationGkePtrOutput)
}

// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
func (o NodeConfigurationGkeOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Loadboalancer configuration for CAST provisioned nodes
func (o NodeConfigurationGkeOutput) Loadbalancers() NodeConfigurationGkeLoadbalancerArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGke) []NodeConfigurationGkeLoadbalancer { return v.Loadbalancers }).(NodeConfigurationGkeLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
func (o NodeConfigurationGkeOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// This is an advanced configuration field. In general, we recommend using maxPodsPerNode instead.
// This field accepts a formula to calculate the maximum number of pods that can run on a node. This will affect the pod CIDR range that the node reserves. The following variables are available for use in the formula and will be bound to numeric values before evaluation:
//
//   - NUM_CPU - Number of CPUs available on the node
//   - NUM_RAM_GB - Amount of RAM in gigabytes available on the node.
//
// If you want the smallest value between 5 times the CPUs, 5 times the RAM, or a cap of 110, your formula would be math.least(110, 5 \* NUM_CPU, 5 \* NUM_RAM_GB).
// For a node with 8 CPUs and 16 GB RAM, this calculates to 40 (5×8), 80 (5×16), and 110, then picks the smallest value: 40 pods.
func (o NodeConfigurationGkeOutput) MaxPodsPerNodeFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *string { return v.MaxPodsPerNodeFormula }).(pulumi.StringPtrOutput)
}

// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
func (o NodeConfigurationGkeOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGke) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// Maintenance behavior of the instances. If not set, the default value for spot nodes is terminate, and for non-spot nodes, it is migrate.
func (o NodeConfigurationGkeOutput) OnHostMaintenance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *string { return v.OnHostMaintenance }).(pulumi.StringPtrOutput)
}

// Secondary IP range configuration for pods in GKE nodes
func (o NodeConfigurationGkeOutput) SecondaryIpRange() NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *NodeConfigurationGkeSecondaryIpRange { return v.SecondaryIpRange }).(NodeConfigurationGkeSecondaryIpRangePtrOutput)
}

// Use ephemeral storage local SSD. Defaults to false
func (o NodeConfigurationGkeOutput) UseEphemeralStorageLocalSsd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *bool { return v.UseEphemeralStorageLocalSsd }).(pulumi.BoolPtrOutput)
}

// List of preferred availability zones to choose from when provisioning new nodes.
//
// Deprecated: The argument will be moved into node template.
func (o NodeConfigurationGkeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGke) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type NodeConfigurationGkePtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationGke)(nil)).Elem()
}

func (o NodeConfigurationGkePtrOutput) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return o
}

func (o NodeConfigurationGkePtrOutput) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return o
}

func (o NodeConfigurationGkePtrOutput) Elem() NodeConfigurationGkeOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) NodeConfigurationGke {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationGke
		return ret
	}).(NodeConfigurationGkeOutput)
}

// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
func (o NodeConfigurationGkePtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// Loadboalancer configuration for CAST provisioned nodes
func (o NodeConfigurationGkePtrOutput) Loadbalancers() NodeConfigurationGkeLoadbalancerArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) []NodeConfigurationGkeLoadbalancer {
		if v == nil {
			return nil
		}
		return v.Loadbalancers
	}).(NodeConfigurationGkeLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
func (o NodeConfigurationGkePtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *int {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

// This is an advanced configuration field. In general, we recommend using maxPodsPerNode instead.
// This field accepts a formula to calculate the maximum number of pods that can run on a node. This will affect the pod CIDR range that the node reserves. The following variables are available for use in the formula and will be bound to numeric values before evaluation:
//
//   - NUM_CPU - Number of CPUs available on the node
//   - NUM_RAM_GB - Amount of RAM in gigabytes available on the node.
//
// If you want the smallest value between 5 times the CPUs, 5 times the RAM, or a cap of 110, your formula would be math.least(110, 5 \* NUM_CPU, 5 \* NUM_RAM_GB).
// For a node with 8 CPUs and 16 GB RAM, this calculates to 40 (5×8), 80 (5×16), and 110, then picks the smallest value: 40 pods.
func (o NodeConfigurationGkePtrOutput) MaxPodsPerNodeFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *string {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNodeFormula
	}).(pulumi.StringPtrOutput)
}

// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
func (o NodeConfigurationGkePtrOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) []string {
		if v == nil {
			return nil
		}
		return v.NetworkTags
	}).(pulumi.StringArrayOutput)
}

// Maintenance behavior of the instances. If not set, the default value for spot nodes is terminate, and for non-spot nodes, it is migrate.
func (o NodeConfigurationGkePtrOutput) OnHostMaintenance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *string {
		if v == nil {
			return nil
		}
		return v.OnHostMaintenance
	}).(pulumi.StringPtrOutput)
}

// Secondary IP range configuration for pods in GKE nodes
func (o NodeConfigurationGkePtrOutput) SecondaryIpRange() NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *NodeConfigurationGkeSecondaryIpRange {
		if v == nil {
			return nil
		}
		return v.SecondaryIpRange
	}).(NodeConfigurationGkeSecondaryIpRangePtrOutput)
}

// Use ephemeral storage local SSD. Defaults to false
func (o NodeConfigurationGkePtrOutput) UseEphemeralStorageLocalSsd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *bool {
		if v == nil {
			return nil
		}
		return v.UseEphemeralStorageLocalSsd
	}).(pulumi.BoolPtrOutput)
}

// List of preferred availability zones to choose from when provisioning new nodes.
//
// Deprecated: The argument will be moved into node template.
func (o NodeConfigurationGkePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type NodeConfigurationGkeLoadbalancer struct {
	// Target backend pools configuration for CAST provisioned nodes
	TargetBackendPools []NodeConfigurationGkeLoadbalancerTargetBackendPool `pulumi:"targetBackendPools"`
	// Unmanaged instance groups configuration for CAST provisioned nodes
	UnmanagedInstanceGroups []NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup `pulumi:"unmanagedInstanceGroups"`
}

// NodeConfigurationGkeLoadbalancerInput is an input type that accepts NodeConfigurationGkeLoadbalancerArgs and NodeConfigurationGkeLoadbalancerOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerInput` via:
//
//	NodeConfigurationGkeLoadbalancerArgs{...}
type NodeConfigurationGkeLoadbalancerInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerOutput() NodeConfigurationGkeLoadbalancerOutput
	ToNodeConfigurationGkeLoadbalancerOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerOutput
}

type NodeConfigurationGkeLoadbalancerArgs struct {
	// Target backend pools configuration for CAST provisioned nodes
	TargetBackendPools NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput `pulumi:"targetBackendPools"`
	// Unmanaged instance groups configuration for CAST provisioned nodes
	UnmanagedInstanceGroups NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput `pulumi:"unmanagedInstanceGroups"`
}

func (NodeConfigurationGkeLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerArgs) ToNodeConfigurationGkeLoadbalancerOutput() NodeConfigurationGkeLoadbalancerOutput {
	return i.ToNodeConfigurationGkeLoadbalancerOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerArgs) ToNodeConfigurationGkeLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerOutput)
}

// NodeConfigurationGkeLoadbalancerArrayInput is an input type that accepts NodeConfigurationGkeLoadbalancerArray and NodeConfigurationGkeLoadbalancerArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerArrayInput` via:
//
//	NodeConfigurationGkeLoadbalancerArray{ NodeConfigurationGkeLoadbalancerArgs{...} }
type NodeConfigurationGkeLoadbalancerArrayInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerArrayOutput() NodeConfigurationGkeLoadbalancerArrayOutput
	ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerArrayOutput
}

type NodeConfigurationGkeLoadbalancerArray []NodeConfigurationGkeLoadbalancerInput

func (NodeConfigurationGkeLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerArray) ToNodeConfigurationGkeLoadbalancerArrayOutput() NodeConfigurationGkeLoadbalancerArrayOutput {
	return i.ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerArray) ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerArrayOutput)
}

type NodeConfigurationGkeLoadbalancerOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerOutput) ToNodeConfigurationGkeLoadbalancerOutput() NodeConfigurationGkeLoadbalancerOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerOutput) ToNodeConfigurationGkeLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerOutput {
	return o
}

// Target backend pools configuration for CAST provisioned nodes
func (o NodeConfigurationGkeLoadbalancerOutput) TargetBackendPools() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancer) []NodeConfigurationGkeLoadbalancerTargetBackendPool {
		return v.TargetBackendPools
	}).(NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput)
}

// Unmanaged instance groups configuration for CAST provisioned nodes
func (o NodeConfigurationGkeLoadbalancerOutput) UnmanagedInstanceGroups() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancer) []NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup {
		return v.UnmanagedInstanceGroups
	}).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput)
}

type NodeConfigurationGkeLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerArrayOutput) ToNodeConfigurationGkeLoadbalancerArrayOutput() NodeConfigurationGkeLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerArrayOutput) ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerArrayOutput) Index(i pulumi.IntInput) NodeConfigurationGkeLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationGkeLoadbalancer {
		return vs[0].([]NodeConfigurationGkeLoadbalancer)[vs[1].(int)]
	}).(NodeConfigurationGkeLoadbalancerOutput)
}

type NodeConfigurationGkeLoadbalancerTargetBackendPool struct {
	// Name of the target group
	Name string `pulumi:"name"`
}

// NodeConfigurationGkeLoadbalancerTargetBackendPoolInput is an input type that accepts NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs and NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerTargetBackendPoolInput` via:
//
//	NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs{...}
type NodeConfigurationGkeLoadbalancerTargetBackendPoolInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput
	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs struct {
	// Name of the target group
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return i.ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput)
}

// NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput is an input type that accepts NodeConfigurationGkeLoadbalancerTargetBackendPoolArray and NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput` via:
//
//	NodeConfigurationGkeLoadbalancerTargetBackendPoolArray{ NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs{...} }
type NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput
	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolArray []NodeConfigurationGkeLoadbalancerTargetBackendPoolInput

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArray) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return i.ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArray) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput)
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return o
}

// Name of the target group
func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancerTargetBackendPool) string { return v.Name }).(pulumi.StringOutput)
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) Index(i pulumi.IntInput) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationGkeLoadbalancerTargetBackendPool {
		return vs[0].([]NodeConfigurationGkeLoadbalancerTargetBackendPool)[vs[1].(int)]
	}).(NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput)
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup struct {
	// Name of the instance group
	Name string `pulumi:"name"`
	// Zone of the instance group
	Zone string `pulumi:"zone"`
}

// NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput is an input type that accepts NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs and NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput` via:
//
//	NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs{...}
type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput
	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs struct {
	// Name of the instance group
	Name pulumi.StringInput `pulumi:"name"`
	// Zone of the instance group
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return i.ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput)
}

// NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput is an input type that accepts NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray and NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput` via:
//
//	NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray{ NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs{...} }
type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput
	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray []NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return i.ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput)
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return o
}

// Name of the instance group
func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Zone of the instance group
func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup) string { return v.Zone }).(pulumi.StringOutput)
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup {
		return vs[0].([]NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)[vs[1].(int)]
	}).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput)
}

type NodeConfigurationGkeSecondaryIpRange struct {
	// Name of the secondary IP range
	RangeName string `pulumi:"rangeName"`
}

// NodeConfigurationGkeSecondaryIpRangeInput is an input type that accepts NodeConfigurationGkeSecondaryIpRangeArgs and NodeConfigurationGkeSecondaryIpRangeOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeSecondaryIpRangeInput` via:
//
//	NodeConfigurationGkeSecondaryIpRangeArgs{...}
type NodeConfigurationGkeSecondaryIpRangeInput interface {
	pulumi.Input

	ToNodeConfigurationGkeSecondaryIpRangeOutput() NodeConfigurationGkeSecondaryIpRangeOutput
	ToNodeConfigurationGkeSecondaryIpRangeOutputWithContext(context.Context) NodeConfigurationGkeSecondaryIpRangeOutput
}

type NodeConfigurationGkeSecondaryIpRangeArgs struct {
	// Name of the secondary IP range
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (NodeConfigurationGkeSecondaryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeSecondaryIpRange)(nil)).Elem()
}

func (i NodeConfigurationGkeSecondaryIpRangeArgs) ToNodeConfigurationGkeSecondaryIpRangeOutput() NodeConfigurationGkeSecondaryIpRangeOutput {
	return i.ToNodeConfigurationGkeSecondaryIpRangeOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeSecondaryIpRangeArgs) ToNodeConfigurationGkeSecondaryIpRangeOutputWithContext(ctx context.Context) NodeConfigurationGkeSecondaryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeSecondaryIpRangeOutput)
}

func (i NodeConfigurationGkeSecondaryIpRangeArgs) ToNodeConfigurationGkeSecondaryIpRangePtrOutput() NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return i.ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeSecondaryIpRangeArgs) ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(ctx context.Context) NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeSecondaryIpRangeOutput).ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(ctx)
}

// NodeConfigurationGkeSecondaryIpRangePtrInput is an input type that accepts NodeConfigurationGkeSecondaryIpRangeArgs, NodeConfigurationGkeSecondaryIpRangePtr and NodeConfigurationGkeSecondaryIpRangePtrOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeSecondaryIpRangePtrInput` via:
//
//	        NodeConfigurationGkeSecondaryIpRangeArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationGkeSecondaryIpRangePtrInput interface {
	pulumi.Input

	ToNodeConfigurationGkeSecondaryIpRangePtrOutput() NodeConfigurationGkeSecondaryIpRangePtrOutput
	ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(context.Context) NodeConfigurationGkeSecondaryIpRangePtrOutput
}

type nodeConfigurationGkeSecondaryIpRangePtrType NodeConfigurationGkeSecondaryIpRangeArgs

func NodeConfigurationGkeSecondaryIpRangePtr(v *NodeConfigurationGkeSecondaryIpRangeArgs) NodeConfigurationGkeSecondaryIpRangePtrInput {
	return (*nodeConfigurationGkeSecondaryIpRangePtrType)(v)
}

func (*nodeConfigurationGkeSecondaryIpRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationGkeSecondaryIpRange)(nil)).Elem()
}

func (i *nodeConfigurationGkeSecondaryIpRangePtrType) ToNodeConfigurationGkeSecondaryIpRangePtrOutput() NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return i.ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationGkeSecondaryIpRangePtrType) ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(ctx context.Context) NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeSecondaryIpRangePtrOutput)
}

type NodeConfigurationGkeSecondaryIpRangeOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeSecondaryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeSecondaryIpRange)(nil)).Elem()
}

func (o NodeConfigurationGkeSecondaryIpRangeOutput) ToNodeConfigurationGkeSecondaryIpRangeOutput() NodeConfigurationGkeSecondaryIpRangeOutput {
	return o
}

func (o NodeConfigurationGkeSecondaryIpRangeOutput) ToNodeConfigurationGkeSecondaryIpRangeOutputWithContext(ctx context.Context) NodeConfigurationGkeSecondaryIpRangeOutput {
	return o
}

func (o NodeConfigurationGkeSecondaryIpRangeOutput) ToNodeConfigurationGkeSecondaryIpRangePtrOutput() NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return o.ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(context.Background())
}

func (o NodeConfigurationGkeSecondaryIpRangeOutput) ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(ctx context.Context) NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationGkeSecondaryIpRange) *NodeConfigurationGkeSecondaryIpRange {
		return &v
	}).(NodeConfigurationGkeSecondaryIpRangePtrOutput)
}

// Name of the secondary IP range
func (o NodeConfigurationGkeSecondaryIpRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeSecondaryIpRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type NodeConfigurationGkeSecondaryIpRangePtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeSecondaryIpRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationGkeSecondaryIpRange)(nil)).Elem()
}

func (o NodeConfigurationGkeSecondaryIpRangePtrOutput) ToNodeConfigurationGkeSecondaryIpRangePtrOutput() NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return o
}

func (o NodeConfigurationGkeSecondaryIpRangePtrOutput) ToNodeConfigurationGkeSecondaryIpRangePtrOutputWithContext(ctx context.Context) NodeConfigurationGkeSecondaryIpRangePtrOutput {
	return o
}

func (o NodeConfigurationGkeSecondaryIpRangePtrOutput) Elem() NodeConfigurationGkeSecondaryIpRangeOutput {
	return o.ApplyT(func(v *NodeConfigurationGkeSecondaryIpRange) NodeConfigurationGkeSecondaryIpRange {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationGkeSecondaryIpRange
		return ret
	}).(NodeConfigurationGkeSecondaryIpRangeOutput)
}

// Name of the secondary IP range
func (o NodeConfigurationGkeSecondaryIpRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGkeSecondaryIpRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationKops struct {
	// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
	KeyPairId *string `pulumi:"keyPairId"`
}

// NodeConfigurationKopsInput is an input type that accepts NodeConfigurationKopsArgs and NodeConfigurationKopsOutput values.
// You can construct a concrete instance of `NodeConfigurationKopsInput` via:
//
//	NodeConfigurationKopsArgs{...}
type NodeConfigurationKopsInput interface {
	pulumi.Input

	ToNodeConfigurationKopsOutput() NodeConfigurationKopsOutput
	ToNodeConfigurationKopsOutputWithContext(context.Context) NodeConfigurationKopsOutput
}

type NodeConfigurationKopsArgs struct {
	// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
	KeyPairId pulumi.StringPtrInput `pulumi:"keyPairId"`
}

func (NodeConfigurationKopsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationKops)(nil)).Elem()
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsOutput() NodeConfigurationKopsOutput {
	return i.ToNodeConfigurationKopsOutputWithContext(context.Background())
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsOutputWithContext(ctx context.Context) NodeConfigurationKopsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationKopsOutput)
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return i.ToNodeConfigurationKopsPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationKopsOutput).ToNodeConfigurationKopsPtrOutputWithContext(ctx)
}

// NodeConfigurationKopsPtrInput is an input type that accepts NodeConfigurationKopsArgs, NodeConfigurationKopsPtr and NodeConfigurationKopsPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationKopsPtrInput` via:
//
//	        NodeConfigurationKopsArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationKopsPtrInput interface {
	pulumi.Input

	ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput
	ToNodeConfigurationKopsPtrOutputWithContext(context.Context) NodeConfigurationKopsPtrOutput
}

type nodeConfigurationKopsPtrType NodeConfigurationKopsArgs

func NodeConfigurationKopsPtr(v *NodeConfigurationKopsArgs) NodeConfigurationKopsPtrInput {
	return (*nodeConfigurationKopsPtrType)(v)
}

func (*nodeConfigurationKopsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationKops)(nil)).Elem()
}

func (i *nodeConfigurationKopsPtrType) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return i.ToNodeConfigurationKopsPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationKopsPtrType) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationKopsPtrOutput)
}

type NodeConfigurationKopsOutput struct{ *pulumi.OutputState }

func (NodeConfigurationKopsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationKops)(nil)).Elem()
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsOutput() NodeConfigurationKopsOutput {
	return o
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsOutputWithContext(ctx context.Context) NodeConfigurationKopsOutput {
	return o
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return o.ToNodeConfigurationKopsPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationKops) *NodeConfigurationKops {
		return &v
	}).(NodeConfigurationKopsPtrOutput)
}

// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
func (o NodeConfigurationKopsOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationKops) *string { return v.KeyPairId }).(pulumi.StringPtrOutput)
}

type NodeConfigurationKopsPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationKopsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationKops)(nil)).Elem()
}

func (o NodeConfigurationKopsPtrOutput) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return o
}

func (o NodeConfigurationKopsPtrOutput) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return o
}

func (o NodeConfigurationKopsPtrOutput) Elem() NodeConfigurationKopsOutput {
	return o.ApplyT(func(v *NodeConfigurationKops) NodeConfigurationKops {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationKops
		return ret
	}).(NodeConfigurationKopsOutput)
}

// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
func (o NodeConfigurationKopsPtrOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationKops) *string {
		if v == nil {
			return nil
		}
		return v.KeyPairId
	}).(pulumi.StringPtrOutput)
}

type NodeTemplateConstraints struct {
	// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
	ArchitecturePriorities []string `pulumi:"architecturePriorities"`
	// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
	Architectures []string `pulumi:"architectures"`
	// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
	Azs []string `pulumi:"azs"`
	// Bare metal constraint, will only pick bare metal nodes if set to true. Will only pick non-bare metal nodes if false. Defaults to unspecified. Allowed values: true, false, unspecified.
	BareMetal *string `pulumi:"bareMetal"`
	// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	BurstableInstances *string `pulumi:"burstableInstances"`
	// Compute optimized instance constraint (deprecated).
	ComputeOptimized *bool `pulumi:"computeOptimized"`
	// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
	ComputeOptimizedState *string `pulumi:"computeOptimizedState"`
	// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
	CpuManufacturers []string                                `pulumi:"cpuManufacturers"`
	CustomPriorities []NodeTemplateConstraintsCustomPriority `pulumi:"customPriorities"`
	// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	CustomerSpecific *string `pulumi:"customerSpecific"`
	// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
	//  feature is only available for GCP clusters and sole tenancy nodes with local
	//  SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
	//  type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
	//  Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
	//  the sole tenancy or dedicated node (example: setting min CPU to 16).
	DedicatedNodeAffinities []NodeTemplateConstraintsDedicatedNodeAffinity `pulumi:"dedicatedNodeAffinities"`
	// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	EnableSpotDiversity *bool `pulumi:"enableSpotDiversity"`
	// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
	FallbackRestoreRateSeconds *int                                     `pulumi:"fallbackRestoreRateSeconds"`
	Gpu                        *NodeTemplateConstraintsGpu              `pulumi:"gpu"`
	InstanceFamilies           *NodeTemplateConstraintsInstanceFamilies `pulumi:"instanceFamilies"`
	// GPU instance constraint - will only pick nodes with GPU if true
	IsGpuOnly *bool `pulumi:"isGpuOnly"`
	// Max CPU cores per node.
	MaxCpu *int `pulumi:"maxCpu"`
	// Max Memory (Mib) per node.
	MaxMemory *int `pulumi:"maxMemory"`
	// Min CPU cores per node.
	MinCpu *int `pulumi:"minCpu"`
	// Min Memory (Mib) per node.
	MinMemory *int `pulumi:"minMemory"`
	// Should include on-demand instances in the considered pool.
	OnDemand *bool `pulumi:"onDemand"`
	// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
	Os             []string                               `pulumi:"os"`
	ResourceLimits *NodeTemplateConstraintsResourceLimits `pulumi:"resourceLimits"`
	// Should include spot instances in the considered pool.
	Spot *bool `pulumi:"spot"`
	// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimitPercent *int `pulumi:"spotDiversityPriceIncreaseLimitPercent"`
	// Enable/disable spot interruption predictions.
	SpotInterruptionPredictionsEnabled *bool `pulumi:"spotInterruptionPredictionsEnabled"`
	// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
	SpotInterruptionPredictionsType *string `pulumi:"spotInterruptionPredictionsType"`
	// Enable/disable spot reliability. When enabled, autoscaler will create instances with highest reliability score within price increase threshold.
	SpotReliabilityEnabled *bool `pulumi:"spotReliabilityEnabled"`
	// Allowed node price increase when using spot reliability on ordering the instance types . E.g. if the value is 10%, then the overall price of instance types can be 10% higher than the price of the optimal configuration.
	SpotReliabilityPriceIncreaseLimitPercent *int `pulumi:"spotReliabilityPriceIncreaseLimitPercent"`
	// Storage optimized instance constraint (deprecated).
	StorageOptimized *bool `pulumi:"storageOptimized"`
	// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
	StorageOptimizedState *string `pulumi:"storageOptimizedState"`
	// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
	UseSpotFallbacks *bool `pulumi:"useSpotFallbacks"`
}

// NodeTemplateConstraintsInput is an input type that accepts NodeTemplateConstraintsArgs and NodeTemplateConstraintsOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsInput` via:
//
//	NodeTemplateConstraintsArgs{...}
type NodeTemplateConstraintsInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsOutput() NodeTemplateConstraintsOutput
	ToNodeTemplateConstraintsOutputWithContext(context.Context) NodeTemplateConstraintsOutput
}

type NodeTemplateConstraintsArgs struct {
	// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
	ArchitecturePriorities pulumi.StringArrayInput `pulumi:"architecturePriorities"`
	// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
	Architectures pulumi.StringArrayInput `pulumi:"architectures"`
	// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
	Azs pulumi.StringArrayInput `pulumi:"azs"`
	// Bare metal constraint, will only pick bare metal nodes if set to true. Will only pick non-bare metal nodes if false. Defaults to unspecified. Allowed values: true, false, unspecified.
	BareMetal pulumi.StringPtrInput `pulumi:"bareMetal"`
	// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	BurstableInstances pulumi.StringPtrInput `pulumi:"burstableInstances"`
	// Compute optimized instance constraint (deprecated).
	ComputeOptimized pulumi.BoolPtrInput `pulumi:"computeOptimized"`
	// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
	ComputeOptimizedState pulumi.StringPtrInput `pulumi:"computeOptimizedState"`
	// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
	CpuManufacturers pulumi.StringArrayInput                         `pulumi:"cpuManufacturers"`
	CustomPriorities NodeTemplateConstraintsCustomPriorityArrayInput `pulumi:"customPriorities"`
	// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	CustomerSpecific pulumi.StringPtrInput `pulumi:"customerSpecific"`
	// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
	//  feature is only available for GCP clusters and sole tenancy nodes with local
	//  SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
	//  type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
	//  Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
	//  the sole tenancy or dedicated node (example: setting min CPU to 16).
	DedicatedNodeAffinities NodeTemplateConstraintsDedicatedNodeAffinityArrayInput `pulumi:"dedicatedNodeAffinities"`
	// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	EnableSpotDiversity pulumi.BoolPtrInput `pulumi:"enableSpotDiversity"`
	// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
	FallbackRestoreRateSeconds pulumi.IntPtrInput                              `pulumi:"fallbackRestoreRateSeconds"`
	Gpu                        NodeTemplateConstraintsGpuPtrInput              `pulumi:"gpu"`
	InstanceFamilies           NodeTemplateConstraintsInstanceFamiliesPtrInput `pulumi:"instanceFamilies"`
	// GPU instance constraint - will only pick nodes with GPU if true
	IsGpuOnly pulumi.BoolPtrInput `pulumi:"isGpuOnly"`
	// Max CPU cores per node.
	MaxCpu pulumi.IntPtrInput `pulumi:"maxCpu"`
	// Max Memory (Mib) per node.
	MaxMemory pulumi.IntPtrInput `pulumi:"maxMemory"`
	// Min CPU cores per node.
	MinCpu pulumi.IntPtrInput `pulumi:"minCpu"`
	// Min Memory (Mib) per node.
	MinMemory pulumi.IntPtrInput `pulumi:"minMemory"`
	// Should include on-demand instances in the considered pool.
	OnDemand pulumi.BoolPtrInput `pulumi:"onDemand"`
	// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
	Os             pulumi.StringArrayInput                       `pulumi:"os"`
	ResourceLimits NodeTemplateConstraintsResourceLimitsPtrInput `pulumi:"resourceLimits"`
	// Should include spot instances in the considered pool.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
	// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimitPercent pulumi.IntPtrInput `pulumi:"spotDiversityPriceIncreaseLimitPercent"`
	// Enable/disable spot interruption predictions.
	SpotInterruptionPredictionsEnabled pulumi.BoolPtrInput `pulumi:"spotInterruptionPredictionsEnabled"`
	// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
	SpotInterruptionPredictionsType pulumi.StringPtrInput `pulumi:"spotInterruptionPredictionsType"`
	// Enable/disable spot reliability. When enabled, autoscaler will create instances with highest reliability score within price increase threshold.
	SpotReliabilityEnabled pulumi.BoolPtrInput `pulumi:"spotReliabilityEnabled"`
	// Allowed node price increase when using spot reliability on ordering the instance types . E.g. if the value is 10%, then the overall price of instance types can be 10% higher than the price of the optimal configuration.
	SpotReliabilityPriceIncreaseLimitPercent pulumi.IntPtrInput `pulumi:"spotReliabilityPriceIncreaseLimitPercent"`
	// Storage optimized instance constraint (deprecated).
	StorageOptimized pulumi.BoolPtrInput `pulumi:"storageOptimized"`
	// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
	StorageOptimizedState pulumi.StringPtrInput `pulumi:"storageOptimizedState"`
	// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
	UseSpotFallbacks pulumi.BoolPtrInput `pulumi:"useSpotFallbacks"`
}

func (NodeTemplateConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraints)(nil)).Elem()
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsOutput() NodeTemplateConstraintsOutput {
	return i.ToNodeTemplateConstraintsOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsOutputWithContext(ctx context.Context) NodeTemplateConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsOutput)
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return i.ToNodeTemplateConstraintsPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsOutput).ToNodeTemplateConstraintsPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsPtrInput is an input type that accepts NodeTemplateConstraintsArgs, NodeTemplateConstraintsPtr and NodeTemplateConstraintsPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsPtrInput` via:
//
//	        NodeTemplateConstraintsArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput
	ToNodeTemplateConstraintsPtrOutputWithContext(context.Context) NodeTemplateConstraintsPtrOutput
}

type nodeTemplateConstraintsPtrType NodeTemplateConstraintsArgs

func NodeTemplateConstraintsPtr(v *NodeTemplateConstraintsArgs) NodeTemplateConstraintsPtrInput {
	return (*nodeTemplateConstraintsPtrType)(v)
}

func (*nodeTemplateConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraints)(nil)).Elem()
}

func (i *nodeTemplateConstraintsPtrType) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return i.ToNodeTemplateConstraintsPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsPtrType) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsPtrOutput)
}

type NodeTemplateConstraintsOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraints)(nil)).Elem()
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsOutput() NodeTemplateConstraintsOutput {
	return o
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsOutputWithContext(ctx context.Context) NodeTemplateConstraintsOutput {
	return o
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return o.ToNodeTemplateConstraintsPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraints) *NodeTemplateConstraints {
		return &v
	}).(NodeTemplateConstraintsPtrOutput)
}

// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsOutput) ArchitecturePriorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.ArchitecturePriorities }).(pulumi.StringArrayOutput)
}

// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.Architectures }).(pulumi.StringArrayOutput)
}

// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
func (o NodeTemplateConstraintsOutput) Azs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.Azs }).(pulumi.StringArrayOutput)
}

// Bare metal constraint, will only pick bare metal nodes if set to true. Will only pick non-bare metal nodes if false. Defaults to unspecified. Allowed values: true, false, unspecified.
func (o NodeTemplateConstraintsOutput) BareMetal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.BareMetal }).(pulumi.StringPtrOutput)
}

// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsOutput) BurstableInstances() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.BurstableInstances }).(pulumi.StringPtrOutput)
}

// Compute optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsOutput) ComputeOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.ComputeOptimized }).(pulumi.BoolPtrOutput)
}

// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsOutput) ComputeOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.ComputeOptimizedState }).(pulumi.StringPtrOutput)
}

// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
func (o NodeTemplateConstraintsOutput) CpuManufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.CpuManufacturers }).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsOutput) CustomPriorities() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []NodeTemplateConstraintsCustomPriority { return v.CustomPriorities }).(NodeTemplateConstraintsCustomPriorityArrayOutput)
}

// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsOutput) CustomerSpecific() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.CustomerSpecific }).(pulumi.StringPtrOutput)
}

// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
//
//	feature is only available for GCP clusters and sole tenancy nodes with local
//	SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
//	type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
//	Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
//	the sole tenancy or dedicated node (example: setting min CPU to 16).
func (o NodeTemplateConstraintsOutput) DedicatedNodeAffinities() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []NodeTemplateConstraintsDedicatedNodeAffinity {
		return v.DedicatedNodeAffinities
	}).(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput)
}

// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
func (o NodeTemplateConstraintsOutput) EnableSpotDiversity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.EnableSpotDiversity }).(pulumi.BoolPtrOutput)
}

// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
func (o NodeTemplateConstraintsOutput) FallbackRestoreRateSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.FallbackRestoreRateSeconds }).(pulumi.IntPtrOutput)
}

func (o NodeTemplateConstraintsOutput) Gpu() NodeTemplateConstraintsGpuPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *NodeTemplateConstraintsGpu { return v.Gpu }).(NodeTemplateConstraintsGpuPtrOutput)
}

func (o NodeTemplateConstraintsOutput) InstanceFamilies() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *NodeTemplateConstraintsInstanceFamilies { return v.InstanceFamilies }).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

// GPU instance constraint - will only pick nodes with GPU if true
func (o NodeTemplateConstraintsOutput) IsGpuOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.IsGpuOnly }).(pulumi.BoolPtrOutput)
}

// Max CPU cores per node.
func (o NodeTemplateConstraintsOutput) MaxCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.MaxCpu }).(pulumi.IntPtrOutput)
}

// Max Memory (Mib) per node.
func (o NodeTemplateConstraintsOutput) MaxMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.MaxMemory }).(pulumi.IntPtrOutput)
}

// Min CPU cores per node.
func (o NodeTemplateConstraintsOutput) MinCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.MinCpu }).(pulumi.IntPtrOutput)
}

// Min Memory (Mib) per node.
func (o NodeTemplateConstraintsOutput) MinMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.MinMemory }).(pulumi.IntPtrOutput)
}

// Should include on-demand instances in the considered pool.
func (o NodeTemplateConstraintsOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.OnDemand }).(pulumi.BoolPtrOutput)
}

// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
func (o NodeTemplateConstraintsOutput) Os() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.Os }).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsOutput) ResourceLimits() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *NodeTemplateConstraintsResourceLimits { return v.ResourceLimits }).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

// Should include spot instances in the considered pool.
func (o NodeTemplateConstraintsOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
func (o NodeTemplateConstraintsOutput) SpotDiversityPriceIncreaseLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.SpotDiversityPriceIncreaseLimitPercent }).(pulumi.IntPtrOutput)
}

// Enable/disable spot interruption predictions.
func (o NodeTemplateConstraintsOutput) SpotInterruptionPredictionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.SpotInterruptionPredictionsEnabled }).(pulumi.BoolPtrOutput)
}

// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
func (o NodeTemplateConstraintsOutput) SpotInterruptionPredictionsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.SpotInterruptionPredictionsType }).(pulumi.StringPtrOutput)
}

// Enable/disable spot reliability. When enabled, autoscaler will create instances with highest reliability score within price increase threshold.
func (o NodeTemplateConstraintsOutput) SpotReliabilityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.SpotReliabilityEnabled }).(pulumi.BoolPtrOutput)
}

// Allowed node price increase when using spot reliability on ordering the instance types . E.g. if the value is 10%, then the overall price of instance types can be 10% higher than the price of the optimal configuration.
func (o NodeTemplateConstraintsOutput) SpotReliabilityPriceIncreaseLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *int { return v.SpotReliabilityPriceIncreaseLimitPercent }).(pulumi.IntPtrOutput)
}

// Storage optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsOutput) StorageOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.StorageOptimized }).(pulumi.BoolPtrOutput)
}

// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsOutput) StorageOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.StorageOptimizedState }).(pulumi.StringPtrOutput)
}

// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
func (o NodeTemplateConstraintsOutput) UseSpotFallbacks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.UseSpotFallbacks }).(pulumi.BoolPtrOutput)
}

type NodeTemplateConstraintsPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraints)(nil)).Elem()
}

func (o NodeTemplateConstraintsPtrOutput) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsPtrOutput) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsPtrOutput) Elem() NodeTemplateConstraintsOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) NodeTemplateConstraints {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraints
		return ret
	}).(NodeTemplateConstraintsOutput)
}

// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsPtrOutput) ArchitecturePriorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.ArchitecturePriorities
	}).(pulumi.StringArrayOutput)
}

// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsPtrOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.Architectures
	}).(pulumi.StringArrayOutput)
}

// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
func (o NodeTemplateConstraintsPtrOutput) Azs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.Azs
	}).(pulumi.StringArrayOutput)
}

// Bare metal constraint, will only pick bare metal nodes if set to true. Will only pick non-bare metal nodes if false. Defaults to unspecified. Allowed values: true, false, unspecified.
func (o NodeTemplateConstraintsPtrOutput) BareMetal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.BareMetal
	}).(pulumi.StringPtrOutput)
}

// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsPtrOutput) BurstableInstances() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.BurstableInstances
	}).(pulumi.StringPtrOutput)
}

// Compute optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsPtrOutput) ComputeOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeOptimized
	}).(pulumi.BoolPtrOutput)
}

// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsPtrOutput) ComputeOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.ComputeOptimizedState
	}).(pulumi.StringPtrOutput)
}

// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
func (o NodeTemplateConstraintsPtrOutput) CpuManufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.CpuManufacturers
	}).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsPtrOutput) CustomPriorities() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []NodeTemplateConstraintsCustomPriority {
		if v == nil {
			return nil
		}
		return v.CustomPriorities
	}).(NodeTemplateConstraintsCustomPriorityArrayOutput)
}

// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsPtrOutput) CustomerSpecific() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.CustomerSpecific
	}).(pulumi.StringPtrOutput)
}

// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
//
//	feature is only available for GCP clusters and sole tenancy nodes with local
//	SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
//	type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
//	Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
//	the sole tenancy or dedicated node (example: setting min CPU to 16).
func (o NodeTemplateConstraintsPtrOutput) DedicatedNodeAffinities() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []NodeTemplateConstraintsDedicatedNodeAffinity {
		if v == nil {
			return nil
		}
		return v.DedicatedNodeAffinities
	}).(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput)
}

// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
func (o NodeTemplateConstraintsPtrOutput) EnableSpotDiversity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSpotDiversity
	}).(pulumi.BoolPtrOutput)
}

// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
func (o NodeTemplateConstraintsPtrOutput) FallbackRestoreRateSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.FallbackRestoreRateSeconds
	}).(pulumi.IntPtrOutput)
}

func (o NodeTemplateConstraintsPtrOutput) Gpu() NodeTemplateConstraintsGpuPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *NodeTemplateConstraintsGpu {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(NodeTemplateConstraintsGpuPtrOutput)
}

func (o NodeTemplateConstraintsPtrOutput) InstanceFamilies() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *NodeTemplateConstraintsInstanceFamilies {
		if v == nil {
			return nil
		}
		return v.InstanceFamilies
	}).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

// GPU instance constraint - will only pick nodes with GPU if true
func (o NodeTemplateConstraintsPtrOutput) IsGpuOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.IsGpuOnly
	}).(pulumi.BoolPtrOutput)
}

// Max CPU cores per node.
func (o NodeTemplateConstraintsPtrOutput) MaxCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.MaxCpu
	}).(pulumi.IntPtrOutput)
}

// Max Memory (Mib) per node.
func (o NodeTemplateConstraintsPtrOutput) MaxMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemory
	}).(pulumi.IntPtrOutput)
}

// Min CPU cores per node.
func (o NodeTemplateConstraintsPtrOutput) MinCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.MinCpu
	}).(pulumi.IntPtrOutput)
}

// Min Memory (Mib) per node.
func (o NodeTemplateConstraintsPtrOutput) MinMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.MinMemory
	}).(pulumi.IntPtrOutput)
}

// Should include on-demand instances in the considered pool.
func (o NodeTemplateConstraintsPtrOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.OnDemand
	}).(pulumi.BoolPtrOutput)
}

// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
func (o NodeTemplateConstraintsPtrOutput) Os() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.Os
	}).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsPtrOutput) ResourceLimits() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *NodeTemplateConstraintsResourceLimits {
		if v == nil {
			return nil
		}
		return v.ResourceLimits
	}).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

// Should include spot instances in the considered pool.
func (o NodeTemplateConstraintsPtrOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.Spot
	}).(pulumi.BoolPtrOutput)
}

// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
func (o NodeTemplateConstraintsPtrOutput) SpotDiversityPriceIncreaseLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.SpotDiversityPriceIncreaseLimitPercent
	}).(pulumi.IntPtrOutput)
}

// Enable/disable spot interruption predictions.
func (o NodeTemplateConstraintsPtrOutput) SpotInterruptionPredictionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.SpotInterruptionPredictionsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
func (o NodeTemplateConstraintsPtrOutput) SpotInterruptionPredictionsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.SpotInterruptionPredictionsType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable spot reliability. When enabled, autoscaler will create instances with highest reliability score within price increase threshold.
func (o NodeTemplateConstraintsPtrOutput) SpotReliabilityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.SpotReliabilityEnabled
	}).(pulumi.BoolPtrOutput)
}

// Allowed node price increase when using spot reliability on ordering the instance types . E.g. if the value is 10%, then the overall price of instance types can be 10% higher than the price of the optimal configuration.
func (o NodeTemplateConstraintsPtrOutput) SpotReliabilityPriceIncreaseLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *int {
		if v == nil {
			return nil
		}
		return v.SpotReliabilityPriceIncreaseLimitPercent
	}).(pulumi.IntPtrOutput)
}

// Storage optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsPtrOutput) StorageOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.StorageOptimized
	}).(pulumi.BoolPtrOutput)
}

// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsPtrOutput) StorageOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.StorageOptimizedState
	}).(pulumi.StringPtrOutput)
}

// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
func (o NodeTemplateConstraintsPtrOutput) UseSpotFallbacks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.UseSpotFallbacks
	}).(pulumi.BoolPtrOutput)
}

type NodeTemplateConstraintsCustomPriority struct {
	// Instance families to prioritize in this tier.
	InstanceFamilies []string `pulumi:"instanceFamilies"`
	// If true, this tier will apply to on-demand instances.
	OnDemand *bool `pulumi:"onDemand"`
	// If true, this tier will apply to spot instances.
	Spot *bool `pulumi:"spot"`
}

// NodeTemplateConstraintsCustomPriorityInput is an input type that accepts NodeTemplateConstraintsCustomPriorityArgs and NodeTemplateConstraintsCustomPriorityOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsCustomPriorityInput` via:
//
//	NodeTemplateConstraintsCustomPriorityArgs{...}
type NodeTemplateConstraintsCustomPriorityInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsCustomPriorityOutput() NodeTemplateConstraintsCustomPriorityOutput
	ToNodeTemplateConstraintsCustomPriorityOutputWithContext(context.Context) NodeTemplateConstraintsCustomPriorityOutput
}

type NodeTemplateConstraintsCustomPriorityArgs struct {
	// Instance families to prioritize in this tier.
	InstanceFamilies pulumi.StringArrayInput `pulumi:"instanceFamilies"`
	// If true, this tier will apply to on-demand instances.
	OnDemand pulumi.BoolPtrInput `pulumi:"onDemand"`
	// If true, this tier will apply to spot instances.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
}

func (NodeTemplateConstraintsCustomPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (i NodeTemplateConstraintsCustomPriorityArgs) ToNodeTemplateConstraintsCustomPriorityOutput() NodeTemplateConstraintsCustomPriorityOutput {
	return i.ToNodeTemplateConstraintsCustomPriorityOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsCustomPriorityArgs) ToNodeTemplateConstraintsCustomPriorityOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsCustomPriorityOutput)
}

// NodeTemplateConstraintsCustomPriorityArrayInput is an input type that accepts NodeTemplateConstraintsCustomPriorityArray and NodeTemplateConstraintsCustomPriorityArrayOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsCustomPriorityArrayInput` via:
//
//	NodeTemplateConstraintsCustomPriorityArray{ NodeTemplateConstraintsCustomPriorityArgs{...} }
type NodeTemplateConstraintsCustomPriorityArrayInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsCustomPriorityArrayOutput() NodeTemplateConstraintsCustomPriorityArrayOutput
	ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(context.Context) NodeTemplateConstraintsCustomPriorityArrayOutput
}

type NodeTemplateConstraintsCustomPriorityArray []NodeTemplateConstraintsCustomPriorityInput

func (NodeTemplateConstraintsCustomPriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (i NodeTemplateConstraintsCustomPriorityArray) ToNodeTemplateConstraintsCustomPriorityArrayOutput() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return i.ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsCustomPriorityArray) ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsCustomPriorityArrayOutput)
}

type NodeTemplateConstraintsCustomPriorityOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsCustomPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (o NodeTemplateConstraintsCustomPriorityOutput) ToNodeTemplateConstraintsCustomPriorityOutput() NodeTemplateConstraintsCustomPriorityOutput {
	return o
}

func (o NodeTemplateConstraintsCustomPriorityOutput) ToNodeTemplateConstraintsCustomPriorityOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityOutput {
	return o
}

// Instance families to prioritize in this tier.
func (o NodeTemplateConstraintsCustomPriorityOutput) InstanceFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsCustomPriority) []string { return v.InstanceFamilies }).(pulumi.StringArrayOutput)
}

// If true, this tier will apply to on-demand instances.
func (o NodeTemplateConstraintsCustomPriorityOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsCustomPriority) *bool { return v.OnDemand }).(pulumi.BoolPtrOutput)
}

// If true, this tier will apply to spot instances.
func (o NodeTemplateConstraintsCustomPriorityOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsCustomPriority) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

type NodeTemplateConstraintsCustomPriorityArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsCustomPriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (o NodeTemplateConstraintsCustomPriorityArrayOutput) ToNodeTemplateConstraintsCustomPriorityArrayOutput() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsCustomPriorityArrayOutput) ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsCustomPriorityArrayOutput) Index(i pulumi.IntInput) NodeTemplateConstraintsCustomPriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateConstraintsCustomPriority {
		return vs[0].([]NodeTemplateConstraintsCustomPriority)[vs[1].(int)]
	}).(NodeTemplateConstraintsCustomPriorityOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinity struct {
	Affinities []NodeTemplateConstraintsDedicatedNodeAffinityAffinity `pulumi:"affinities"`
	// Availability zone name.
	AzName string `pulumi:"azName"`
	// Instance/node types in this node group.
	InstanceTypes []string `pulumi:"instanceTypes"`
	// Name of node group.
	Name string `pulumi:"name"`
}

// NodeTemplateConstraintsDedicatedNodeAffinityInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityArgs and NodeTemplateConstraintsDedicatedNodeAffinityOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityArgs{...}
type NodeTemplateConstraintsDedicatedNodeAffinityInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityArgs struct {
	Affinities NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput `pulumi:"affinities"`
	// Availability zone name.
	AzName pulumi.StringInput `pulumi:"azName"`
	// Instance/node types in this node group.
	InstanceTypes pulumi.StringArrayInput `pulumi:"instanceTypes"`
	// Name of node group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeTemplateConstraintsDedicatedNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityOutput)
}

// NodeTemplateConstraintsDedicatedNodeAffinityArrayInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityArray and NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityArrayInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityArray{ NodeTemplateConstraintsDedicatedNodeAffinityArgs{...} }
type NodeTemplateConstraintsDedicatedNodeAffinityArrayInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityArray []NodeTemplateConstraintsDedicatedNodeAffinityInput

func (NodeTemplateConstraintsDedicatedNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) Affinities() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) []NodeTemplateConstraintsDedicatedNodeAffinityAffinity {
		return v.Affinities
	}).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput)
}

// Availability zone name.
func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) AzName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) string { return v.AzName }).(pulumi.StringOutput)
}

// Instance/node types in this node group.
func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) []string { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

// Name of node group.
func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) string { return v.Name }).(pulumi.StringOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) Index(i pulumi.IntInput) NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateConstraintsDedicatedNodeAffinity {
		return vs[0].([]NodeTemplateConstraintsDedicatedNodeAffinity)[vs[1].(int)]
	}).(NodeTemplateConstraintsDedicatedNodeAffinityOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinity struct {
	// Key of the node affinity selector.
	Key string `pulumi:"key"`
	// Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.
	Operator string `pulumi:"operator"`
	// Values of the node affinity selector.
	Values []string `pulumi:"values"`
}

// NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs and NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs{...}
type NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs struct {
	// Key of the node affinity selector.
	Key pulumi.StringInput `pulumi:"key"`
	// Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Values of the node affinity selector.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput)
}

// NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray and NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray{ NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs{...} }
type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray []NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return o
}

// Key of the node affinity selector.
func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinityAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.
func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinityAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// Values of the node affinity selector.
func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinityAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) Index(i pulumi.IntInput) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateConstraintsDedicatedNodeAffinityAffinity {
		return vs[0].([]NodeTemplateConstraintsDedicatedNodeAffinityAffinity)[vs[1].(int)]
	}).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput)
}

type NodeTemplateConstraintsGpu struct {
	// Names of the GPUs to exclude.
	ExcludeNames []string `pulumi:"excludeNames"`
	// Instance families to include when filtering (excludes all other families).
	IncludeNames []string `pulumi:"includeNames"`
	// Manufacturers of the gpus to select - NVIDIA, AMD.
	Manufacturers []string `pulumi:"manufacturers"`
	// Max GPU count for the instance type to have.
	MaxCount *int `pulumi:"maxCount"`
	// Min GPU count for the instance type to have.
	MinCount *int `pulumi:"minCount"`
}

// NodeTemplateConstraintsGpuInput is an input type that accepts NodeTemplateConstraintsGpuArgs and NodeTemplateConstraintsGpuOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsGpuInput` via:
//
//	NodeTemplateConstraintsGpuArgs{...}
type NodeTemplateConstraintsGpuInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsGpuOutput() NodeTemplateConstraintsGpuOutput
	ToNodeTemplateConstraintsGpuOutputWithContext(context.Context) NodeTemplateConstraintsGpuOutput
}

type NodeTemplateConstraintsGpuArgs struct {
	// Names of the GPUs to exclude.
	ExcludeNames pulumi.StringArrayInput `pulumi:"excludeNames"`
	// Instance families to include when filtering (excludes all other families).
	IncludeNames pulumi.StringArrayInput `pulumi:"includeNames"`
	// Manufacturers of the gpus to select - NVIDIA, AMD.
	Manufacturers pulumi.StringArrayInput `pulumi:"manufacturers"`
	// Max GPU count for the instance type to have.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// Min GPU count for the instance type to have.
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
}

func (NodeTemplateConstraintsGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuOutput() NodeTemplateConstraintsGpuOutput {
	return i.ToNodeTemplateConstraintsGpuOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsGpuOutput)
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return i.ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsGpuOutput).ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsGpuPtrInput is an input type that accepts NodeTemplateConstraintsGpuArgs, NodeTemplateConstraintsGpuPtr and NodeTemplateConstraintsGpuPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsGpuPtrInput` via:
//
//	        NodeTemplateConstraintsGpuArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsGpuPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput
	ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Context) NodeTemplateConstraintsGpuPtrOutput
}

type nodeTemplateConstraintsGpuPtrType NodeTemplateConstraintsGpuArgs

func NodeTemplateConstraintsGpuPtr(v *NodeTemplateConstraintsGpuArgs) NodeTemplateConstraintsGpuPtrInput {
	return (*nodeTemplateConstraintsGpuPtrType)(v)
}

func (*nodeTemplateConstraintsGpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (i *nodeTemplateConstraintsGpuPtrType) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return i.ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsGpuPtrType) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsGpuPtrOutput)
}

type NodeTemplateConstraintsGpuOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuOutput() NodeTemplateConstraintsGpuOutput {
	return o
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuOutput {
	return o
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return o.ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraintsGpu) *NodeTemplateConstraintsGpu {
		return &v
	}).(NodeTemplateConstraintsGpuPtrOutput)
}

// Names of the GPUs to exclude.
func (o NodeTemplateConstraintsGpuOutput) ExcludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) []string { return v.ExcludeNames }).(pulumi.StringArrayOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsGpuOutput) IncludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) []string { return v.IncludeNames }).(pulumi.StringArrayOutput)
}

// Manufacturers of the gpus to select - NVIDIA, AMD.
func (o NodeTemplateConstraintsGpuOutput) Manufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) []string { return v.Manufacturers }).(pulumi.StringArrayOutput)
}

// Max GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// Min GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

type NodeTemplateConstraintsGpuPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsGpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (o NodeTemplateConstraintsGpuPtrOutput) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return o
}

func (o NodeTemplateConstraintsGpuPtrOutput) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return o
}

func (o NodeTemplateConstraintsGpuPtrOutput) Elem() NodeTemplateConstraintsGpuOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) NodeTemplateConstraintsGpu {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraintsGpu
		return ret
	}).(NodeTemplateConstraintsGpuOutput)
}

// Names of the GPUs to exclude.
func (o NodeTemplateConstraintsGpuPtrOutput) ExcludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeNames
	}).(pulumi.StringArrayOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsGpuPtrOutput) IncludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) []string {
		if v == nil {
			return nil
		}
		return v.IncludeNames
	}).(pulumi.StringArrayOutput)
}

// Manufacturers of the gpus to select - NVIDIA, AMD.
func (o NodeTemplateConstraintsGpuPtrOutput) Manufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) []string {
		if v == nil {
			return nil
		}
		return v.Manufacturers
	}).(pulumi.StringArrayOutput)
}

// Max GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuPtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// Min GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuPtrOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) *int {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.IntPtrOutput)
}

type NodeTemplateConstraintsInstanceFamilies struct {
	// Instance families to exclude when filtering (includes all other families).
	Excludes []string `pulumi:"excludes"`
	// Instance families to include when filtering (excludes all other families).
	Includes []string `pulumi:"includes"`
}

// NodeTemplateConstraintsInstanceFamiliesInput is an input type that accepts NodeTemplateConstraintsInstanceFamiliesArgs and NodeTemplateConstraintsInstanceFamiliesOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsInstanceFamiliesInput` via:
//
//	NodeTemplateConstraintsInstanceFamiliesArgs{...}
type NodeTemplateConstraintsInstanceFamiliesInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsInstanceFamiliesOutput() NodeTemplateConstraintsInstanceFamiliesOutput
	ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(context.Context) NodeTemplateConstraintsInstanceFamiliesOutput
}

type NodeTemplateConstraintsInstanceFamiliesArgs struct {
	// Instance families to exclude when filtering (includes all other families).
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// Instance families to include when filtering (excludes all other families).
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (NodeTemplateConstraintsInstanceFamiliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesOutput() NodeTemplateConstraintsInstanceFamiliesOutput {
	return i.ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsInstanceFamiliesOutput)
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return i.ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsInstanceFamiliesOutput).ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsInstanceFamiliesPtrInput is an input type that accepts NodeTemplateConstraintsInstanceFamiliesArgs, NodeTemplateConstraintsInstanceFamiliesPtr and NodeTemplateConstraintsInstanceFamiliesPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsInstanceFamiliesPtrInput` via:
//
//	        NodeTemplateConstraintsInstanceFamiliesArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsInstanceFamiliesPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput
	ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput
}

type nodeTemplateConstraintsInstanceFamiliesPtrType NodeTemplateConstraintsInstanceFamiliesArgs

func NodeTemplateConstraintsInstanceFamiliesPtr(v *NodeTemplateConstraintsInstanceFamiliesArgs) NodeTemplateConstraintsInstanceFamiliesPtrInput {
	return (*nodeTemplateConstraintsInstanceFamiliesPtrType)(v)
}

func (*nodeTemplateConstraintsInstanceFamiliesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (i *nodeTemplateConstraintsInstanceFamiliesPtrType) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return i.ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsInstanceFamiliesPtrType) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

type NodeTemplateConstraintsInstanceFamiliesOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsInstanceFamiliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesOutput() NodeTemplateConstraintsInstanceFamiliesOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraintsInstanceFamilies) *NodeTemplateConstraintsInstanceFamilies {
		return &v
	}).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

// Instance families to exclude when filtering (includes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsInstanceFamilies) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsInstanceFamilies) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type NodeTemplateConstraintsInstanceFamiliesPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsInstanceFamiliesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) Elem() NodeTemplateConstraintsInstanceFamiliesOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsInstanceFamilies) NodeTemplateConstraintsInstanceFamilies {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraintsInstanceFamilies
		return ret
	}).(NodeTemplateConstraintsInstanceFamiliesOutput)
}

// Instance families to exclude when filtering (includes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsInstanceFamilies) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsInstanceFamilies) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type NodeTemplateConstraintsResourceLimits struct {
	// Controls CPU limit enforcement for the node template.
	CpuLimitEnabled *bool `pulumi:"cpuLimitEnabled"`
	// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
	CpuLimitMaxCores *int `pulumi:"cpuLimitMaxCores"`
}

// NodeTemplateConstraintsResourceLimitsInput is an input type that accepts NodeTemplateConstraintsResourceLimitsArgs and NodeTemplateConstraintsResourceLimitsOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsResourceLimitsInput` via:
//
//	NodeTemplateConstraintsResourceLimitsArgs{...}
type NodeTemplateConstraintsResourceLimitsInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsResourceLimitsOutput() NodeTemplateConstraintsResourceLimitsOutput
	ToNodeTemplateConstraintsResourceLimitsOutputWithContext(context.Context) NodeTemplateConstraintsResourceLimitsOutput
}

type NodeTemplateConstraintsResourceLimitsArgs struct {
	// Controls CPU limit enforcement for the node template.
	CpuLimitEnabled pulumi.BoolPtrInput `pulumi:"cpuLimitEnabled"`
	// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
	CpuLimitMaxCores pulumi.IntPtrInput `pulumi:"cpuLimitMaxCores"`
}

func (NodeTemplateConstraintsResourceLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsOutput() NodeTemplateConstraintsResourceLimitsOutput {
	return i.ToNodeTemplateConstraintsResourceLimitsOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsResourceLimitsOutput)
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return i.ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsResourceLimitsOutput).ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsResourceLimitsPtrInput is an input type that accepts NodeTemplateConstraintsResourceLimitsArgs, NodeTemplateConstraintsResourceLimitsPtr and NodeTemplateConstraintsResourceLimitsPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsResourceLimitsPtrInput` via:
//
//	        NodeTemplateConstraintsResourceLimitsArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsResourceLimitsPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput
	ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput
}

type nodeTemplateConstraintsResourceLimitsPtrType NodeTemplateConstraintsResourceLimitsArgs

func NodeTemplateConstraintsResourceLimitsPtr(v *NodeTemplateConstraintsResourceLimitsArgs) NodeTemplateConstraintsResourceLimitsPtrInput {
	return (*nodeTemplateConstraintsResourceLimitsPtrType)(v)
}

func (*nodeTemplateConstraintsResourceLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (i *nodeTemplateConstraintsResourceLimitsPtrType) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return i.ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsResourceLimitsPtrType) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

type NodeTemplateConstraintsResourceLimitsOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsResourceLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsOutput() NodeTemplateConstraintsResourceLimitsOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraintsResourceLimits) *NodeTemplateConstraintsResourceLimits {
		return &v
	}).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

// Controls CPU limit enforcement for the node template.
func (o NodeTemplateConstraintsResourceLimitsOutput) CpuLimitEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsResourceLimits) *bool { return v.CpuLimitEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
func (o NodeTemplateConstraintsResourceLimitsOutput) CpuLimitMaxCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsResourceLimits) *int { return v.CpuLimitMaxCores }).(pulumi.IntPtrOutput)
}

type NodeTemplateConstraintsResourceLimitsPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsResourceLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (o NodeTemplateConstraintsResourceLimitsPtrOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsPtrOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsPtrOutput) Elem() NodeTemplateConstraintsResourceLimitsOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsResourceLimits) NodeTemplateConstraintsResourceLimits {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraintsResourceLimits
		return ret
	}).(NodeTemplateConstraintsResourceLimitsOutput)
}

// Controls CPU limit enforcement for the node template.
func (o NodeTemplateConstraintsResourceLimitsPtrOutput) CpuLimitEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsResourceLimits) *bool {
		if v == nil {
			return nil
		}
		return v.CpuLimitEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
func (o NodeTemplateConstraintsResourceLimitsPtrOutput) CpuLimitMaxCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsResourceLimits) *int {
		if v == nil {
			return nil
		}
		return v.CpuLimitMaxCores
	}).(pulumi.IntPtrOutput)
}

type NodeTemplateCustomTaint struct {
	// Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.
	Effect *string `pulumi:"effect"`
	// Key of a taint to be added to nodes created from this template.
	Key string `pulumi:"key"`
	// Value of a taint to be added to nodes created from this template.
	Value *string `pulumi:"value"`
}

// NodeTemplateCustomTaintInput is an input type that accepts NodeTemplateCustomTaintArgs and NodeTemplateCustomTaintOutput values.
// You can construct a concrete instance of `NodeTemplateCustomTaintInput` via:
//
//	NodeTemplateCustomTaintArgs{...}
type NodeTemplateCustomTaintInput interface {
	pulumi.Input

	ToNodeTemplateCustomTaintOutput() NodeTemplateCustomTaintOutput
	ToNodeTemplateCustomTaintOutputWithContext(context.Context) NodeTemplateCustomTaintOutput
}

type NodeTemplateCustomTaintArgs struct {
	// Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key of a taint to be added to nodes created from this template.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of a taint to be added to nodes created from this template.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NodeTemplateCustomTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateCustomTaint)(nil)).Elem()
}

func (i NodeTemplateCustomTaintArgs) ToNodeTemplateCustomTaintOutput() NodeTemplateCustomTaintOutput {
	return i.ToNodeTemplateCustomTaintOutputWithContext(context.Background())
}

func (i NodeTemplateCustomTaintArgs) ToNodeTemplateCustomTaintOutputWithContext(ctx context.Context) NodeTemplateCustomTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateCustomTaintOutput)
}

// NodeTemplateCustomTaintArrayInput is an input type that accepts NodeTemplateCustomTaintArray and NodeTemplateCustomTaintArrayOutput values.
// You can construct a concrete instance of `NodeTemplateCustomTaintArrayInput` via:
//
//	NodeTemplateCustomTaintArray{ NodeTemplateCustomTaintArgs{...} }
type NodeTemplateCustomTaintArrayInput interface {
	pulumi.Input

	ToNodeTemplateCustomTaintArrayOutput() NodeTemplateCustomTaintArrayOutput
	ToNodeTemplateCustomTaintArrayOutputWithContext(context.Context) NodeTemplateCustomTaintArrayOutput
}

type NodeTemplateCustomTaintArray []NodeTemplateCustomTaintInput

func (NodeTemplateCustomTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateCustomTaint)(nil)).Elem()
}

func (i NodeTemplateCustomTaintArray) ToNodeTemplateCustomTaintArrayOutput() NodeTemplateCustomTaintArrayOutput {
	return i.ToNodeTemplateCustomTaintArrayOutputWithContext(context.Background())
}

func (i NodeTemplateCustomTaintArray) ToNodeTemplateCustomTaintArrayOutputWithContext(ctx context.Context) NodeTemplateCustomTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateCustomTaintArrayOutput)
}

type NodeTemplateCustomTaintOutput struct{ *pulumi.OutputState }

func (NodeTemplateCustomTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateCustomTaint)(nil)).Elem()
}

func (o NodeTemplateCustomTaintOutput) ToNodeTemplateCustomTaintOutput() NodeTemplateCustomTaintOutput {
	return o
}

func (o NodeTemplateCustomTaintOutput) ToNodeTemplateCustomTaintOutputWithContext(ctx context.Context) NodeTemplateCustomTaintOutput {
	return o
}

// Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.
func (o NodeTemplateCustomTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateCustomTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key of a taint to be added to nodes created from this template.
func (o NodeTemplateCustomTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateCustomTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value of a taint to be added to nodes created from this template.
func (o NodeTemplateCustomTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateCustomTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodeTemplateCustomTaintArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateCustomTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateCustomTaint)(nil)).Elem()
}

func (o NodeTemplateCustomTaintArrayOutput) ToNodeTemplateCustomTaintArrayOutput() NodeTemplateCustomTaintArrayOutput {
	return o
}

func (o NodeTemplateCustomTaintArrayOutput) ToNodeTemplateCustomTaintArrayOutputWithContext(ctx context.Context) NodeTemplateCustomTaintArrayOutput {
	return o
}

func (o NodeTemplateCustomTaintArrayOutput) Index(i pulumi.IntInput) NodeTemplateCustomTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateCustomTaint {
		return vs[0].([]NodeTemplateCustomTaint)[vs[1].(int)]
	}).(NodeTemplateCustomTaintOutput)
}

type NodeTemplateGpu struct {
	// Defines default number of shared clients per GPU.
	DefaultSharedClientsPerGpu *int `pulumi:"defaultSharedClientsPerGpu"`
	// Enable/disable GPU time-sharing.
	EnableTimeSharing *bool `pulumi:"enableTimeSharing"`
	// Defines GPU sharing configurations for GPU devices.
	SharingConfigurations []NodeTemplateGpuSharingConfiguration `pulumi:"sharingConfigurations"`
}

// NodeTemplateGpuInput is an input type that accepts NodeTemplateGpuArgs and NodeTemplateGpuOutput values.
// You can construct a concrete instance of `NodeTemplateGpuInput` via:
//
//	NodeTemplateGpuArgs{...}
type NodeTemplateGpuInput interface {
	pulumi.Input

	ToNodeTemplateGpuOutput() NodeTemplateGpuOutput
	ToNodeTemplateGpuOutputWithContext(context.Context) NodeTemplateGpuOutput
}

type NodeTemplateGpuArgs struct {
	// Defines default number of shared clients per GPU.
	DefaultSharedClientsPerGpu pulumi.IntPtrInput `pulumi:"defaultSharedClientsPerGpu"`
	// Enable/disable GPU time-sharing.
	EnableTimeSharing pulumi.BoolPtrInput `pulumi:"enableTimeSharing"`
	// Defines GPU sharing configurations for GPU devices.
	SharingConfigurations NodeTemplateGpuSharingConfigurationArrayInput `pulumi:"sharingConfigurations"`
}

func (NodeTemplateGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateGpu)(nil)).Elem()
}

func (i NodeTemplateGpuArgs) ToNodeTemplateGpuOutput() NodeTemplateGpuOutput {
	return i.ToNodeTemplateGpuOutputWithContext(context.Background())
}

func (i NodeTemplateGpuArgs) ToNodeTemplateGpuOutputWithContext(ctx context.Context) NodeTemplateGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateGpuOutput)
}

func (i NodeTemplateGpuArgs) ToNodeTemplateGpuPtrOutput() NodeTemplateGpuPtrOutput {
	return i.ToNodeTemplateGpuPtrOutputWithContext(context.Background())
}

func (i NodeTemplateGpuArgs) ToNodeTemplateGpuPtrOutputWithContext(ctx context.Context) NodeTemplateGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateGpuOutput).ToNodeTemplateGpuPtrOutputWithContext(ctx)
}

// NodeTemplateGpuPtrInput is an input type that accepts NodeTemplateGpuArgs, NodeTemplateGpuPtr and NodeTemplateGpuPtrOutput values.
// You can construct a concrete instance of `NodeTemplateGpuPtrInput` via:
//
//	        NodeTemplateGpuArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateGpuPtrInput interface {
	pulumi.Input

	ToNodeTemplateGpuPtrOutput() NodeTemplateGpuPtrOutput
	ToNodeTemplateGpuPtrOutputWithContext(context.Context) NodeTemplateGpuPtrOutput
}

type nodeTemplateGpuPtrType NodeTemplateGpuArgs

func NodeTemplateGpuPtr(v *NodeTemplateGpuArgs) NodeTemplateGpuPtrInput {
	return (*nodeTemplateGpuPtrType)(v)
}

func (*nodeTemplateGpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateGpu)(nil)).Elem()
}

func (i *nodeTemplateGpuPtrType) ToNodeTemplateGpuPtrOutput() NodeTemplateGpuPtrOutput {
	return i.ToNodeTemplateGpuPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateGpuPtrType) ToNodeTemplateGpuPtrOutputWithContext(ctx context.Context) NodeTemplateGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateGpuPtrOutput)
}

type NodeTemplateGpuOutput struct{ *pulumi.OutputState }

func (NodeTemplateGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateGpu)(nil)).Elem()
}

func (o NodeTemplateGpuOutput) ToNodeTemplateGpuOutput() NodeTemplateGpuOutput {
	return o
}

func (o NodeTemplateGpuOutput) ToNodeTemplateGpuOutputWithContext(ctx context.Context) NodeTemplateGpuOutput {
	return o
}

func (o NodeTemplateGpuOutput) ToNodeTemplateGpuPtrOutput() NodeTemplateGpuPtrOutput {
	return o.ToNodeTemplateGpuPtrOutputWithContext(context.Background())
}

func (o NodeTemplateGpuOutput) ToNodeTemplateGpuPtrOutputWithContext(ctx context.Context) NodeTemplateGpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateGpu) *NodeTemplateGpu {
		return &v
	}).(NodeTemplateGpuPtrOutput)
}

// Defines default number of shared clients per GPU.
func (o NodeTemplateGpuOutput) DefaultSharedClientsPerGpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeTemplateGpu) *int { return v.DefaultSharedClientsPerGpu }).(pulumi.IntPtrOutput)
}

// Enable/disable GPU time-sharing.
func (o NodeTemplateGpuOutput) EnableTimeSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateGpu) *bool { return v.EnableTimeSharing }).(pulumi.BoolPtrOutput)
}

// Defines GPU sharing configurations for GPU devices.
func (o NodeTemplateGpuOutput) SharingConfigurations() NodeTemplateGpuSharingConfigurationArrayOutput {
	return o.ApplyT(func(v NodeTemplateGpu) []NodeTemplateGpuSharingConfiguration { return v.SharingConfigurations }).(NodeTemplateGpuSharingConfigurationArrayOutput)
}

type NodeTemplateGpuPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateGpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateGpu)(nil)).Elem()
}

func (o NodeTemplateGpuPtrOutput) ToNodeTemplateGpuPtrOutput() NodeTemplateGpuPtrOutput {
	return o
}

func (o NodeTemplateGpuPtrOutput) ToNodeTemplateGpuPtrOutputWithContext(ctx context.Context) NodeTemplateGpuPtrOutput {
	return o
}

func (o NodeTemplateGpuPtrOutput) Elem() NodeTemplateGpuOutput {
	return o.ApplyT(func(v *NodeTemplateGpu) NodeTemplateGpu {
		if v != nil {
			return *v
		}
		var ret NodeTemplateGpu
		return ret
	}).(NodeTemplateGpuOutput)
}

// Defines default number of shared clients per GPU.
func (o NodeTemplateGpuPtrOutput) DefaultSharedClientsPerGpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeTemplateGpu) *int {
		if v == nil {
			return nil
		}
		return v.DefaultSharedClientsPerGpu
	}).(pulumi.IntPtrOutput)
}

// Enable/disable GPU time-sharing.
func (o NodeTemplateGpuPtrOutput) EnableTimeSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateGpu) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTimeSharing
	}).(pulumi.BoolPtrOutput)
}

// Defines GPU sharing configurations for GPU devices.
func (o NodeTemplateGpuPtrOutput) SharingConfigurations() NodeTemplateGpuSharingConfigurationArrayOutput {
	return o.ApplyT(func(v *NodeTemplateGpu) []NodeTemplateGpuSharingConfiguration {
		if v == nil {
			return nil
		}
		return v.SharingConfigurations
	}).(NodeTemplateGpuSharingConfigurationArrayOutput)
}

type NodeTemplateGpuSharingConfiguration struct {
	// GPU name.
	GpuName string `pulumi:"gpuName"`
	// Defines number of shared clients for specific GPU device.
	SharedClientsPerGpu int `pulumi:"sharedClientsPerGpu"`
}

// NodeTemplateGpuSharingConfigurationInput is an input type that accepts NodeTemplateGpuSharingConfigurationArgs and NodeTemplateGpuSharingConfigurationOutput values.
// You can construct a concrete instance of `NodeTemplateGpuSharingConfigurationInput` via:
//
//	NodeTemplateGpuSharingConfigurationArgs{...}
type NodeTemplateGpuSharingConfigurationInput interface {
	pulumi.Input

	ToNodeTemplateGpuSharingConfigurationOutput() NodeTemplateGpuSharingConfigurationOutput
	ToNodeTemplateGpuSharingConfigurationOutputWithContext(context.Context) NodeTemplateGpuSharingConfigurationOutput
}

type NodeTemplateGpuSharingConfigurationArgs struct {
	// GPU name.
	GpuName pulumi.StringInput `pulumi:"gpuName"`
	// Defines number of shared clients for specific GPU device.
	SharedClientsPerGpu pulumi.IntInput `pulumi:"sharedClientsPerGpu"`
}

func (NodeTemplateGpuSharingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateGpuSharingConfiguration)(nil)).Elem()
}

func (i NodeTemplateGpuSharingConfigurationArgs) ToNodeTemplateGpuSharingConfigurationOutput() NodeTemplateGpuSharingConfigurationOutput {
	return i.ToNodeTemplateGpuSharingConfigurationOutputWithContext(context.Background())
}

func (i NodeTemplateGpuSharingConfigurationArgs) ToNodeTemplateGpuSharingConfigurationOutputWithContext(ctx context.Context) NodeTemplateGpuSharingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateGpuSharingConfigurationOutput)
}

// NodeTemplateGpuSharingConfigurationArrayInput is an input type that accepts NodeTemplateGpuSharingConfigurationArray and NodeTemplateGpuSharingConfigurationArrayOutput values.
// You can construct a concrete instance of `NodeTemplateGpuSharingConfigurationArrayInput` via:
//
//	NodeTemplateGpuSharingConfigurationArray{ NodeTemplateGpuSharingConfigurationArgs{...} }
type NodeTemplateGpuSharingConfigurationArrayInput interface {
	pulumi.Input

	ToNodeTemplateGpuSharingConfigurationArrayOutput() NodeTemplateGpuSharingConfigurationArrayOutput
	ToNodeTemplateGpuSharingConfigurationArrayOutputWithContext(context.Context) NodeTemplateGpuSharingConfigurationArrayOutput
}

type NodeTemplateGpuSharingConfigurationArray []NodeTemplateGpuSharingConfigurationInput

func (NodeTemplateGpuSharingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateGpuSharingConfiguration)(nil)).Elem()
}

func (i NodeTemplateGpuSharingConfigurationArray) ToNodeTemplateGpuSharingConfigurationArrayOutput() NodeTemplateGpuSharingConfigurationArrayOutput {
	return i.ToNodeTemplateGpuSharingConfigurationArrayOutputWithContext(context.Background())
}

func (i NodeTemplateGpuSharingConfigurationArray) ToNodeTemplateGpuSharingConfigurationArrayOutputWithContext(ctx context.Context) NodeTemplateGpuSharingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateGpuSharingConfigurationArrayOutput)
}

type NodeTemplateGpuSharingConfigurationOutput struct{ *pulumi.OutputState }

func (NodeTemplateGpuSharingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateGpuSharingConfiguration)(nil)).Elem()
}

func (o NodeTemplateGpuSharingConfigurationOutput) ToNodeTemplateGpuSharingConfigurationOutput() NodeTemplateGpuSharingConfigurationOutput {
	return o
}

func (o NodeTemplateGpuSharingConfigurationOutput) ToNodeTemplateGpuSharingConfigurationOutputWithContext(ctx context.Context) NodeTemplateGpuSharingConfigurationOutput {
	return o
}

// GPU name.
func (o NodeTemplateGpuSharingConfigurationOutput) GpuName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateGpuSharingConfiguration) string { return v.GpuName }).(pulumi.StringOutput)
}

// Defines number of shared clients for specific GPU device.
func (o NodeTemplateGpuSharingConfigurationOutput) SharedClientsPerGpu() pulumi.IntOutput {
	return o.ApplyT(func(v NodeTemplateGpuSharingConfiguration) int { return v.SharedClientsPerGpu }).(pulumi.IntOutput)
}

type NodeTemplateGpuSharingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateGpuSharingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateGpuSharingConfiguration)(nil)).Elem()
}

func (o NodeTemplateGpuSharingConfigurationArrayOutput) ToNodeTemplateGpuSharingConfigurationArrayOutput() NodeTemplateGpuSharingConfigurationArrayOutput {
	return o
}

func (o NodeTemplateGpuSharingConfigurationArrayOutput) ToNodeTemplateGpuSharingConfigurationArrayOutputWithContext(ctx context.Context) NodeTemplateGpuSharingConfigurationArrayOutput {
	return o
}

func (o NodeTemplateGpuSharingConfigurationArrayOutput) Index(i pulumi.IntInput) NodeTemplateGpuSharingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateGpuSharingConfiguration {
		return vs[0].([]NodeTemplateGpuSharingConfiguration)[vs[1].(int)]
	}).(NodeTemplateGpuSharingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksInput)(nil)).Elem(), NodeConfigurationAksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksPtrInput)(nil)).Elem(), NodeConfigurationAksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksEphemeralOsDiskInput)(nil)).Elem(), NodeConfigurationAksEphemeralOsDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksEphemeralOsDiskPtrInput)(nil)).Elem(), NodeConfigurationAksEphemeralOsDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerArrayInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksPublicIpInput)(nil)).Elem(), NodeConfigurationAksPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksPublicIpPtrInput)(nil)).Elem(), NodeConfigurationAksPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksInput)(nil)).Elem(), NodeConfigurationEksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksPtrInput)(nil)).Elem(), NodeConfigurationEksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksTargetGroupInput)(nil)).Elem(), NodeConfigurationEksTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksTargetGroupArrayInput)(nil)).Elem(), NodeConfigurationEksTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeInput)(nil)).Elem(), NodeConfigurationGkeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkePtrInput)(nil)).Elem(), NodeConfigurationGkeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerArrayInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPoolInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerTargetBackendPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeSecondaryIpRangeInput)(nil)).Elem(), NodeConfigurationGkeSecondaryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeSecondaryIpRangePtrInput)(nil)).Elem(), NodeConfigurationGkeSecondaryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationKopsInput)(nil)).Elem(), NodeConfigurationKopsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationKopsPtrInput)(nil)).Elem(), NodeConfigurationKopsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsInput)(nil)).Elem(), NodeTemplateConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsPtrInput)(nil)).Elem(), NodeTemplateConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsCustomPriorityInput)(nil)).Elem(), NodeTemplateConstraintsCustomPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsCustomPriorityArrayInput)(nil)).Elem(), NodeTemplateConstraintsCustomPriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityArrayInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsGpuInput)(nil)).Elem(), NodeTemplateConstraintsGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsGpuPtrInput)(nil)).Elem(), NodeTemplateConstraintsGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsInstanceFamiliesInput)(nil)).Elem(), NodeTemplateConstraintsInstanceFamiliesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsInstanceFamiliesPtrInput)(nil)).Elem(), NodeTemplateConstraintsInstanceFamiliesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsResourceLimitsInput)(nil)).Elem(), NodeTemplateConstraintsResourceLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsResourceLimitsPtrInput)(nil)).Elem(), NodeTemplateConstraintsResourceLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateCustomTaintInput)(nil)).Elem(), NodeTemplateCustomTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateCustomTaintArrayInput)(nil)).Elem(), NodeTemplateCustomTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateGpuInput)(nil)).Elem(), NodeTemplateGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateGpuPtrInput)(nil)).Elem(), NodeTemplateGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateGpuSharingConfigurationInput)(nil)).Elem(), NodeTemplateGpuSharingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateGpuSharingConfigurationArrayInput)(nil)).Elem(), NodeTemplateGpuSharingConfigurationArray{})
	pulumi.RegisterOutputType(NodeConfigurationAksOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksEphemeralOsDiskOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksEphemeralOsDiskPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksPublicIpOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksPublicIpPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksTargetGroupOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkePtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeSecondaryIpRangeOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeSecondaryIpRangePtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationKopsOutput{})
	pulumi.RegisterOutputType(NodeConfigurationKopsPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsCustomPriorityOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsCustomPriorityArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsGpuOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsGpuPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsInstanceFamiliesOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsInstanceFamiliesPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsResourceLimitsOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsResourceLimitsPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateCustomTaintOutput{})
	pulumi.RegisterOutputType(NodeTemplateCustomTaintArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateGpuOutput{})
	pulumi.RegisterOutputType(NodeTemplateGpuPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateGpuSharingConfigurationOutput{})
	pulumi.RegisterOutputType(NodeTemplateGpuSharingConfigurationArrayOutput{})
}
