// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnterpriseGroupMember struct {
	// Group member configuration.
	Members []EnterpriseGroupMemberMember `pulumi:"members"`
}

// EnterpriseGroupMemberInput is an input type that accepts EnterpriseGroupMemberArgs and EnterpriseGroupMemberOutput values.
// You can construct a concrete instance of `EnterpriseGroupMemberInput` via:
//
//	EnterpriseGroupMemberArgs{...}
type EnterpriseGroupMemberInput interface {
	pulumi.Input

	ToEnterpriseGroupMemberOutput() EnterpriseGroupMemberOutput
	ToEnterpriseGroupMemberOutputWithContext(context.Context) EnterpriseGroupMemberOutput
}

type EnterpriseGroupMemberArgs struct {
	// Group member configuration.
	Members EnterpriseGroupMemberMemberArrayInput `pulumi:"members"`
}

func (EnterpriseGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupMember)(nil)).Elem()
}

func (i EnterpriseGroupMemberArgs) ToEnterpriseGroupMemberOutput() EnterpriseGroupMemberOutput {
	return i.ToEnterpriseGroupMemberOutputWithContext(context.Background())
}

func (i EnterpriseGroupMemberArgs) ToEnterpriseGroupMemberOutputWithContext(ctx context.Context) EnterpriseGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupMemberOutput)
}

// EnterpriseGroupMemberArrayInput is an input type that accepts EnterpriseGroupMemberArray and EnterpriseGroupMemberArrayOutput values.
// You can construct a concrete instance of `EnterpriseGroupMemberArrayInput` via:
//
//	EnterpriseGroupMemberArray{ EnterpriseGroupMemberArgs{...} }
type EnterpriseGroupMemberArrayInput interface {
	pulumi.Input

	ToEnterpriseGroupMemberArrayOutput() EnterpriseGroupMemberArrayOutput
	ToEnterpriseGroupMemberArrayOutputWithContext(context.Context) EnterpriseGroupMemberArrayOutput
}

type EnterpriseGroupMemberArray []EnterpriseGroupMemberInput

func (EnterpriseGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupMember)(nil)).Elem()
}

func (i EnterpriseGroupMemberArray) ToEnterpriseGroupMemberArrayOutput() EnterpriseGroupMemberArrayOutput {
	return i.ToEnterpriseGroupMemberArrayOutputWithContext(context.Background())
}

func (i EnterpriseGroupMemberArray) ToEnterpriseGroupMemberArrayOutputWithContext(ctx context.Context) EnterpriseGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupMemberArrayOutput)
}

type EnterpriseGroupMemberOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupMember)(nil)).Elem()
}

func (o EnterpriseGroupMemberOutput) ToEnterpriseGroupMemberOutput() EnterpriseGroupMemberOutput {
	return o
}

func (o EnterpriseGroupMemberOutput) ToEnterpriseGroupMemberOutputWithContext(ctx context.Context) EnterpriseGroupMemberOutput {
	return o
}

// Group member configuration.
func (o EnterpriseGroupMemberOutput) Members() EnterpriseGroupMemberMemberArrayOutput {
	return o.ApplyT(func(v EnterpriseGroupMember) []EnterpriseGroupMemberMember { return v.Members }).(EnterpriseGroupMemberMemberArrayOutput)
}

type EnterpriseGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupMember)(nil)).Elem()
}

func (o EnterpriseGroupMemberArrayOutput) ToEnterpriseGroupMemberArrayOutput() EnterpriseGroupMemberArrayOutput {
	return o
}

func (o EnterpriseGroupMemberArrayOutput) ToEnterpriseGroupMemberArrayOutputWithContext(ctx context.Context) EnterpriseGroupMemberArrayOutput {
	return o
}

func (o EnterpriseGroupMemberArrayOutput) Index(i pulumi.IntInput) EnterpriseGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseGroupMember {
		return vs[0].([]EnterpriseGroupMember)[vs[1].(int)]
	}).(EnterpriseGroupMemberOutput)
}

type EnterpriseGroupMemberMember struct {
	// Member UUID.
	Id string `pulumi:"id"`
	// Kind of the member. Supported values: user, service_account.
	Kind string `pulumi:"kind"`
}

// EnterpriseGroupMemberMemberInput is an input type that accepts EnterpriseGroupMemberMemberArgs and EnterpriseGroupMemberMemberOutput values.
// You can construct a concrete instance of `EnterpriseGroupMemberMemberInput` via:
//
//	EnterpriseGroupMemberMemberArgs{...}
type EnterpriseGroupMemberMemberInput interface {
	pulumi.Input

	ToEnterpriseGroupMemberMemberOutput() EnterpriseGroupMemberMemberOutput
	ToEnterpriseGroupMemberMemberOutputWithContext(context.Context) EnterpriseGroupMemberMemberOutput
}

type EnterpriseGroupMemberMemberArgs struct {
	// Member UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of the member. Supported values: user, service_account.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (EnterpriseGroupMemberMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupMemberMember)(nil)).Elem()
}

func (i EnterpriseGroupMemberMemberArgs) ToEnterpriseGroupMemberMemberOutput() EnterpriseGroupMemberMemberOutput {
	return i.ToEnterpriseGroupMemberMemberOutputWithContext(context.Background())
}

func (i EnterpriseGroupMemberMemberArgs) ToEnterpriseGroupMemberMemberOutputWithContext(ctx context.Context) EnterpriseGroupMemberMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupMemberMemberOutput)
}

// EnterpriseGroupMemberMemberArrayInput is an input type that accepts EnterpriseGroupMemberMemberArray and EnterpriseGroupMemberMemberArrayOutput values.
// You can construct a concrete instance of `EnterpriseGroupMemberMemberArrayInput` via:
//
//	EnterpriseGroupMemberMemberArray{ EnterpriseGroupMemberMemberArgs{...} }
type EnterpriseGroupMemberMemberArrayInput interface {
	pulumi.Input

	ToEnterpriseGroupMemberMemberArrayOutput() EnterpriseGroupMemberMemberArrayOutput
	ToEnterpriseGroupMemberMemberArrayOutputWithContext(context.Context) EnterpriseGroupMemberMemberArrayOutput
}

type EnterpriseGroupMemberMemberArray []EnterpriseGroupMemberMemberInput

func (EnterpriseGroupMemberMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupMemberMember)(nil)).Elem()
}

func (i EnterpriseGroupMemberMemberArray) ToEnterpriseGroupMemberMemberArrayOutput() EnterpriseGroupMemberMemberArrayOutput {
	return i.ToEnterpriseGroupMemberMemberArrayOutputWithContext(context.Background())
}

func (i EnterpriseGroupMemberMemberArray) ToEnterpriseGroupMemberMemberArrayOutputWithContext(ctx context.Context) EnterpriseGroupMemberMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupMemberMemberArrayOutput)
}

type EnterpriseGroupMemberMemberOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupMemberMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupMemberMember)(nil)).Elem()
}

func (o EnterpriseGroupMemberMemberOutput) ToEnterpriseGroupMemberMemberOutput() EnterpriseGroupMemberMemberOutput {
	return o
}

func (o EnterpriseGroupMemberMemberOutput) ToEnterpriseGroupMemberMemberOutputWithContext(ctx context.Context) EnterpriseGroupMemberMemberOutput {
	return o
}

// Member UUID.
func (o EnterpriseGroupMemberMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseGroupMemberMember) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of the member. Supported values: user, service_account.
func (o EnterpriseGroupMemberMemberOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseGroupMemberMember) string { return v.Kind }).(pulumi.StringOutput)
}

type EnterpriseGroupMemberMemberArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupMemberMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupMemberMember)(nil)).Elem()
}

func (o EnterpriseGroupMemberMemberArrayOutput) ToEnterpriseGroupMemberMemberArrayOutput() EnterpriseGroupMemberMemberArrayOutput {
	return o
}

func (o EnterpriseGroupMemberMemberArrayOutput) ToEnterpriseGroupMemberMemberArrayOutputWithContext(ctx context.Context) EnterpriseGroupMemberMemberArrayOutput {
	return o
}

func (o EnterpriseGroupMemberMemberArrayOutput) Index(i pulumi.IntInput) EnterpriseGroupMemberMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseGroupMemberMember {
		return vs[0].([]EnterpriseGroupMemberMember)[vs[1].(int)]
	}).(EnterpriseGroupMemberMemberOutput)
}

type EnterpriseGroupRoleBinding struct {
	// Role binding configuration.
	RoleBindings []EnterpriseGroupRoleBindingRoleBinding `pulumi:"roleBindings"`
}

// EnterpriseGroupRoleBindingInput is an input type that accepts EnterpriseGroupRoleBindingArgs and EnterpriseGroupRoleBindingOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingInput` via:
//
//	EnterpriseGroupRoleBindingArgs{...}
type EnterpriseGroupRoleBindingInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingOutput() EnterpriseGroupRoleBindingOutput
	ToEnterpriseGroupRoleBindingOutputWithContext(context.Context) EnterpriseGroupRoleBindingOutput
}

type EnterpriseGroupRoleBindingArgs struct {
	// Role binding configuration.
	RoleBindings EnterpriseGroupRoleBindingRoleBindingArrayInput `pulumi:"roleBindings"`
}

func (EnterpriseGroupRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBinding)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingArgs) ToEnterpriseGroupRoleBindingOutput() EnterpriseGroupRoleBindingOutput {
	return i.ToEnterpriseGroupRoleBindingOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingArgs) ToEnterpriseGroupRoleBindingOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingOutput)
}

// EnterpriseGroupRoleBindingArrayInput is an input type that accepts EnterpriseGroupRoleBindingArray and EnterpriseGroupRoleBindingArrayOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingArrayInput` via:
//
//	EnterpriseGroupRoleBindingArray{ EnterpriseGroupRoleBindingArgs{...} }
type EnterpriseGroupRoleBindingArrayInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingArrayOutput() EnterpriseGroupRoleBindingArrayOutput
	ToEnterpriseGroupRoleBindingArrayOutputWithContext(context.Context) EnterpriseGroupRoleBindingArrayOutput
}

type EnterpriseGroupRoleBindingArray []EnterpriseGroupRoleBindingInput

func (EnterpriseGroupRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBinding)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingArray) ToEnterpriseGroupRoleBindingArrayOutput() EnterpriseGroupRoleBindingArrayOutput {
	return i.ToEnterpriseGroupRoleBindingArrayOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingArray) ToEnterpriseGroupRoleBindingArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingArrayOutput)
}

type EnterpriseGroupRoleBindingOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBinding)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingOutput) ToEnterpriseGroupRoleBindingOutput() EnterpriseGroupRoleBindingOutput {
	return o
}

func (o EnterpriseGroupRoleBindingOutput) ToEnterpriseGroupRoleBindingOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingOutput {
	return o
}

// Role binding configuration.
func (o EnterpriseGroupRoleBindingOutput) RoleBindings() EnterpriseGroupRoleBindingRoleBindingArrayOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBinding) []EnterpriseGroupRoleBindingRoleBinding { return v.RoleBindings }).(EnterpriseGroupRoleBindingRoleBindingArrayOutput)
}

type EnterpriseGroupRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBinding)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingArrayOutput) ToEnterpriseGroupRoleBindingArrayOutput() EnterpriseGroupRoleBindingArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingArrayOutput) ToEnterpriseGroupRoleBindingArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingArrayOutput) Index(i pulumi.IntInput) EnterpriseGroupRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseGroupRoleBinding {
		return vs[0].([]EnterpriseGroupRoleBinding)[vs[1].(int)]
	}).(EnterpriseGroupRoleBindingOutput)
}

type EnterpriseGroupRoleBindingRoleBinding struct {
	// Role binding ID assigned by the API.
	Id *string `pulumi:"id"`
	// Role binding name.
	Name string `pulumi:"name"`
	// Role UUID.
	RoleId string `pulumi:"roleId"`
	// List of scopes for the role binding.
	Scopes []EnterpriseGroupRoleBindingRoleBindingScope `pulumi:"scopes"`
}

// EnterpriseGroupRoleBindingRoleBindingInput is an input type that accepts EnterpriseGroupRoleBindingRoleBindingArgs and EnterpriseGroupRoleBindingRoleBindingOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingRoleBindingInput` via:
//
//	EnterpriseGroupRoleBindingRoleBindingArgs{...}
type EnterpriseGroupRoleBindingRoleBindingInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingRoleBindingOutput() EnterpriseGroupRoleBindingRoleBindingOutput
	ToEnterpriseGroupRoleBindingRoleBindingOutputWithContext(context.Context) EnterpriseGroupRoleBindingRoleBindingOutput
}

type EnterpriseGroupRoleBindingRoleBindingArgs struct {
	// Role binding ID assigned by the API.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Role binding name.
	Name pulumi.StringInput `pulumi:"name"`
	// Role UUID.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// List of scopes for the role binding.
	Scopes EnterpriseGroupRoleBindingRoleBindingScopeArrayInput `pulumi:"scopes"`
}

func (EnterpriseGroupRoleBindingRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBinding)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingRoleBindingArgs) ToEnterpriseGroupRoleBindingRoleBindingOutput() EnterpriseGroupRoleBindingRoleBindingOutput {
	return i.ToEnterpriseGroupRoleBindingRoleBindingOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingRoleBindingArgs) ToEnterpriseGroupRoleBindingRoleBindingOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingRoleBindingOutput)
}

// EnterpriseGroupRoleBindingRoleBindingArrayInput is an input type that accepts EnterpriseGroupRoleBindingRoleBindingArray and EnterpriseGroupRoleBindingRoleBindingArrayOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingRoleBindingArrayInput` via:
//
//	EnterpriseGroupRoleBindingRoleBindingArray{ EnterpriseGroupRoleBindingRoleBindingArgs{...} }
type EnterpriseGroupRoleBindingRoleBindingArrayInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingRoleBindingArrayOutput() EnterpriseGroupRoleBindingRoleBindingArrayOutput
	ToEnterpriseGroupRoleBindingRoleBindingArrayOutputWithContext(context.Context) EnterpriseGroupRoleBindingRoleBindingArrayOutput
}

type EnterpriseGroupRoleBindingRoleBindingArray []EnterpriseGroupRoleBindingRoleBindingInput

func (EnterpriseGroupRoleBindingRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBindingRoleBinding)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingRoleBindingArray) ToEnterpriseGroupRoleBindingRoleBindingArrayOutput() EnterpriseGroupRoleBindingRoleBindingArrayOutput {
	return i.ToEnterpriseGroupRoleBindingRoleBindingArrayOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingRoleBindingArray) ToEnterpriseGroupRoleBindingRoleBindingArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingRoleBindingArrayOutput)
}

type EnterpriseGroupRoleBindingRoleBindingOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBinding)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingRoleBindingOutput) ToEnterpriseGroupRoleBindingRoleBindingOutput() EnterpriseGroupRoleBindingRoleBindingOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingOutput) ToEnterpriseGroupRoleBindingRoleBindingOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingOutput {
	return o
}

// Role binding ID assigned by the API.
func (o EnterpriseGroupRoleBindingRoleBindingOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBinding) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Role binding name.
func (o EnterpriseGroupRoleBindingRoleBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBinding) string { return v.Name }).(pulumi.StringOutput)
}

// Role UUID.
func (o EnterpriseGroupRoleBindingRoleBindingOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBinding) string { return v.RoleId }).(pulumi.StringOutput)
}

// List of scopes for the role binding.
func (o EnterpriseGroupRoleBindingRoleBindingOutput) Scopes() EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBinding) []EnterpriseGroupRoleBindingRoleBindingScope {
		return v.Scopes
	}).(EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput)
}

type EnterpriseGroupRoleBindingRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBindingRoleBinding)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingRoleBindingArrayOutput) ToEnterpriseGroupRoleBindingRoleBindingArrayOutput() EnterpriseGroupRoleBindingRoleBindingArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingArrayOutput) ToEnterpriseGroupRoleBindingRoleBindingArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingArrayOutput) Index(i pulumi.IntInput) EnterpriseGroupRoleBindingRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseGroupRoleBindingRoleBinding {
		return vs[0].([]EnterpriseGroupRoleBindingRoleBinding)[vs[1].(int)]
	}).(EnterpriseGroupRoleBindingRoleBindingOutput)
}

type EnterpriseGroupRoleBindingRoleBindingScope struct {
	// Scope configuration.
	Scopes []EnterpriseGroupRoleBindingRoleBindingScopeScope `pulumi:"scopes"`
}

// EnterpriseGroupRoleBindingRoleBindingScopeInput is an input type that accepts EnterpriseGroupRoleBindingRoleBindingScopeArgs and EnterpriseGroupRoleBindingRoleBindingScopeOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingRoleBindingScopeInput` via:
//
//	EnterpriseGroupRoleBindingRoleBindingScopeArgs{...}
type EnterpriseGroupRoleBindingRoleBindingScopeInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingRoleBindingScopeOutput() EnterpriseGroupRoleBindingRoleBindingScopeOutput
	ToEnterpriseGroupRoleBindingRoleBindingScopeOutputWithContext(context.Context) EnterpriseGroupRoleBindingRoleBindingScopeOutput
}

type EnterpriseGroupRoleBindingRoleBindingScopeArgs struct {
	// Scope configuration.
	Scopes EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayInput `pulumi:"scopes"`
}

func (EnterpriseGroupRoleBindingRoleBindingScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScope)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeArgs) ToEnterpriseGroupRoleBindingRoleBindingScopeOutput() EnterpriseGroupRoleBindingRoleBindingScopeOutput {
	return i.ToEnterpriseGroupRoleBindingRoleBindingScopeOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeArgs) ToEnterpriseGroupRoleBindingRoleBindingScopeOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingRoleBindingScopeOutput)
}

// EnterpriseGroupRoleBindingRoleBindingScopeArrayInput is an input type that accepts EnterpriseGroupRoleBindingRoleBindingScopeArray and EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingRoleBindingScopeArrayInput` via:
//
//	EnterpriseGroupRoleBindingRoleBindingScopeArray{ EnterpriseGroupRoleBindingRoleBindingScopeArgs{...} }
type EnterpriseGroupRoleBindingRoleBindingScopeArrayInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutput() EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput
	ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutputWithContext(context.Context) EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput
}

type EnterpriseGroupRoleBindingRoleBindingScopeArray []EnterpriseGroupRoleBindingRoleBindingScopeInput

func (EnterpriseGroupRoleBindingRoleBindingScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBindingRoleBindingScope)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeArray) ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutput() EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput {
	return i.ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeArray) ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput)
}

type EnterpriseGroupRoleBindingRoleBindingScopeOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingRoleBindingScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScope)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeOutput() EnterpriseGroupRoleBindingRoleBindingScopeOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeOutput {
	return o
}

// Scope configuration.
func (o EnterpriseGroupRoleBindingRoleBindingScopeOutput) Scopes() EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBindingScope) []EnterpriseGroupRoleBindingRoleBindingScopeScope {
		return v.Scopes
	}).(EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput)
}

type EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBindingRoleBindingScope)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutput() EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput) Index(i pulumi.IntInput) EnterpriseGroupRoleBindingRoleBindingScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseGroupRoleBindingRoleBindingScope {
		return vs[0].([]EnterpriseGroupRoleBindingRoleBindingScope)[vs[1].(int)]
	}).(EnterpriseGroupRoleBindingRoleBindingScopeOutput)
}

type EnterpriseGroupRoleBindingRoleBindingScopeScope struct {
	// Cluster ID scope.
	Cluster *string `pulumi:"cluster"`
	// Organization ID scope.
	Organization *string `pulumi:"organization"`
}

// EnterpriseGroupRoleBindingRoleBindingScopeScopeInput is an input type that accepts EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs and EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingRoleBindingScopeScopeInput` via:
//
//	EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs{...}
type EnterpriseGroupRoleBindingRoleBindingScopeScopeInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutput() EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput
	ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutputWithContext(context.Context) EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput
}

type EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs struct {
	// Cluster ID scope.
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// Organization ID scope.
	Organization pulumi.StringPtrInput `pulumi:"organization"`
}

func (EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScopeScope)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutput() EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput {
	return i.ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput)
}

// EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayInput is an input type that accepts EnterpriseGroupRoleBindingRoleBindingScopeScopeArray and EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput values.
// You can construct a concrete instance of `EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayInput` via:
//
//	EnterpriseGroupRoleBindingRoleBindingScopeScopeArray{ EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs{...} }
type EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayInput interface {
	pulumi.Input

	ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput() EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput
	ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutputWithContext(context.Context) EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput
}

type EnterpriseGroupRoleBindingRoleBindingScopeScopeArray []EnterpriseGroupRoleBindingRoleBindingScopeScopeInput

func (EnterpriseGroupRoleBindingRoleBindingScopeScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBindingRoleBindingScopeScope)(nil)).Elem()
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeScopeArray) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput() EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput {
	return i.ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutputWithContext(context.Background())
}

func (i EnterpriseGroupRoleBindingRoleBindingScopeScopeArray) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput)
}

type EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScopeScope)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutput() EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput {
	return o
}

// Cluster ID scope.
func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBindingScopeScope) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// Organization ID scope.
func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseGroupRoleBindingRoleBindingScopeScope) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

type EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseGroupRoleBindingRoleBindingScopeScope)(nil)).Elem()
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput() EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput) ToEnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutputWithContext(ctx context.Context) EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput {
	return o
}

func (o EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput) Index(i pulumi.IntInput) EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseGroupRoleBindingRoleBindingScopeScope {
		return vs[0].([]EnterpriseGroupRoleBindingRoleBindingScopeScope)[vs[1].(int)]
	}).(EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput)
}

type OrganizationGroupMember struct {
	Members []OrganizationGroupMemberMember `pulumi:"members"`
}

// OrganizationGroupMemberInput is an input type that accepts OrganizationGroupMemberArgs and OrganizationGroupMemberOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberInput` via:
//
//	OrganizationGroupMemberArgs{...}
type OrganizationGroupMemberInput interface {
	pulumi.Input

	ToOrganizationGroupMemberOutput() OrganizationGroupMemberOutput
	ToOrganizationGroupMemberOutputWithContext(context.Context) OrganizationGroupMemberOutput
}

type OrganizationGroupMemberArgs struct {
	Members OrganizationGroupMemberMemberArrayInput `pulumi:"members"`
}

func (OrganizationGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMember)(nil)).Elem()
}

func (i OrganizationGroupMemberArgs) ToOrganizationGroupMemberOutput() OrganizationGroupMemberOutput {
	return i.ToOrganizationGroupMemberOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberArgs) ToOrganizationGroupMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberOutput)
}

// OrganizationGroupMemberArrayInput is an input type that accepts OrganizationGroupMemberArray and OrganizationGroupMemberArrayOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberArrayInput` via:
//
//	OrganizationGroupMemberArray{ OrganizationGroupMemberArgs{...} }
type OrganizationGroupMemberArrayInput interface {
	pulumi.Input

	ToOrganizationGroupMemberArrayOutput() OrganizationGroupMemberArrayOutput
	ToOrganizationGroupMemberArrayOutputWithContext(context.Context) OrganizationGroupMemberArrayOutput
}

type OrganizationGroupMemberArray []OrganizationGroupMemberInput

func (OrganizationGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMember)(nil)).Elem()
}

func (i OrganizationGroupMemberArray) ToOrganizationGroupMemberArrayOutput() OrganizationGroupMemberArrayOutput {
	return i.ToOrganizationGroupMemberArrayOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberArray) ToOrganizationGroupMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberArrayOutput)
}

type OrganizationGroupMemberOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMember)(nil)).Elem()
}

func (o OrganizationGroupMemberOutput) ToOrganizationGroupMemberOutput() OrganizationGroupMemberOutput {
	return o
}

func (o OrganizationGroupMemberOutput) ToOrganizationGroupMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberOutput {
	return o
}

func (o OrganizationGroupMemberOutput) Members() OrganizationGroupMemberMemberArrayOutput {
	return o.ApplyT(func(v OrganizationGroupMember) []OrganizationGroupMemberMember { return v.Members }).(OrganizationGroupMemberMemberArrayOutput)
}

type OrganizationGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMember)(nil)).Elem()
}

func (o OrganizationGroupMemberArrayOutput) ToOrganizationGroupMemberArrayOutput() OrganizationGroupMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberArrayOutput) ToOrganizationGroupMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberArrayOutput) Index(i pulumi.IntInput) OrganizationGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationGroupMember {
		return vs[0].([]OrganizationGroupMember)[vs[1].(int)]
	}).(OrganizationGroupMemberOutput)
}

type OrganizationGroupMemberMember struct {
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
	// Kind of the member. Supported values include: user, service_account.
	Kind string `pulumi:"kind"`
}

// OrganizationGroupMemberMemberInput is an input type that accepts OrganizationGroupMemberMemberArgs and OrganizationGroupMemberMemberOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberMemberInput` via:
//
//	OrganizationGroupMemberMemberArgs{...}
type OrganizationGroupMemberMemberInput interface {
	pulumi.Input

	ToOrganizationGroupMemberMemberOutput() OrganizationGroupMemberMemberOutput
	ToOrganizationGroupMemberMemberOutputWithContext(context.Context) OrganizationGroupMemberMemberOutput
}

type OrganizationGroupMemberMemberArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
	Id    pulumi.StringInput `pulumi:"id"`
	// Kind of the member. Supported values include: user, service_account.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (OrganizationGroupMemberMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMemberMember)(nil)).Elem()
}

func (i OrganizationGroupMemberMemberArgs) ToOrganizationGroupMemberMemberOutput() OrganizationGroupMemberMemberOutput {
	return i.ToOrganizationGroupMemberMemberOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberMemberArgs) ToOrganizationGroupMemberMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberMemberOutput)
}

// OrganizationGroupMemberMemberArrayInput is an input type that accepts OrganizationGroupMemberMemberArray and OrganizationGroupMemberMemberArrayOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberMemberArrayInput` via:
//
//	OrganizationGroupMemberMemberArray{ OrganizationGroupMemberMemberArgs{...} }
type OrganizationGroupMemberMemberArrayInput interface {
	pulumi.Input

	ToOrganizationGroupMemberMemberArrayOutput() OrganizationGroupMemberMemberArrayOutput
	ToOrganizationGroupMemberMemberArrayOutputWithContext(context.Context) OrganizationGroupMemberMemberArrayOutput
}

type OrganizationGroupMemberMemberArray []OrganizationGroupMemberMemberInput

func (OrganizationGroupMemberMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMemberMember)(nil)).Elem()
}

func (i OrganizationGroupMemberMemberArray) ToOrganizationGroupMemberMemberArrayOutput() OrganizationGroupMemberMemberArrayOutput {
	return i.ToOrganizationGroupMemberMemberArrayOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberMemberArray) ToOrganizationGroupMemberMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberMemberArrayOutput)
}

type OrganizationGroupMemberMemberOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMemberMember)(nil)).Elem()
}

func (o OrganizationGroupMemberMemberOutput) ToOrganizationGroupMemberMemberOutput() OrganizationGroupMemberMemberOutput {
	return o
}

func (o OrganizationGroupMemberMemberOutput) ToOrganizationGroupMemberMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberOutput {
	return o
}

func (o OrganizationGroupMemberMemberOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationGroupMemberMember) string { return v.Email }).(pulumi.StringOutput)
}

func (o OrganizationGroupMemberMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationGroupMemberMember) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of the member. Supported values include: user, service_account.
func (o OrganizationGroupMemberMemberOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationGroupMemberMember) string { return v.Kind }).(pulumi.StringOutput)
}

type OrganizationGroupMemberMemberArrayOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMemberMember)(nil)).Elem()
}

func (o OrganizationGroupMemberMemberArrayOutput) ToOrganizationGroupMemberMemberArrayOutput() OrganizationGroupMemberMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberMemberArrayOutput) ToOrganizationGroupMemberMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberMemberArrayOutput) Index(i pulumi.IntInput) OrganizationGroupMemberMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationGroupMemberMember {
		return vs[0].([]OrganizationGroupMemberMember)[vs[1].(int)]
	}).(OrganizationGroupMemberMemberOutput)
}

type SSOConnectionAad struct {
	// Azure AD domain
	AdDomain string `pulumi:"adDomain"`
	// Azure AD client ID
	ClientId string `pulumi:"clientId"`
	// Azure AD client secret
	ClientSecret string `pulumi:"clientSecret"`
}

// SSOConnectionAadInput is an input type that accepts SSOConnectionAadArgs and SSOConnectionAadOutput values.
// You can construct a concrete instance of `SSOConnectionAadInput` via:
//
//	SSOConnectionAadArgs{...}
type SSOConnectionAadInput interface {
	pulumi.Input

	ToSSOConnectionAadOutput() SSOConnectionAadOutput
	ToSSOConnectionAadOutputWithContext(context.Context) SSOConnectionAadOutput
}

type SSOConnectionAadArgs struct {
	// Azure AD domain
	AdDomain pulumi.StringInput `pulumi:"adDomain"`
	// Azure AD client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Azure AD client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (SSOConnectionAadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSOConnectionAad)(nil)).Elem()
}

func (i SSOConnectionAadArgs) ToSSOConnectionAadOutput() SSOConnectionAadOutput {
	return i.ToSSOConnectionAadOutputWithContext(context.Background())
}

func (i SSOConnectionAadArgs) ToSSOConnectionAadOutputWithContext(ctx context.Context) SSOConnectionAadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionAadOutput)
}

func (i SSOConnectionAadArgs) ToSSOConnectionAadPtrOutput() SSOConnectionAadPtrOutput {
	return i.ToSSOConnectionAadPtrOutputWithContext(context.Background())
}

func (i SSOConnectionAadArgs) ToSSOConnectionAadPtrOutputWithContext(ctx context.Context) SSOConnectionAadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionAadOutput).ToSSOConnectionAadPtrOutputWithContext(ctx)
}

// SSOConnectionAadPtrInput is an input type that accepts SSOConnectionAadArgs, SSOConnectionAadPtr and SSOConnectionAadPtrOutput values.
// You can construct a concrete instance of `SSOConnectionAadPtrInput` via:
//
//	        SSOConnectionAadArgs{...}
//
//	or:
//
//	        nil
type SSOConnectionAadPtrInput interface {
	pulumi.Input

	ToSSOConnectionAadPtrOutput() SSOConnectionAadPtrOutput
	ToSSOConnectionAadPtrOutputWithContext(context.Context) SSOConnectionAadPtrOutput
}

type ssoconnectionAadPtrType SSOConnectionAadArgs

func SSOConnectionAadPtr(v *SSOConnectionAadArgs) SSOConnectionAadPtrInput {
	return (*ssoconnectionAadPtrType)(v)
}

func (*ssoconnectionAadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSOConnectionAad)(nil)).Elem()
}

func (i *ssoconnectionAadPtrType) ToSSOConnectionAadPtrOutput() SSOConnectionAadPtrOutput {
	return i.ToSSOConnectionAadPtrOutputWithContext(context.Background())
}

func (i *ssoconnectionAadPtrType) ToSSOConnectionAadPtrOutputWithContext(ctx context.Context) SSOConnectionAadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionAadPtrOutput)
}

type SSOConnectionAadOutput struct{ *pulumi.OutputState }

func (SSOConnectionAadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSOConnectionAad)(nil)).Elem()
}

func (o SSOConnectionAadOutput) ToSSOConnectionAadOutput() SSOConnectionAadOutput {
	return o
}

func (o SSOConnectionAadOutput) ToSSOConnectionAadOutputWithContext(ctx context.Context) SSOConnectionAadOutput {
	return o
}

func (o SSOConnectionAadOutput) ToSSOConnectionAadPtrOutput() SSOConnectionAadPtrOutput {
	return o.ToSSOConnectionAadPtrOutputWithContext(context.Background())
}

func (o SSOConnectionAadOutput) ToSSOConnectionAadPtrOutputWithContext(ctx context.Context) SSOConnectionAadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSOConnectionAad) *SSOConnectionAad {
		return &v
	}).(SSOConnectionAadPtrOutput)
}

// Azure AD domain
func (o SSOConnectionAadOutput) AdDomain() pulumi.StringOutput {
	return o.ApplyT(func(v SSOConnectionAad) string { return v.AdDomain }).(pulumi.StringOutput)
}

// Azure AD client ID
func (o SSOConnectionAadOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SSOConnectionAad) string { return v.ClientId }).(pulumi.StringOutput)
}

// Azure AD client secret
func (o SSOConnectionAadOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SSOConnectionAad) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type SSOConnectionAadPtrOutput struct{ *pulumi.OutputState }

func (SSOConnectionAadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSOConnectionAad)(nil)).Elem()
}

func (o SSOConnectionAadPtrOutput) ToSSOConnectionAadPtrOutput() SSOConnectionAadPtrOutput {
	return o
}

func (o SSOConnectionAadPtrOutput) ToSSOConnectionAadPtrOutputWithContext(ctx context.Context) SSOConnectionAadPtrOutput {
	return o
}

func (o SSOConnectionAadPtrOutput) Elem() SSOConnectionAadOutput {
	return o.ApplyT(func(v *SSOConnectionAad) SSOConnectionAad {
		if v != nil {
			return *v
		}
		var ret SSOConnectionAad
		return ret
	}).(SSOConnectionAadOutput)
}

// Azure AD domain
func (o SSOConnectionAadPtrOutput) AdDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSOConnectionAad) *string {
		if v == nil {
			return nil
		}
		return &v.AdDomain
	}).(pulumi.StringPtrOutput)
}

// Azure AD client ID
func (o SSOConnectionAadPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSOConnectionAad) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Azure AD client secret
func (o SSOConnectionAadPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSOConnectionAad) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type SSOConnectionOkta struct {
	// Okta client ID
	ClientId string `pulumi:"clientId"`
	// Okta client secret
	ClientSecret string `pulumi:"clientSecret"`
	// Okta domain
	OktaDomain string `pulumi:"oktaDomain"`
}

// SSOConnectionOktaInput is an input type that accepts SSOConnectionOktaArgs and SSOConnectionOktaOutput values.
// You can construct a concrete instance of `SSOConnectionOktaInput` via:
//
//	SSOConnectionOktaArgs{...}
type SSOConnectionOktaInput interface {
	pulumi.Input

	ToSSOConnectionOktaOutput() SSOConnectionOktaOutput
	ToSSOConnectionOktaOutputWithContext(context.Context) SSOConnectionOktaOutput
}

type SSOConnectionOktaArgs struct {
	// Okta client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Okta client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Okta domain
	OktaDomain pulumi.StringInput `pulumi:"oktaDomain"`
}

func (SSOConnectionOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSOConnectionOkta)(nil)).Elem()
}

func (i SSOConnectionOktaArgs) ToSSOConnectionOktaOutput() SSOConnectionOktaOutput {
	return i.ToSSOConnectionOktaOutputWithContext(context.Background())
}

func (i SSOConnectionOktaArgs) ToSSOConnectionOktaOutputWithContext(ctx context.Context) SSOConnectionOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionOktaOutput)
}

func (i SSOConnectionOktaArgs) ToSSOConnectionOktaPtrOutput() SSOConnectionOktaPtrOutput {
	return i.ToSSOConnectionOktaPtrOutputWithContext(context.Background())
}

func (i SSOConnectionOktaArgs) ToSSOConnectionOktaPtrOutputWithContext(ctx context.Context) SSOConnectionOktaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionOktaOutput).ToSSOConnectionOktaPtrOutputWithContext(ctx)
}

// SSOConnectionOktaPtrInput is an input type that accepts SSOConnectionOktaArgs, SSOConnectionOktaPtr and SSOConnectionOktaPtrOutput values.
// You can construct a concrete instance of `SSOConnectionOktaPtrInput` via:
//
//	        SSOConnectionOktaArgs{...}
//
//	or:
//
//	        nil
type SSOConnectionOktaPtrInput interface {
	pulumi.Input

	ToSSOConnectionOktaPtrOutput() SSOConnectionOktaPtrOutput
	ToSSOConnectionOktaPtrOutputWithContext(context.Context) SSOConnectionOktaPtrOutput
}

type ssoconnectionOktaPtrType SSOConnectionOktaArgs

func SSOConnectionOktaPtr(v *SSOConnectionOktaArgs) SSOConnectionOktaPtrInput {
	return (*ssoconnectionOktaPtrType)(v)
}

func (*ssoconnectionOktaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSOConnectionOkta)(nil)).Elem()
}

func (i *ssoconnectionOktaPtrType) ToSSOConnectionOktaPtrOutput() SSOConnectionOktaPtrOutput {
	return i.ToSSOConnectionOktaPtrOutputWithContext(context.Background())
}

func (i *ssoconnectionOktaPtrType) ToSSOConnectionOktaPtrOutputWithContext(ctx context.Context) SSOConnectionOktaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionOktaPtrOutput)
}

type SSOConnectionOktaOutput struct{ *pulumi.OutputState }

func (SSOConnectionOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSOConnectionOkta)(nil)).Elem()
}

func (o SSOConnectionOktaOutput) ToSSOConnectionOktaOutput() SSOConnectionOktaOutput {
	return o
}

func (o SSOConnectionOktaOutput) ToSSOConnectionOktaOutputWithContext(ctx context.Context) SSOConnectionOktaOutput {
	return o
}

func (o SSOConnectionOktaOutput) ToSSOConnectionOktaPtrOutput() SSOConnectionOktaPtrOutput {
	return o.ToSSOConnectionOktaPtrOutputWithContext(context.Background())
}

func (o SSOConnectionOktaOutput) ToSSOConnectionOktaPtrOutputWithContext(ctx context.Context) SSOConnectionOktaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSOConnectionOkta) *SSOConnectionOkta {
		return &v
	}).(SSOConnectionOktaPtrOutput)
}

// Okta client ID
func (o SSOConnectionOktaOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SSOConnectionOkta) string { return v.ClientId }).(pulumi.StringOutput)
}

// Okta client secret
func (o SSOConnectionOktaOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SSOConnectionOkta) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Okta domain
func (o SSOConnectionOktaOutput) OktaDomain() pulumi.StringOutput {
	return o.ApplyT(func(v SSOConnectionOkta) string { return v.OktaDomain }).(pulumi.StringOutput)
}

type SSOConnectionOktaPtrOutput struct{ *pulumi.OutputState }

func (SSOConnectionOktaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSOConnectionOkta)(nil)).Elem()
}

func (o SSOConnectionOktaPtrOutput) ToSSOConnectionOktaPtrOutput() SSOConnectionOktaPtrOutput {
	return o
}

func (o SSOConnectionOktaPtrOutput) ToSSOConnectionOktaPtrOutputWithContext(ctx context.Context) SSOConnectionOktaPtrOutput {
	return o
}

func (o SSOConnectionOktaPtrOutput) Elem() SSOConnectionOktaOutput {
	return o.ApplyT(func(v *SSOConnectionOkta) SSOConnectionOkta {
		if v != nil {
			return *v
		}
		var ret SSOConnectionOkta
		return ret
	}).(SSOConnectionOktaOutput)
}

// Okta client ID
func (o SSOConnectionOktaPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSOConnectionOkta) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Okta client secret
func (o SSOConnectionOktaPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSOConnectionOkta) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Okta domain
func (o SSOConnectionOktaPtrOutput) OktaDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSOConnectionOkta) *string {
		if v == nil {
			return nil
		}
		return &v.OktaDomain
	}).(pulumi.StringPtrOutput)
}

type ServiceAccountAuthor struct {
	Email *string `pulumi:"email"`
	Id    *string `pulumi:"id"`
	Kind  *string `pulumi:"kind"`
}

// ServiceAccountAuthorInput is an input type that accepts ServiceAccountAuthorArgs and ServiceAccountAuthorOutput values.
// You can construct a concrete instance of `ServiceAccountAuthorInput` via:
//
//	ServiceAccountAuthorArgs{...}
type ServiceAccountAuthorInput interface {
	pulumi.Input

	ToServiceAccountAuthorOutput() ServiceAccountAuthorOutput
	ToServiceAccountAuthorOutputWithContext(context.Context) ServiceAccountAuthorOutput
}

type ServiceAccountAuthorArgs struct {
	Email pulumi.StringPtrInput `pulumi:"email"`
	Id    pulumi.StringPtrInput `pulumi:"id"`
	Kind  pulumi.StringPtrInput `pulumi:"kind"`
}

func (ServiceAccountAuthorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountAuthor)(nil)).Elem()
}

func (i ServiceAccountAuthorArgs) ToServiceAccountAuthorOutput() ServiceAccountAuthorOutput {
	return i.ToServiceAccountAuthorOutputWithContext(context.Background())
}

func (i ServiceAccountAuthorArgs) ToServiceAccountAuthorOutputWithContext(ctx context.Context) ServiceAccountAuthorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAuthorOutput)
}

// ServiceAccountAuthorArrayInput is an input type that accepts ServiceAccountAuthorArray and ServiceAccountAuthorArrayOutput values.
// You can construct a concrete instance of `ServiceAccountAuthorArrayInput` via:
//
//	ServiceAccountAuthorArray{ ServiceAccountAuthorArgs{...} }
type ServiceAccountAuthorArrayInput interface {
	pulumi.Input

	ToServiceAccountAuthorArrayOutput() ServiceAccountAuthorArrayOutput
	ToServiceAccountAuthorArrayOutputWithContext(context.Context) ServiceAccountAuthorArrayOutput
}

type ServiceAccountAuthorArray []ServiceAccountAuthorInput

func (ServiceAccountAuthorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccountAuthor)(nil)).Elem()
}

func (i ServiceAccountAuthorArray) ToServiceAccountAuthorArrayOutput() ServiceAccountAuthorArrayOutput {
	return i.ToServiceAccountAuthorArrayOutputWithContext(context.Background())
}

func (i ServiceAccountAuthorArray) ToServiceAccountAuthorArrayOutputWithContext(ctx context.Context) ServiceAccountAuthorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAuthorArrayOutput)
}

type ServiceAccountAuthorOutput struct{ *pulumi.OutputState }

func (ServiceAccountAuthorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountAuthor)(nil)).Elem()
}

func (o ServiceAccountAuthorOutput) ToServiceAccountAuthorOutput() ServiceAccountAuthorOutput {
	return o
}

func (o ServiceAccountAuthorOutput) ToServiceAccountAuthorOutputWithContext(ctx context.Context) ServiceAccountAuthorOutput {
	return o
}

func (o ServiceAccountAuthorOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountAuthor) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountAuthorOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountAuthor) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountAuthorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountAuthor) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

type ServiceAccountAuthorArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountAuthorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccountAuthor)(nil)).Elem()
}

func (o ServiceAccountAuthorArrayOutput) ToServiceAccountAuthorArrayOutput() ServiceAccountAuthorArrayOutput {
	return o
}

func (o ServiceAccountAuthorArrayOutput) ToServiceAccountAuthorArrayOutputWithContext(ctx context.Context) ServiceAccountAuthorArrayOutput {
	return o
}

func (o ServiceAccountAuthorArrayOutput) Index(i pulumi.IntInput) ServiceAccountAuthorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAccountAuthor {
		return vs[0].([]ServiceAccountAuthor)[vs[1].(int)]
	}).(ServiceAccountAuthorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupMemberInput)(nil)).Elem(), EnterpriseGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupMemberArrayInput)(nil)).Elem(), EnterpriseGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupMemberMemberInput)(nil)).Elem(), EnterpriseGroupMemberMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupMemberMemberArrayInput)(nil)).Elem(), EnterpriseGroupMemberMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingInput)(nil)).Elem(), EnterpriseGroupRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingArrayInput)(nil)).Elem(), EnterpriseGroupRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingInput)(nil)).Elem(), EnterpriseGroupRoleBindingRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingArrayInput)(nil)).Elem(), EnterpriseGroupRoleBindingRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScopeInput)(nil)).Elem(), EnterpriseGroupRoleBindingRoleBindingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScopeArrayInput)(nil)).Elem(), EnterpriseGroupRoleBindingRoleBindingScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScopeScopeInput)(nil)).Elem(), EnterpriseGroupRoleBindingRoleBindingScopeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayInput)(nil)).Elem(), EnterpriseGroupRoleBindingRoleBindingScopeScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberInput)(nil)).Elem(), OrganizationGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberArrayInput)(nil)).Elem(), OrganizationGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberMemberInput)(nil)).Elem(), OrganizationGroupMemberMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberMemberArrayInput)(nil)).Elem(), OrganizationGroupMemberMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionAadInput)(nil)).Elem(), SSOConnectionAadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionAadPtrInput)(nil)).Elem(), SSOConnectionAadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionOktaInput)(nil)).Elem(), SSOConnectionOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionOktaPtrInput)(nil)).Elem(), SSOConnectionOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAuthorInput)(nil)).Elem(), ServiceAccountAuthorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAuthorArrayInput)(nil)).Elem(), ServiceAccountAuthorArray{})
	pulumi.RegisterOutputType(EnterpriseGroupMemberOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupMemberMemberOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupMemberMemberArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingRoleBindingOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingRoleBindingScopeOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingRoleBindingScopeArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingRoleBindingScopeScopeOutput{})
	pulumi.RegisterOutputType(EnterpriseGroupRoleBindingRoleBindingScopeScopeArrayOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberMemberOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberMemberArrayOutput{})
	pulumi.RegisterOutputType(SSOConnectionAadOutput{})
	pulumi.RegisterOutputType(SSOConnectionAadPtrOutput{})
	pulumi.RegisterOutputType(SSOConnectionOktaOutput{})
	pulumi.RegisterOutputType(SSOConnectionOktaPtrOutput{})
	pulumi.RegisterOutputType(ServiceAccountAuthorOutput{})
	pulumi.RegisterOutputType(ServiceAccountAuthorArrayOutput{})
}
