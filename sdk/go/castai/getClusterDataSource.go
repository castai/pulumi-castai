// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetClusterDataSource(ctx *pulumi.Context, args *GetClusterDataSourceArgs, opts ...pulumi.InvokeOption) (*GetClusterDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClusterDataSourceResult
	err := ctx.Invoke("castai:index:GetClusterDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetClusterDataSource.
type GetClusterDataSourceArgs struct {
	// The ID of this resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by GetClusterDataSource.
type GetClusterDataSourceResult struct {
	AutoscalerPolicies []GetClusterDataSourceAutoscalerPolicy `pulumi:"autoscalerPolicies"`
	Credentials        []string                               `pulumi:"credentials"`
	// The ID of this resource.
	Id          string                           `pulumi:"id"`
	Kubeconfigs []GetClusterDataSourceKubeconfig `pulumi:"kubeconfigs"`
	Name        string                           `pulumi:"name"`
	Region      string                           `pulumi:"region"`
	Status      string                           `pulumi:"status"`
}

func GetClusterDataSourceOutput(ctx *pulumi.Context, args GetClusterDataSourceOutputArgs, opts ...pulumi.InvokeOption) GetClusterDataSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetClusterDataSourceResultOutput, error) {
			args := v.(GetClusterDataSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("castai:index:GetClusterDataSource", args, GetClusterDataSourceResultOutput{}, options).(GetClusterDataSourceResultOutput), nil
		}).(GetClusterDataSourceResultOutput)
}

// A collection of arguments for invoking GetClusterDataSource.
type GetClusterDataSourceOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetClusterDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDataSourceArgs)(nil)).Elem()
}

// A collection of values returned by GetClusterDataSource.
type GetClusterDataSourceResultOutput struct{ *pulumi.OutputState }

func (GetClusterDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDataSourceResult)(nil)).Elem()
}

func (o GetClusterDataSourceResultOutput) ToGetClusterDataSourceResultOutput() GetClusterDataSourceResultOutput {
	return o
}

func (o GetClusterDataSourceResultOutput) ToGetClusterDataSourceResultOutputWithContext(ctx context.Context) GetClusterDataSourceResultOutput {
	return o
}

func (o GetClusterDataSourceResultOutput) AutoscalerPolicies() GetClusterDataSourceAutoscalerPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) []GetClusterDataSourceAutoscalerPolicy { return v.AutoscalerPolicies }).(GetClusterDataSourceAutoscalerPolicyArrayOutput)
}

func (o GetClusterDataSourceResultOutput) Credentials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) []string { return v.Credentials }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o GetClusterDataSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterDataSourceResultOutput) Kubeconfigs() GetClusterDataSourceKubeconfigArrayOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) []GetClusterDataSourceKubeconfig { return v.Kubeconfigs }).(GetClusterDataSourceKubeconfigArrayOutput)
}

func (o GetClusterDataSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClusterDataSourceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetClusterDataSourceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDataSourceResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterDataSourceResultOutput{})
}
