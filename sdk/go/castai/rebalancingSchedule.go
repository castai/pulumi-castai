// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"errors"
	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/castai/pulumi-castai/sdk/go/castai/rebalancing"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RebalancingSchedule struct {
	pulumi.CustomResourceState

	LaunchConfiguration rebalancing.RebalancingScheduleLaunchConfigurationOutput `pulumi:"launchConfiguration"`
	// Name of the schedule.
	Name              pulumi.StringOutput                                    `pulumi:"name"`
	Schedule          rebalancing.RebalancingScheduleScheduleOutput          `pulumi:"schedule"`
	TriggerConditions rebalancing.RebalancingScheduleTriggerConditionsOutput `pulumi:"triggerConditions"`
}

// NewRebalancingSchedule registers a new resource with the given unique name, arguments, and options.
func NewRebalancingSchedule(ctx *pulumi.Context,
	name string, args *RebalancingScheduleArgs, opts ...pulumi.ResourceOption) (*RebalancingSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LaunchConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'LaunchConfiguration'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.TriggerConditions == nil {
		return nil, errors.New("invalid value for required argument 'TriggerConditions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RebalancingSchedule
	err := ctx.RegisterResource("castai:rebalancing:RebalancingSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRebalancingSchedule gets an existing RebalancingSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRebalancingSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RebalancingScheduleState, opts ...pulumi.ResourceOption) (*RebalancingSchedule, error) {
	var resource RebalancingSchedule
	err := ctx.ReadResource("castai:rebalancing:RebalancingSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RebalancingSchedule resources.
type rebalancingScheduleState struct {
	LaunchConfiguration *rebalancing.RebalancingScheduleLaunchConfiguration `pulumi:"launchConfiguration"`
	// Name of the schedule.
	Name              *string                                           `pulumi:"name"`
	Schedule          *rebalancing.RebalancingScheduleSchedule          `pulumi:"schedule"`
	TriggerConditions *rebalancing.RebalancingScheduleTriggerConditions `pulumi:"triggerConditions"`
}

type RebalancingScheduleState struct {
	LaunchConfiguration rebalancing.RebalancingScheduleLaunchConfigurationPtrInput
	// Name of the schedule.
	Name              pulumi.StringPtrInput
	Schedule          rebalancing.RebalancingScheduleSchedulePtrInput
	TriggerConditions rebalancing.RebalancingScheduleTriggerConditionsPtrInput
}

func (RebalancingScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*rebalancingScheduleState)(nil)).Elem()
}

type rebalancingScheduleArgs struct {
	LaunchConfiguration rebalancing.RebalancingScheduleLaunchConfiguration `pulumi:"launchConfiguration"`
	// Name of the schedule.
	Name              *string                                          `pulumi:"name"`
	Schedule          rebalancing.RebalancingScheduleSchedule          `pulumi:"schedule"`
	TriggerConditions rebalancing.RebalancingScheduleTriggerConditions `pulumi:"triggerConditions"`
}

// The set of arguments for constructing a RebalancingSchedule resource.
type RebalancingScheduleArgs struct {
	LaunchConfiguration rebalancing.RebalancingScheduleLaunchConfigurationInput
	// Name of the schedule.
	Name              pulumi.StringPtrInput
	Schedule          rebalancing.RebalancingScheduleScheduleInput
	TriggerConditions rebalancing.RebalancingScheduleTriggerConditionsInput
}

func (RebalancingScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rebalancingScheduleArgs)(nil)).Elem()
}

type RebalancingScheduleInput interface {
	pulumi.Input

	ToRebalancingScheduleOutput() RebalancingScheduleOutput
	ToRebalancingScheduleOutputWithContext(ctx context.Context) RebalancingScheduleOutput
}

func (*RebalancingSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingSchedule)(nil)).Elem()
}

func (i *RebalancingSchedule) ToRebalancingScheduleOutput() RebalancingScheduleOutput {
	return i.ToRebalancingScheduleOutputWithContext(context.Background())
}

func (i *RebalancingSchedule) ToRebalancingScheduleOutputWithContext(ctx context.Context) RebalancingScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleOutput)
}

// RebalancingScheduleArrayInput is an input type that accepts RebalancingScheduleArray and RebalancingScheduleArrayOutput values.
// You can construct a concrete instance of `RebalancingScheduleArrayInput` via:
//
//	RebalancingScheduleArray{ RebalancingScheduleArgs{...} }
type RebalancingScheduleArrayInput interface {
	pulumi.Input

	ToRebalancingScheduleArrayOutput() RebalancingScheduleArrayOutput
	ToRebalancingScheduleArrayOutputWithContext(context.Context) RebalancingScheduleArrayOutput
}

type RebalancingScheduleArray []RebalancingScheduleInput

func (RebalancingScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RebalancingSchedule)(nil)).Elem()
}

func (i RebalancingScheduleArray) ToRebalancingScheduleArrayOutput() RebalancingScheduleArrayOutput {
	return i.ToRebalancingScheduleArrayOutputWithContext(context.Background())
}

func (i RebalancingScheduleArray) ToRebalancingScheduleArrayOutputWithContext(ctx context.Context) RebalancingScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleArrayOutput)
}

// RebalancingScheduleMapInput is an input type that accepts RebalancingScheduleMap and RebalancingScheduleMapOutput values.
// You can construct a concrete instance of `RebalancingScheduleMapInput` via:
//
//	RebalancingScheduleMap{ "key": RebalancingScheduleArgs{...} }
type RebalancingScheduleMapInput interface {
	pulumi.Input

	ToRebalancingScheduleMapOutput() RebalancingScheduleMapOutput
	ToRebalancingScheduleMapOutputWithContext(context.Context) RebalancingScheduleMapOutput
}

type RebalancingScheduleMap map[string]RebalancingScheduleInput

func (RebalancingScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RebalancingSchedule)(nil)).Elem()
}

func (i RebalancingScheduleMap) ToRebalancingScheduleMapOutput() RebalancingScheduleMapOutput {
	return i.ToRebalancingScheduleMapOutputWithContext(context.Background())
}

func (i RebalancingScheduleMap) ToRebalancingScheduleMapOutputWithContext(ctx context.Context) RebalancingScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleMapOutput)
}

type RebalancingScheduleOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingSchedule)(nil)).Elem()
}

func (o RebalancingScheduleOutput) ToRebalancingScheduleOutput() RebalancingScheduleOutput {
	return o
}

func (o RebalancingScheduleOutput) ToRebalancingScheduleOutputWithContext(ctx context.Context) RebalancingScheduleOutput {
	return o
}

func (o RebalancingScheduleOutput) LaunchConfiguration() rebalancing.RebalancingScheduleLaunchConfigurationOutput {
	return o.ApplyT(func(v *RebalancingSchedule) rebalancing.RebalancingScheduleLaunchConfigurationOutput {
		return v.LaunchConfiguration
	}).(rebalancing.RebalancingScheduleLaunchConfigurationOutput)
}

// Name of the schedule.
func (o RebalancingScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RebalancingSchedule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RebalancingScheduleOutput) Schedule() rebalancing.RebalancingScheduleScheduleOutput {
	return o.ApplyT(func(v *RebalancingSchedule) rebalancing.RebalancingScheduleScheduleOutput { return v.Schedule }).(rebalancing.RebalancingScheduleScheduleOutput)
}

func (o RebalancingScheduleOutput) TriggerConditions() rebalancing.RebalancingScheduleTriggerConditionsOutput {
	return o.ApplyT(func(v *RebalancingSchedule) rebalancing.RebalancingScheduleTriggerConditionsOutput {
		return v.TriggerConditions
	}).(rebalancing.RebalancingScheduleTriggerConditionsOutput)
}

type RebalancingScheduleArrayOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RebalancingSchedule)(nil)).Elem()
}

func (o RebalancingScheduleArrayOutput) ToRebalancingScheduleArrayOutput() RebalancingScheduleArrayOutput {
	return o
}

func (o RebalancingScheduleArrayOutput) ToRebalancingScheduleArrayOutputWithContext(ctx context.Context) RebalancingScheduleArrayOutput {
	return o
}

func (o RebalancingScheduleArrayOutput) Index(i pulumi.IntInput) RebalancingScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RebalancingSchedule {
		return vs[0].([]*RebalancingSchedule)[vs[1].(int)]
	}).(RebalancingScheduleOutput)
}

type RebalancingScheduleMapOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RebalancingSchedule)(nil)).Elem()
}

func (o RebalancingScheduleMapOutput) ToRebalancingScheduleMapOutput() RebalancingScheduleMapOutput {
	return o
}

func (o RebalancingScheduleMapOutput) ToRebalancingScheduleMapOutputWithContext(ctx context.Context) RebalancingScheduleMapOutput {
	return o
}

func (o RebalancingScheduleMapOutput) MapIndex(k pulumi.StringInput) RebalancingScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RebalancingSchedule {
		return vs[0].(map[string]*RebalancingSchedule)[vs[1].(string)]
	}).(RebalancingScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleInput)(nil)).Elem(), &RebalancingSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleArrayInput)(nil)).Elem(), RebalancingScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleMapInput)(nil)).Elem(), RebalancingScheduleMap{})
	pulumi.RegisterOutputType(RebalancingScheduleOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleArrayOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleMapOutput{})
}
