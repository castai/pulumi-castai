// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "castai:autoscaling:Autoscaler":
		r = &Autoscaler{}
	case "castai:autoscaling:EvictorAdvancedConfig":
		r = &EvictorAdvancedConfig{}
	case "castai:aws:EksCluster":
		r = &EksCluster{}
	case "castai:aws:EksClusterId":
		r = &EksClusterId{}
	case "castai:aws:EksUserArn":
		r = &EksUserArn{}
	case "castai:azure:AksCluster":
		r = &AksCluster{}
	case "castai:gcp:GkeCluster":
		r = &GkeCluster{}
	case "castai:gcp:GkeClusterId":
		r = &GkeClusterId{}
	case "castai:iam:EnterpriseRoleBinding":
		r = &EnterpriseRoleBinding{}
	case "castai:iam:RoleBindings":
		r = &RoleBindings{}
	case "castai:index:AllocationGroup":
		r = &AllocationGroup{}
	case "castai:index:Commitments":
		r = &Commitments{}
	case "castai:index:Reservations":
		r = &Reservations{}
	case "castai:index:SecurityRuntimeRule":
		r = &SecurityRuntimeRule{}
	case "castai:organization:EnterpriseGroup":
		r = &EnterpriseGroup{}
	case "castai:organization:OrganizationGroup":
		r = &OrganizationGroup{}
	case "castai:organization:OrganizationMembers":
		r = &OrganizationMembers{}
	case "castai:organization:SSOConnection":
		r = &SSOConnection{}
	case "castai:organization:ServiceAccount":
		r = &ServiceAccount{}
	case "castai:organization:ServiceAccountKey":
		r = &ServiceAccountKey{}
	case "castai:rebalancing:HibernationSchedule":
		r = &HibernationSchedule{}
	case "castai:rebalancing:RebalancingJob":
		r = &RebalancingJob{}
	case "castai:rebalancing:RebalancingSchedule":
		r = &RebalancingSchedule{}
	case "castai:workload:WorkloadScalingPolicy":
		r = &WorkloadScalingPolicy{}
	case "castai:workload:WorkloadScalingPolicyOrder":
		r = &WorkloadScalingPolicyOrder{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:castai" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"castai",
		"autoscaling",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"aws",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"azure",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"gcp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"iam",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"index",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"organization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"rebalancing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"castai",
		"workload",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"castai",
		&pkg{version},
	)
}
