// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"errors"
	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkloadScalingPolicyOrder struct {
	pulumi.CustomResourceState

	// CAST AI cluster id
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// List of scaling policy IDs in the order they should be applied.
	PolicyIds pulumi.StringArrayOutput `pulumi:"policyIds"`
}

// NewWorkloadScalingPolicyOrder registers a new resource with the given unique name, arguments, and options.
func NewWorkloadScalingPolicyOrder(ctx *pulumi.Context,
	name string, args *WorkloadScalingPolicyOrderArgs, opts ...pulumi.ResourceOption) (*WorkloadScalingPolicyOrder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.PolicyIds == nil {
		return nil, errors.New("invalid value for required argument 'PolicyIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkloadScalingPolicyOrder
	err := ctx.RegisterResource("castai:workload:WorkloadScalingPolicyOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadScalingPolicyOrder gets an existing WorkloadScalingPolicyOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadScalingPolicyOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadScalingPolicyOrderState, opts ...pulumi.ResourceOption) (*WorkloadScalingPolicyOrder, error) {
	var resource WorkloadScalingPolicyOrder
	err := ctx.ReadResource("castai:workload:WorkloadScalingPolicyOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadScalingPolicyOrder resources.
type workloadScalingPolicyOrderState struct {
	// CAST AI cluster id
	ClusterId *string `pulumi:"clusterId"`
	// List of scaling policy IDs in the order they should be applied.
	PolicyIds []string `pulumi:"policyIds"`
}

type WorkloadScalingPolicyOrderState struct {
	// CAST AI cluster id
	ClusterId pulumi.StringPtrInput
	// List of scaling policy IDs in the order they should be applied.
	PolicyIds pulumi.StringArrayInput
}

func (WorkloadScalingPolicyOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadScalingPolicyOrderState)(nil)).Elem()
}

type workloadScalingPolicyOrderArgs struct {
	// CAST AI cluster id
	ClusterId string `pulumi:"clusterId"`
	// List of scaling policy IDs in the order they should be applied.
	PolicyIds []string `pulumi:"policyIds"`
}

// The set of arguments for constructing a WorkloadScalingPolicyOrder resource.
type WorkloadScalingPolicyOrderArgs struct {
	// CAST AI cluster id
	ClusterId pulumi.StringInput
	// List of scaling policy IDs in the order they should be applied.
	PolicyIds pulumi.StringArrayInput
}

func (WorkloadScalingPolicyOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadScalingPolicyOrderArgs)(nil)).Elem()
}

type WorkloadScalingPolicyOrderInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyOrderOutput() WorkloadScalingPolicyOrderOutput
	ToWorkloadScalingPolicyOrderOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderOutput
}

func (*WorkloadScalingPolicyOrder) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyOrder)(nil)).Elem()
}

func (i *WorkloadScalingPolicyOrder) ToWorkloadScalingPolicyOrderOutput() WorkloadScalingPolicyOrderOutput {
	return i.ToWorkloadScalingPolicyOrderOutputWithContext(context.Background())
}

func (i *WorkloadScalingPolicyOrder) ToWorkloadScalingPolicyOrderOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyOrderOutput)
}

// WorkloadScalingPolicyOrderArrayInput is an input type that accepts WorkloadScalingPolicyOrderArray and WorkloadScalingPolicyOrderArrayOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyOrderArrayInput` via:
//
//	WorkloadScalingPolicyOrderArray{ WorkloadScalingPolicyOrderArgs{...} }
type WorkloadScalingPolicyOrderArrayInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyOrderArrayOutput() WorkloadScalingPolicyOrderArrayOutput
	ToWorkloadScalingPolicyOrderArrayOutputWithContext(context.Context) WorkloadScalingPolicyOrderArrayOutput
}

type WorkloadScalingPolicyOrderArray []WorkloadScalingPolicyOrderInput

func (WorkloadScalingPolicyOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadScalingPolicyOrder)(nil)).Elem()
}

func (i WorkloadScalingPolicyOrderArray) ToWorkloadScalingPolicyOrderArrayOutput() WorkloadScalingPolicyOrderArrayOutput {
	return i.ToWorkloadScalingPolicyOrderArrayOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyOrderArray) ToWorkloadScalingPolicyOrderArrayOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyOrderArrayOutput)
}

// WorkloadScalingPolicyOrderMapInput is an input type that accepts WorkloadScalingPolicyOrderMap and WorkloadScalingPolicyOrderMapOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyOrderMapInput` via:
//
//	WorkloadScalingPolicyOrderMap{ "key": WorkloadScalingPolicyOrderArgs{...} }
type WorkloadScalingPolicyOrderMapInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyOrderMapOutput() WorkloadScalingPolicyOrderMapOutput
	ToWorkloadScalingPolicyOrderMapOutputWithContext(context.Context) WorkloadScalingPolicyOrderMapOutput
}

type WorkloadScalingPolicyOrderMap map[string]WorkloadScalingPolicyOrderInput

func (WorkloadScalingPolicyOrderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadScalingPolicyOrder)(nil)).Elem()
}

func (i WorkloadScalingPolicyOrderMap) ToWorkloadScalingPolicyOrderMapOutput() WorkloadScalingPolicyOrderMapOutput {
	return i.ToWorkloadScalingPolicyOrderMapOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyOrderMap) ToWorkloadScalingPolicyOrderMapOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyOrderMapOutput)
}

type WorkloadScalingPolicyOrderOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyOrder)(nil)).Elem()
}

func (o WorkloadScalingPolicyOrderOutput) ToWorkloadScalingPolicyOrderOutput() WorkloadScalingPolicyOrderOutput {
	return o
}

func (o WorkloadScalingPolicyOrderOutput) ToWorkloadScalingPolicyOrderOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderOutput {
	return o
}

// CAST AI cluster id
func (o WorkloadScalingPolicyOrderOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyOrder) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// List of scaling policy IDs in the order they should be applied.
func (o WorkloadScalingPolicyOrderOutput) PolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyOrder) pulumi.StringArrayOutput { return v.PolicyIds }).(pulumi.StringArrayOutput)
}

type WorkloadScalingPolicyOrderArrayOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadScalingPolicyOrder)(nil)).Elem()
}

func (o WorkloadScalingPolicyOrderArrayOutput) ToWorkloadScalingPolicyOrderArrayOutput() WorkloadScalingPolicyOrderArrayOutput {
	return o
}

func (o WorkloadScalingPolicyOrderArrayOutput) ToWorkloadScalingPolicyOrderArrayOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderArrayOutput {
	return o
}

func (o WorkloadScalingPolicyOrderArrayOutput) Index(i pulumi.IntInput) WorkloadScalingPolicyOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadScalingPolicyOrder {
		return vs[0].([]*WorkloadScalingPolicyOrder)[vs[1].(int)]
	}).(WorkloadScalingPolicyOrderOutput)
}

type WorkloadScalingPolicyOrderMapOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyOrderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadScalingPolicyOrder)(nil)).Elem()
}

func (o WorkloadScalingPolicyOrderMapOutput) ToWorkloadScalingPolicyOrderMapOutput() WorkloadScalingPolicyOrderMapOutput {
	return o
}

func (o WorkloadScalingPolicyOrderMapOutput) ToWorkloadScalingPolicyOrderMapOutputWithContext(ctx context.Context) WorkloadScalingPolicyOrderMapOutput {
	return o
}

func (o WorkloadScalingPolicyOrderMapOutput) MapIndex(k pulumi.StringInput) WorkloadScalingPolicyOrderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadScalingPolicyOrder {
		return vs[0].(map[string]*WorkloadScalingPolicyOrder)[vs[1].(string)]
	}).(WorkloadScalingPolicyOrderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyOrderInput)(nil)).Elem(), &WorkloadScalingPolicyOrder{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyOrderArrayInput)(nil)).Elem(), WorkloadScalingPolicyOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyOrderMapInput)(nil)).Elem(), WorkloadScalingPolicyOrderMap{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyOrderOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyOrderArrayOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyOrderMapOutput{})
}
