// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"errors"
	"github.com/castai/pulumi-castai/sdk/go/castai/internal"
	"github.com/castai/pulumi-castai/sdk/go/castai/organization"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SSOConnection struct {
	pulumi.CustomResourceState

	// Azure AD connector
	Aad organization.SSOConnectionAadPtrOutput `pulumi:"aad"`
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains pulumi.StringArrayOutput `pulumi:"additionalEmailDomains"`
	// Email domain of the connection
	EmailDomain pulumi.StringOutput `pulumi:"emailDomain"`
	// Connection name
	Name pulumi.StringOutput `pulumi:"name"`
	// Okta connector
	Okta organization.SSOConnectionOktaPtrOutput `pulumi:"okta"`
}

// NewSSOConnection registers a new resource with the given unique name, arguments, and options.
func NewSSOConnection(ctx *pulumi.Context,
	name string, args *SSOConnectionArgs, opts ...pulumi.ResourceOption) (*SSOConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmailDomain == nil {
		return nil, errors.New("invalid value for required argument 'EmailDomain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SSOConnection
	err := ctx.RegisterResource("castai:organization:SSOConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSSOConnection gets an existing SSOConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSSOConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SSOConnectionState, opts ...pulumi.ResourceOption) (*SSOConnection, error) {
	var resource SSOConnection
	err := ctx.ReadResource("castai:organization:SSOConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SSOConnection resources.
type ssoconnectionState struct {
	// Azure AD connector
	Aad *organization.SSOConnectionAad `pulumi:"aad"`
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains []string `pulumi:"additionalEmailDomains"`
	// Email domain of the connection
	EmailDomain *string `pulumi:"emailDomain"`
	// Connection name
	Name *string `pulumi:"name"`
	// Okta connector
	Okta *organization.SSOConnectionOkta `pulumi:"okta"`
}

type SSOConnectionState struct {
	// Azure AD connector
	Aad organization.SSOConnectionAadPtrInput
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains pulumi.StringArrayInput
	// Email domain of the connection
	EmailDomain pulumi.StringPtrInput
	// Connection name
	Name pulumi.StringPtrInput
	// Okta connector
	Okta organization.SSOConnectionOktaPtrInput
}

func (SSOConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ssoconnectionState)(nil)).Elem()
}

type ssoconnectionArgs struct {
	// Azure AD connector
	Aad *organization.SSOConnectionAad `pulumi:"aad"`
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains []string `pulumi:"additionalEmailDomains"`
	// Email domain of the connection
	EmailDomain string `pulumi:"emailDomain"`
	// Connection name
	Name *string `pulumi:"name"`
	// Okta connector
	Okta *organization.SSOConnectionOkta `pulumi:"okta"`
}

// The set of arguments for constructing a SSOConnection resource.
type SSOConnectionArgs struct {
	// Azure AD connector
	Aad organization.SSOConnectionAadPtrInput
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains pulumi.StringArrayInput
	// Email domain of the connection
	EmailDomain pulumi.StringInput
	// Connection name
	Name pulumi.StringPtrInput
	// Okta connector
	Okta organization.SSOConnectionOktaPtrInput
}

func (SSOConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ssoconnectionArgs)(nil)).Elem()
}

type SSOConnectionInput interface {
	pulumi.Input

	ToSSOConnectionOutput() SSOConnectionOutput
	ToSSOConnectionOutputWithContext(ctx context.Context) SSOConnectionOutput
}

func (*SSOConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**SSOConnection)(nil)).Elem()
}

func (i *SSOConnection) ToSSOConnectionOutput() SSOConnectionOutput {
	return i.ToSSOConnectionOutputWithContext(context.Background())
}

func (i *SSOConnection) ToSSOConnectionOutputWithContext(ctx context.Context) SSOConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionOutput)
}

// SSOConnectionArrayInput is an input type that accepts SSOConnectionArray and SSOConnectionArrayOutput values.
// You can construct a concrete instance of `SSOConnectionArrayInput` via:
//
//	SSOConnectionArray{ SSOConnectionArgs{...} }
type SSOConnectionArrayInput interface {
	pulumi.Input

	ToSSOConnectionArrayOutput() SSOConnectionArrayOutput
	ToSSOConnectionArrayOutputWithContext(context.Context) SSOConnectionArrayOutput
}

type SSOConnectionArray []SSOConnectionInput

func (SSOConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SSOConnection)(nil)).Elem()
}

func (i SSOConnectionArray) ToSSOConnectionArrayOutput() SSOConnectionArrayOutput {
	return i.ToSSOConnectionArrayOutputWithContext(context.Background())
}

func (i SSOConnectionArray) ToSSOConnectionArrayOutputWithContext(ctx context.Context) SSOConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionArrayOutput)
}

// SSOConnectionMapInput is an input type that accepts SSOConnectionMap and SSOConnectionMapOutput values.
// You can construct a concrete instance of `SSOConnectionMapInput` via:
//
//	SSOConnectionMap{ "key": SSOConnectionArgs{...} }
type SSOConnectionMapInput interface {
	pulumi.Input

	ToSSOConnectionMapOutput() SSOConnectionMapOutput
	ToSSOConnectionMapOutputWithContext(context.Context) SSOConnectionMapOutput
}

type SSOConnectionMap map[string]SSOConnectionInput

func (SSOConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SSOConnection)(nil)).Elem()
}

func (i SSOConnectionMap) ToSSOConnectionMapOutput() SSOConnectionMapOutput {
	return i.ToSSOConnectionMapOutputWithContext(context.Background())
}

func (i SSOConnectionMap) ToSSOConnectionMapOutputWithContext(ctx context.Context) SSOConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSOConnectionMapOutput)
}

type SSOConnectionOutput struct{ *pulumi.OutputState }

func (SSOConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSOConnection)(nil)).Elem()
}

func (o SSOConnectionOutput) ToSSOConnectionOutput() SSOConnectionOutput {
	return o
}

func (o SSOConnectionOutput) ToSSOConnectionOutputWithContext(ctx context.Context) SSOConnectionOutput {
	return o
}

// Azure AD connector
func (o SSOConnectionOutput) Aad() organization.SSOConnectionAadPtrOutput {
	return o.ApplyT(func(v *SSOConnection) organization.SSOConnectionAadPtrOutput { return v.Aad }).(organization.SSOConnectionAadPtrOutput)
}

// Additional email domains that will be allowed to sign in via the connection
func (o SSOConnectionOutput) AdditionalEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SSOConnection) pulumi.StringArrayOutput { return v.AdditionalEmailDomains }).(pulumi.StringArrayOutput)
}

// Email domain of the connection
func (o SSOConnectionOutput) EmailDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *SSOConnection) pulumi.StringOutput { return v.EmailDomain }).(pulumi.StringOutput)
}

// Connection name
func (o SSOConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SSOConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Okta connector
func (o SSOConnectionOutput) Okta() organization.SSOConnectionOktaPtrOutput {
	return o.ApplyT(func(v *SSOConnection) organization.SSOConnectionOktaPtrOutput { return v.Okta }).(organization.SSOConnectionOktaPtrOutput)
}

type SSOConnectionArrayOutput struct{ *pulumi.OutputState }

func (SSOConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SSOConnection)(nil)).Elem()
}

func (o SSOConnectionArrayOutput) ToSSOConnectionArrayOutput() SSOConnectionArrayOutput {
	return o
}

func (o SSOConnectionArrayOutput) ToSSOConnectionArrayOutputWithContext(ctx context.Context) SSOConnectionArrayOutput {
	return o
}

func (o SSOConnectionArrayOutput) Index(i pulumi.IntInput) SSOConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SSOConnection {
		return vs[0].([]*SSOConnection)[vs[1].(int)]
	}).(SSOConnectionOutput)
}

type SSOConnectionMapOutput struct{ *pulumi.OutputState }

func (SSOConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SSOConnection)(nil)).Elem()
}

func (o SSOConnectionMapOutput) ToSSOConnectionMapOutput() SSOConnectionMapOutput {
	return o
}

func (o SSOConnectionMapOutput) ToSSOConnectionMapOutputWithContext(ctx context.Context) SSOConnectionMapOutput {
	return o
}

func (o SSOConnectionMapOutput) MapIndex(k pulumi.StringInput) SSOConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SSOConnection {
		return vs[0].(map[string]*SSOConnection)[vs[1].(string)]
	}).(SSOConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionInput)(nil)).Elem(), &SSOConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionArrayInput)(nil)).Elem(), SSOConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SSOConnectionMapInput)(nil)).Elem(), SSOConnectionMap{})
	pulumi.RegisterOutputType(SSOConnectionOutput{})
	pulumi.RegisterOutputType(SSOConnectionArrayOutput{})
	pulumi.RegisterOutputType(SSOConnectionMapOutput{})
}
