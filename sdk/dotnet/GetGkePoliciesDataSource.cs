// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    public static class GetGkePoliciesDataSource
    {
        public static Task<GetGkePoliciesDataSourceResult> InvokeAsync(GetGkePoliciesDataSourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGkePoliciesDataSourceResult>("castai:gcp:GetGkePoliciesDataSource", args ?? new GetGkePoliciesDataSourceArgs(), options.WithDefaults());

        public static Output<GetGkePoliciesDataSourceResult> Invoke(GetGkePoliciesDataSourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGkePoliciesDataSourceResult>("castai:gcp:GetGkePoliciesDataSource", args ?? new GetGkePoliciesDataSourceInvokeArgs(), options.WithDefaults());

        public static Output<GetGkePoliciesDataSourceResult> Invoke(GetGkePoliciesDataSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGkePoliciesDataSourceResult>("castai:gcp:GetGkePoliciesDataSource", args ?? new GetGkePoliciesDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGkePoliciesDataSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("features")]
        private Dictionary<string, bool>? _features;
        public Dictionary<string, bool> Features
        {
            get => _features ?? (_features = new Dictionary<string, bool>());
            set => _features = value;
        }

        public GetGkePoliciesDataSourceArgs()
        {
        }
        public static new GetGkePoliciesDataSourceArgs Empty => new GetGkePoliciesDataSourceArgs();
    }

    public sealed class GetGkePoliciesDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("features")]
        private InputMap<bool>? _features;
        public InputMap<bool> Features
        {
            get => _features ?? (_features = new InputMap<bool>());
            set => _features = value;
        }

        public GetGkePoliciesDataSourceInvokeArgs()
        {
        }
        public static new GetGkePoliciesDataSourceInvokeArgs Empty => new GetGkePoliciesDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetGkePoliciesDataSourceResult
    {
        public readonly ImmutableDictionary<string, bool>? Features;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Policies;

        [OutputConstructor]
        private GetGkePoliciesDataSourceResult(
            ImmutableDictionary<string, bool>? features,

            string id,

            ImmutableArray<string> policies)
        {
            Features = features;
            Id = id;
            Policies = policies;
        }
    }
}
