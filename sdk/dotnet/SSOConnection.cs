// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:organization:SSOConnection")]
    public partial class SSOConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Azure AD connector
        /// </summary>
        [Output("aad")]
        public Output<Pulumi.CastAI.Organization.Outputs.SSOConnectionAad?> Aad { get; private set; } = null!;

        /// <summary>
        /// Additional email domains that will be allowed to sign in via the connection
        /// </summary>
        [Output("additionalEmailDomains")]
        public Output<ImmutableArray<string>> AdditionalEmailDomains { get; private set; } = null!;

        /// <summary>
        /// Email domain of the connection
        /// </summary>
        [Output("emailDomain")]
        public Output<string> EmailDomain { get; private set; } = null!;

        /// <summary>
        /// Connection name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Okta connector
        /// </summary>
        [Output("okta")]
        public Output<Pulumi.CastAI.Organization.Outputs.SSOConnectionOkta?> Okta { get; private set; } = null!;


        /// <summary>
        /// Create a SSOConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SSOConnection(string name, SSOConnectionArgs args, CustomResourceOptions? options = null)
            : base("castai:organization:SSOConnection", name, args ?? new SSOConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SSOConnection(string name, Input<string> id, SSOConnectionState? state = null, CustomResourceOptions? options = null)
            : base("castai:organization:SSOConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SSOConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SSOConnection Get(string name, Input<string> id, SSOConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new SSOConnection(name, id, state, options);
        }
    }

    public sealed class SSOConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure AD connector
        /// </summary>
        [Input("aad")]
        public Input<Pulumi.CastAI.Organization.Inputs.SSOConnectionAadArgs>? Aad { get; set; }

        [Input("additionalEmailDomains")]
        private InputList<string>? _additionalEmailDomains;

        /// <summary>
        /// Additional email domains that will be allowed to sign in via the connection
        /// </summary>
        public InputList<string> AdditionalEmailDomains
        {
            get => _additionalEmailDomains ?? (_additionalEmailDomains = new InputList<string>());
            set => _additionalEmailDomains = value;
        }

        /// <summary>
        /// Email domain of the connection
        /// </summary>
        [Input("emailDomain", required: true)]
        public Input<string> EmailDomain { get; set; } = null!;

        /// <summary>
        /// Connection name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Okta connector
        /// </summary>
        [Input("okta")]
        public Input<Pulumi.CastAI.Organization.Inputs.SSOConnectionOktaArgs>? Okta { get; set; }

        public SSOConnectionArgs()
        {
        }
        public static new SSOConnectionArgs Empty => new SSOConnectionArgs();
    }

    public sealed class SSOConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure AD connector
        /// </summary>
        [Input("aad")]
        public Input<Pulumi.CastAI.Organization.Inputs.SSOConnectionAadGetArgs>? Aad { get; set; }

        [Input("additionalEmailDomains")]
        private InputList<string>? _additionalEmailDomains;

        /// <summary>
        /// Additional email domains that will be allowed to sign in via the connection
        /// </summary>
        public InputList<string> AdditionalEmailDomains
        {
            get => _additionalEmailDomains ?? (_additionalEmailDomains = new InputList<string>());
            set => _additionalEmailDomains = value;
        }

        /// <summary>
        /// Email domain of the connection
        /// </summary>
        [Input("emailDomain")]
        public Input<string>? EmailDomain { get; set; }

        /// <summary>
        /// Connection name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Okta connector
        /// </summary>
        [Input("okta")]
        public Input<Pulumi.CastAI.Organization.Inputs.SSOConnectionOktaGetArgs>? Okta { get; set; }

        public SSOConnectionState()
        {
        }
        public static new SSOConnectionState Empty => new SSOConnectionState();
    }
}
