// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:index:SecurityRuntimeRule")]
    public partial class SecurityRuntimeRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Number of anomalies detected using this rule.
        /// </summary>
        [Output("anomaliesCount")]
        public Output<int> AnomaliesCount { get; private set; } = null!;

        /// <summary>
        /// Category of the rule.
        /// </summary>
        [Output("category")]
        public Output<string?> Category { get; private set; } = null!;

        /// <summary>
        /// Whether the rule is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the rule is a built-in rule.
        /// </summary>
        [Output("isBuiltIn")]
        public Output<bool> IsBuiltIn { get; private set; } = null!;

        /// <summary>
        /// Key-value labels attached to the rule.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optional CEL expression for resource selection.
        /// </summary>
        [Output("resourceSelector")]
        public Output<string?> ResourceSelector { get; private set; } = null!;

        /// <summary>
        /// The engine type used to evaluate the rule. Only RULE_ENGINE_TYPE_CEL is currently supported.
        /// </summary>
        [Output("ruleEngineType")]
        public Output<string?> RuleEngineType { get; private set; } = null!;

        /// <summary>
        /// CEL rule expression text.
        /// </summary>
        [Output("ruleText")]
        public Output<string> RuleText { get; private set; } = null!;

        /// <summary>
        /// Severity of the rule. One of SEVERITY_CRITICAL, SEVERITY_HIGH, SEVERITY_MEDIUM, SEVERITY_LOW, SEVERITY_NONE.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// Type of the rule (internal value).
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Custom lists used in this rule, if any.
        /// </summary>
        [Output("usedCustomLists")]
        public Output<ImmutableArray<string>> UsedCustomLists { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityRuntimeRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityRuntimeRule(string name, SecurityRuntimeRuleArgs args, CustomResourceOptions? options = null)
            : base("castai:index:SecurityRuntimeRule", name, args ?? new SecurityRuntimeRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityRuntimeRule(string name, Input<string> id, SecurityRuntimeRuleState? state = null, CustomResourceOptions? options = null)
            : base("castai:index:SecurityRuntimeRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityRuntimeRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityRuntimeRule Get(string name, Input<string> id, SecurityRuntimeRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityRuntimeRule(name, id, state, options);
        }
    }

    public sealed class SecurityRuntimeRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Category of the rule.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Whether the rule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Key-value labels attached to the rule.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Optional CEL expression for resource selection.
        /// </summary>
        [Input("resourceSelector")]
        public Input<string>? ResourceSelector { get; set; }

        /// <summary>
        /// The engine type used to evaluate the rule. Only RULE_ENGINE_TYPE_CEL is currently supported.
        /// </summary>
        [Input("ruleEngineType")]
        public Input<string>? RuleEngineType { get; set; }

        /// <summary>
        /// CEL rule expression text.
        /// </summary>
        [Input("ruleText", required: true)]
        public Input<string> RuleText { get; set; } = null!;

        /// <summary>
        /// Severity of the rule. One of SEVERITY_CRITICAL, SEVERITY_HIGH, SEVERITY_MEDIUM, SEVERITY_LOW, SEVERITY_NONE.
        /// </summary>
        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        public SecurityRuntimeRuleArgs()
        {
        }
        public static new SecurityRuntimeRuleArgs Empty => new SecurityRuntimeRuleArgs();
    }

    public sealed class SecurityRuntimeRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of anomalies detected using this rule.
        /// </summary>
        [Input("anomaliesCount")]
        public Input<int>? AnomaliesCount { get; set; }

        /// <summary>
        /// Category of the rule.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Whether the rule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Indicates whether the rule is a built-in rule.
        /// </summary>
        [Input("isBuiltIn")]
        public Input<bool>? IsBuiltIn { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Key-value labels attached to the rule.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Optional CEL expression for resource selection.
        /// </summary>
        [Input("resourceSelector")]
        public Input<string>? ResourceSelector { get; set; }

        /// <summary>
        /// The engine type used to evaluate the rule. Only RULE_ENGINE_TYPE_CEL is currently supported.
        /// </summary>
        [Input("ruleEngineType")]
        public Input<string>? RuleEngineType { get; set; }

        /// <summary>
        /// CEL rule expression text.
        /// </summary>
        [Input("ruleText")]
        public Input<string>? RuleText { get; set; }

        /// <summary>
        /// Severity of the rule. One of SEVERITY_CRITICAL, SEVERITY_HIGH, SEVERITY_MEDIUM, SEVERITY_LOW, SEVERITY_NONE.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// Type of the rule (internal value).
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("usedCustomLists")]
        private InputList<string>? _usedCustomLists;

        /// <summary>
        /// Custom lists used in this rule, if any.
        /// </summary>
        public InputList<string> UsedCustomLists
        {
            get => _usedCustomLists ?? (_usedCustomLists = new InputList<string>());
            set => _usedCustomLists = value;
        }

        public SecurityRuntimeRuleState()
        {
        }
        public static new SecurityRuntimeRuleState Empty => new SecurityRuntimeRuleState();
    }
}
