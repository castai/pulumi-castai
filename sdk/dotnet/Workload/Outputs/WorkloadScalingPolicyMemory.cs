// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Workload.Outputs
{

    [OutputType]
    public sealed class WorkloadScalingPolicyMemory
    {
        /// <summary>
        /// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
        /// </summary>
        public readonly double? ApplyThreshold;
        /// <summary>
        /// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
        /// </summary>
        public readonly Outputs.WorkloadScalingPolicyMemoryApplyThresholdStrategy? ApplyThresholdStrategy;
        /// <summary>
        /// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
        /// </summary>
        public readonly string? Args;
        /// <summary>
        /// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
        /// </summary>
        public readonly string? Function;
        /// <summary>
        /// Resource limit settings
        /// </summary>
        public readonly Outputs.WorkloadScalingPolicyMemoryLimit? Limit;
        /// <summary>
        /// The look back period in seconds for the recommendation.
        /// </summary>
        public readonly int? LookBackPeriodSeconds;
        /// <summary>
        /// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
        /// </summary>
        public readonly string? ManagementOption;
        /// <summary>
        /// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
        /// </summary>
        public readonly double? Max;
        /// <summary>
        /// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
        /// </summary>
        public readonly double? Min;
        /// <summary>
        /// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
        /// </summary>
        public readonly double? Overhead;

        [OutputConstructor]
        private WorkloadScalingPolicyMemory(
            double? applyThreshold,

            Outputs.WorkloadScalingPolicyMemoryApplyThresholdStrategy? applyThresholdStrategy,

            string? args,

            string? function,

            Outputs.WorkloadScalingPolicyMemoryLimit? limit,

            int? lookBackPeriodSeconds,

            string? managementOption,

            double? max,

            double? min,

            double? overhead)
        {
            ApplyThreshold = applyThreshold;
            ApplyThresholdStrategy = applyThresholdStrategy;
            Args = args;
            Function = function;
            Limit = limit;
            LookBackPeriodSeconds = lookBackPeriodSeconds;
            ManagementOption = managementOption;
            Max = max;
            Min = min;
            Overhead = overhead;
        }
    }
}
