// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Workload.Inputs
{

    public sealed class WorkloadScalingPolicyMemoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
        /// </summary>
        [Input("applyThreshold")]
        public Input<double>? ApplyThreshold { get; set; }

        /// <summary>
        /// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
        /// </summary>
        [Input("applyThresholdStrategy")]
        public Input<Inputs.WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs>? ApplyThresholdStrategy { get; set; }

        /// <summary>
        /// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
        /// </summary>
        [Input("args")]
        public Input<string>? Args { get; set; }

        /// <summary>
        /// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
        /// </summary>
        [Input("function")]
        public Input<string>? Function { get; set; }

        /// <summary>
        /// Resource limit settings
        /// </summary>
        [Input("limit")]
        public Input<Inputs.WorkloadScalingPolicyMemoryLimitArgs>? Limit { get; set; }

        /// <summary>
        /// The look back period in seconds for the recommendation.
        /// </summary>
        [Input("lookBackPeriodSeconds")]
        public Input<int>? LookBackPeriodSeconds { get; set; }

        /// <summary>
        /// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
        /// </summary>
        [Input("managementOption")]
        public Input<string>? ManagementOption { get; set; }

        /// <summary>
        /// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
        /// </summary>
        [Input("max")]
        public Input<double>? Max { get; set; }

        /// <summary>
        /// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
        /// </summary>
        [Input("min")]
        public Input<double>? Min { get; set; }

        /// <summary>
        /// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
        /// </summary>
        [Input("overhead")]
        public Input<double>? Overhead { get; set; }

        public WorkloadScalingPolicyMemoryArgs()
        {
        }
        public static new WorkloadScalingPolicyMemoryArgs Empty => new WorkloadScalingPolicyMemoryArgs();
    }
}
