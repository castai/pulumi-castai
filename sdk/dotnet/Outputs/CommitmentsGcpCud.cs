// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Outputs
{

    [OutputType]
    public sealed class CommitmentsGcpCud
    {
        /// <summary>
        /// Allowed usage of the commitment. The value is between 0 (0%) and 1 (100%).
        /// </summary>
        public readonly double? AllowedUsage;
        /// <summary>
        /// List of assigned clusters for the commitment. If prioritization is enabled, the order of the assignments indicates the priority. The first assignment has the highest priority.
        /// </summary>
        public readonly ImmutableArray<Outputs.CommitmentsGcpCudAssignment> Assignments;
        /// <summary>
        /// Number of CPUs covered by the CUD.
        /// </summary>
        public readonly int Cpu;
        /// <summary>
        /// ID of the CUD in GCP.
        /// </summary>
        public readonly string CudId;
        /// <summary>
        /// Status of the CUD in GCP.
        /// </summary>
        public readonly string CudStatus;
        /// <summary>
        /// End timestamp of the CUD.
        /// </summary>
        public readonly string EndTimestamp;
        /// <summary>
        /// ID of the commitment in CAST AI.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Amount of memory in MB covered by the CUD.
        /// </summary>
        public readonly int MemoryMb;
        /// <summary>
        /// Name of the CUD.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// CUD plan e.g. 'TWELVE_MONTH'.
        /// </summary>
        public readonly string Plan;
        /// <summary>
        /// If enabled, it's possible to assign priorities to the assigned clusters.
        /// </summary>
        public readonly bool? Prioritization;
        /// <summary>
        /// Region in which the CUD is available.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Scaling strategy of the commitment in CAST AI. One of: Default, CPUBased, RamBased
        /// </summary>
        public readonly string? ScalingStrategy;
        /// <summary>
        /// Start timestamp of the CUD.
        /// </summary>
        public readonly string StartTimestamp;
        /// <summary>
        /// Status of the commitment in CAST AI.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Type of the CUD, e.g. determines the covered resource type e.g. 'COMPUTE_OPTIMIZED_C2D'.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private CommitmentsGcpCud(
            double? allowedUsage,

            ImmutableArray<Outputs.CommitmentsGcpCudAssignment> assignments,

            int cpu,

            string cudId,

            string cudStatus,

            string endTimestamp,

            string? id,

            int memoryMb,

            string name,

            string plan,

            bool? prioritization,

            string region,

            string? scalingStrategy,

            string startTimestamp,

            string? status,

            string type)
        {
            AllowedUsage = allowedUsage;
            Assignments = assignments;
            Cpu = cpu;
            CudId = cudId;
            CudStatus = cudStatus;
            EndTimestamp = endTimestamp;
            Id = id;
            MemoryMb = memoryMb;
            Name = name;
            Plan = plan;
            Prioritization = prioritization;
            Region = region;
            ScalingStrategy = scalingStrategy;
            StartTimestamp = startTimestamp;
            Status = status;
            Type = type;
        }
    }
}
