// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:workload:WorkloadScalingPolicy")]
    public partial class WorkloadScalingPolicy : global::Pulumi.CustomResource
    {
        [Output("antiAffinity")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyAntiAffinity?> AntiAffinity { get; private set; } = null!;

        /// <summary>
        /// Recommendation apply type.
        /// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
        /// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
        /// </summary>
        [Output("applyType")]
        public Output<string> ApplyType { get; private set; } = null!;

        /// <summary>
        /// Allows defining conditions for automatically assigning workloads to this scaling policy.
        /// </summary>
        [Output("assignmentRules")]
        public Output<ImmutableArray<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyAssignmentRule>> AssignmentRules { get; private set; } = null!;

        /// <summary>
        /// CAST AI cluster id
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Defines the confidence settings for applying recommendations.
        /// </summary>
        [Output("confidence")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyConfidence?> Confidence { get; private set; } = null!;

        [Output("cpu")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyCpu> Cpu { get; private set; } = null!;

        [Output("downscaling")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyDownscaling?> Downscaling { get; private set; } = null!;

        /// <summary>
        /// Defines possible options for workload management.
        /// 	- READ_ONLY - workload watched (metrics collected), but no actions performed by CAST AI.
        /// 	- MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
        /// </summary>
        [Output("managementOption")]
        public Output<string> ManagementOption { get; private set; } = null!;

        [Output("memory")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyMemory> Memory { get; private set; } = null!;

        [Output("memoryEvent")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyMemoryEvent?> MemoryEvent { get; private set; } = null!;

        /// <summary>
        /// Scaling policy name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("predictiveScaling")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyPredictiveScaling?> PredictiveScaling { get; private set; } = null!;

        /// <summary>
        /// Defines the rollout behavior used when applying recommendations. Prerequisites:
        /// 	- Applicable to Deployment resources that support running as multi-replica.
        /// 	- Deployment is running with single replica (replica count = 1).
        /// 	- Deployment's rollout strategy allows for downtime.
        /// 	- Recommendation apply type is "immediate".
        /// 	- Cluster has workload-autoscaler component version v0.35.3 or higher.
        /// </summary>
        [Output("rolloutBehavior")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyRolloutBehavior?> RolloutBehavior { get; private set; } = null!;

        [Output("startup")]
        public Output<Pulumi.CastAI.Workload.Outputs.WorkloadScalingPolicyStartup?> Startup { get; private set; } = null!;


        /// <summary>
        /// Create a WorkloadScalingPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkloadScalingPolicy(string name, WorkloadScalingPolicyArgs args, CustomResourceOptions? options = null)
            : base("castai:workload:WorkloadScalingPolicy", name, args ?? new WorkloadScalingPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkloadScalingPolicy(string name, Input<string> id, WorkloadScalingPolicyState? state = null, CustomResourceOptions? options = null)
            : base("castai:workload:WorkloadScalingPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkloadScalingPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkloadScalingPolicy Get(string name, Input<string> id, WorkloadScalingPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkloadScalingPolicy(name, id, state, options);
        }
    }

    public sealed class WorkloadScalingPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("antiAffinity")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAntiAffinityArgs>? AntiAffinity { get; set; }

        /// <summary>
        /// Recommendation apply type.
        /// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
        /// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
        /// </summary>
        [Input("applyType", required: true)]
        public Input<string> ApplyType { get; set; } = null!;

        [Input("assignmentRules")]
        private InputList<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAssignmentRuleArgs>? _assignmentRules;

        /// <summary>
        /// Allows defining conditions for automatically assigning workloads to this scaling policy.
        /// </summary>
        public InputList<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAssignmentRuleArgs> AssignmentRules
        {
            get => _assignmentRules ?? (_assignmentRules = new InputList<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAssignmentRuleArgs>());
            set => _assignmentRules = value;
        }

        /// <summary>
        /// CAST AI cluster id
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Defines the confidence settings for applying recommendations.
        /// </summary>
        [Input("confidence")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyConfidenceArgs>? Confidence { get; set; }

        [Input("cpu", required: true)]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyCpuArgs> Cpu { get; set; } = null!;

        [Input("downscaling")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyDownscalingArgs>? Downscaling { get; set; }

        /// <summary>
        /// Defines possible options for workload management.
        /// 	- READ_ONLY - workload watched (metrics collected), but no actions performed by CAST AI.
        /// 	- MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
        /// </summary>
        [Input("managementOption", required: true)]
        public Input<string> ManagementOption { get; set; } = null!;

        [Input("memory", required: true)]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyMemoryArgs> Memory { get; set; } = null!;

        [Input("memoryEvent")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyMemoryEventArgs>? MemoryEvent { get; set; }

        /// <summary>
        /// Scaling policy name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("predictiveScaling")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyPredictiveScalingArgs>? PredictiveScaling { get; set; }

        /// <summary>
        /// Defines the rollout behavior used when applying recommendations. Prerequisites:
        /// 	- Applicable to Deployment resources that support running as multi-replica.
        /// 	- Deployment is running with single replica (replica count = 1).
        /// 	- Deployment's rollout strategy allows for downtime.
        /// 	- Recommendation apply type is "immediate".
        /// 	- Cluster has workload-autoscaler component version v0.35.3 or higher.
        /// </summary>
        [Input("rolloutBehavior")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyRolloutBehaviorArgs>? RolloutBehavior { get; set; }

        [Input("startup")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyStartupArgs>? Startup { get; set; }

        public WorkloadScalingPolicyArgs()
        {
        }
        public static new WorkloadScalingPolicyArgs Empty => new WorkloadScalingPolicyArgs();
    }

    public sealed class WorkloadScalingPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("antiAffinity")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAntiAffinityGetArgs>? AntiAffinity { get; set; }

        /// <summary>
        /// Recommendation apply type.
        /// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
        /// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
        /// </summary>
        [Input("applyType")]
        public Input<string>? ApplyType { get; set; }

        [Input("assignmentRules")]
        private InputList<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAssignmentRuleGetArgs>? _assignmentRules;

        /// <summary>
        /// Allows defining conditions for automatically assigning workloads to this scaling policy.
        /// </summary>
        public InputList<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAssignmentRuleGetArgs> AssignmentRules
        {
            get => _assignmentRules ?? (_assignmentRules = new InputList<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyAssignmentRuleGetArgs>());
            set => _assignmentRules = value;
        }

        /// <summary>
        /// CAST AI cluster id
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Defines the confidence settings for applying recommendations.
        /// </summary>
        [Input("confidence")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyConfidenceGetArgs>? Confidence { get; set; }

        [Input("cpu")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyCpuGetArgs>? Cpu { get; set; }

        [Input("downscaling")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyDownscalingGetArgs>? Downscaling { get; set; }

        /// <summary>
        /// Defines possible options for workload management.
        /// 	- READ_ONLY - workload watched (metrics collected), but no actions performed by CAST AI.
        /// 	- MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
        /// </summary>
        [Input("managementOption")]
        public Input<string>? ManagementOption { get; set; }

        [Input("memory")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyMemoryGetArgs>? Memory { get; set; }

        [Input("memoryEvent")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyMemoryEventGetArgs>? MemoryEvent { get; set; }

        /// <summary>
        /// Scaling policy name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("predictiveScaling")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyPredictiveScalingGetArgs>? PredictiveScaling { get; set; }

        /// <summary>
        /// Defines the rollout behavior used when applying recommendations. Prerequisites:
        /// 	- Applicable to Deployment resources that support running as multi-replica.
        /// 	- Deployment is running with single replica (replica count = 1).
        /// 	- Deployment's rollout strategy allows for downtime.
        /// 	- Recommendation apply type is "immediate".
        /// 	- Cluster has workload-autoscaler component version v0.35.3 or higher.
        /// </summary>
        [Input("rolloutBehavior")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyRolloutBehaviorGetArgs>? RolloutBehavior { get; set; }

        [Input("startup")]
        public Input<Pulumi.CastAI.Workload.Inputs.WorkloadScalingPolicyStartupGetArgs>? Startup { get; set; }

        public WorkloadScalingPolicyState()
        {
        }
        public static new WorkloadScalingPolicyState Empty => new WorkloadScalingPolicyState();
    }
}
