// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:organization:EnterpriseGroup")]
    public partial class EnterpriseGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enterprise organization ID.
        /// </summary>
        [Output("enterpriseId")]
        public Output<string> EnterpriseId { get; private set; } = null!;

        /// <summary>
        /// List of group members.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Pulumi.CastAI.Organization.Outputs.EnterpriseGroupMember>> Members { get; private set; } = null!;

        /// <summary>
        /// Name of the group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Target organization ID for the group.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// List of role bindings for the group.
        /// </summary>
        [Output("roleBindings")]
        public Output<ImmutableArray<Pulumi.CastAI.Organization.Outputs.EnterpriseGroupRoleBinding>> RoleBindings { get; private set; } = null!;


        /// <summary>
        /// Create a EnterpriseGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnterpriseGroup(string name, EnterpriseGroupArgs args, CustomResourceOptions? options = null)
            : base("castai:organization:EnterpriseGroup", name, args ?? new EnterpriseGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnterpriseGroup(string name, Input<string> id, EnterpriseGroupState? state = null, CustomResourceOptions? options = null)
            : base("castai:organization:EnterpriseGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnterpriseGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnterpriseGroup Get(string name, Input<string> id, EnterpriseGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new EnterpriseGroup(name, id, state, options);
        }
    }

    public sealed class EnterpriseGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enterprise organization ID.
        /// </summary>
        [Input("enterpriseId", required: true)]
        public Input<string> EnterpriseId { get; set; } = null!;

        [Input("members")]
        private InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupMemberArgs>? _members;

        /// <summary>
        /// List of group members.
        /// </summary>
        public InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupMemberArgs>());
            set => _members = value;
        }

        /// <summary>
        /// Name of the group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Target organization ID for the group.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("roleBindings")]
        private InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupRoleBindingArgs>? _roleBindings;

        /// <summary>
        /// List of role bindings for the group.
        /// </summary>
        public InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupRoleBindingArgs> RoleBindings
        {
            get => _roleBindings ?? (_roleBindings = new InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupRoleBindingArgs>());
            set => _roleBindings = value;
        }

        public EnterpriseGroupArgs()
        {
        }
        public static new EnterpriseGroupArgs Empty => new EnterpriseGroupArgs();
    }

    public sealed class EnterpriseGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enterprise organization ID.
        /// </summary>
        [Input("enterpriseId")]
        public Input<string>? EnterpriseId { get; set; }

        [Input("members")]
        private InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupMemberGetArgs>? _members;

        /// <summary>
        /// List of group members.
        /// </summary>
        public InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupMemberGetArgs> Members
        {
            get => _members ?? (_members = new InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupMemberGetArgs>());
            set => _members = value;
        }

        /// <summary>
        /// Name of the group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Target organization ID for the group.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("roleBindings")]
        private InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupRoleBindingGetArgs>? _roleBindings;

        /// <summary>
        /// List of role bindings for the group.
        /// </summary>
        public InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupRoleBindingGetArgs> RoleBindings
        {
            get => _roleBindings ?? (_roleBindings = new InputList<Pulumi.CastAI.Organization.Inputs.EnterpriseGroupRoleBindingGetArgs>());
            set => _roleBindings = value;
        }

        public EnterpriseGroupState()
        {
        }
        public static new EnterpriseGroupState Empty => new EnterpriseGroupState();
    }
}
