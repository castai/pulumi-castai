// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:index:Reservations")]
    public partial class Reservations : global::Pulumi.CustomResource
    {
        /// <summary>
        /// organization
        /// </summary>
        [Output("organizationId")]
        public Output<string?> OrganizationId { get; private set; } = null!;

        [Output("reservations")]
        public Output<ImmutableArray<Outputs.ReservationsReservation>> Items { get; private set; } = null!;

        /// <summary>
        /// csv file containing reservations
        /// </summary>
        [Output("reservationsCsv")]
        public Output<string> ReservationsCsv { get; private set; } = null!;


        /// <summary>
        /// Create a Reservations resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Reservations(string name, ReservationsArgs args, CustomResourceOptions? options = null)
            : base("castai:index:Reservations", name, args ?? new ReservationsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Reservations(string name, Input<string> id, ReservationsState? state = null, CustomResourceOptions? options = null)
            : base("castai:index:Reservations", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Reservations resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Reservations Get(string name, Input<string> id, ReservationsState? state = null, CustomResourceOptions? options = null)
        {
            return new Reservations(name, id, state, options);
        }
    }

    public sealed class ReservationsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// organization
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// csv file containing reservations
        /// </summary>
        [Input("reservationsCsv", required: true)]
        public Input<string> ReservationsCsv { get; set; } = null!;

        public ReservationsArgs()
        {
        }
        public static new ReservationsArgs Empty => new ReservationsArgs();
    }

    public sealed class ReservationsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// organization
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("reservations")]
        private InputList<Inputs.ReservationsReservationGetArgs>? _items;
        public InputList<Inputs.ReservationsReservationGetArgs> Items
        {
            get => _items ?? (_items = new InputList<Inputs.ReservationsReservationGetArgs>());
            set => _items = value;
        }

        /// <summary>
        /// csv file containing reservations
        /// </summary>
        [Input("reservationsCsv")]
        public Input<string>? ReservationsCsv { get; set; }

        public ReservationsState()
        {
        }
        public static new ReservationsState Empty => new ReservationsState();
    }
}
