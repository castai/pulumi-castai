// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Autoscaling.Outputs
{

    [OutputType]
    public sealed class AutoscalerAutoscalerSettingsSpotInstances
    {
        /// <summary>
        /// enable/disable spot instances policy.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
        /// </summary>
        public readonly int? MaxReclaimRate;
        /// <summary>
        /// policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not available.
        /// </summary>
        public readonly Outputs.AutoscalerAutoscalerSettingsSpotInstancesSpotBackups? SpotBackups;
        /// <summary>
        /// enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
        /// </summary>
        public readonly bool? SpotDiversityEnabled;
        /// <summary>
        /// allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
        /// </summary>
        public readonly int? SpotDiversityPriceIncreaseLimit;
        /// <summary>
        /// configure the handling of SPOT interruption predictions.
        /// </summary>
        public readonly Outputs.AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions? SpotInterruptionPredictions;

        [OutputConstructor]
        private AutoscalerAutoscalerSettingsSpotInstances(
            bool? enabled,

            int? maxReclaimRate,

            Outputs.AutoscalerAutoscalerSettingsSpotInstancesSpotBackups? spotBackups,

            bool? spotDiversityEnabled,

            int? spotDiversityPriceIncreaseLimit,

            Outputs.AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions? spotInterruptionPredictions)
        {
            Enabled = enabled;
            MaxReclaimRate = maxReclaimRate;
            SpotBackups = spotBackups;
            SpotDiversityEnabled = spotDiversityEnabled;
            SpotDiversityPriceIncreaseLimit = spotDiversityPriceIncreaseLimit;
            SpotInterruptionPredictions = spotInterruptionPredictions;
        }
    }
}
