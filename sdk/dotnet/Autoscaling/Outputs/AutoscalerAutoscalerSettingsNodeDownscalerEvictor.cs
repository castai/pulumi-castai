// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Autoscaling.Outputs
{

    [OutputType]
    public sealed class AutoscalerAutoscalerSettingsNodeDownscalerEvictor
    {
        /// <summary>
        /// enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
        /// </summary>
        public readonly bool? AggressiveMode;
        /// <summary>
        /// configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
        /// </summary>
        public readonly string? CycleInterval;
        /// <summary>
        /// enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
        /// </summary>
        public readonly bool? DryRun;
        /// <summary>
        /// enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
        /// </summary>
        public readonly bool? IgnorePodDisruptionBudgets;
        /// <summary>
        /// configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
        /// </summary>
        public readonly int? NodeGracePeriodMinutes;
        /// <summary>
        /// configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
        /// </summary>
        public readonly string? PodEvictionFailureBackOffInterval;
        /// <summary>
        /// enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
        /// </summary>
        public readonly bool? ScopedMode;

        [OutputConstructor]
        private AutoscalerAutoscalerSettingsNodeDownscalerEvictor(
            bool? aggressiveMode,

            string? cycleInterval,

            bool? dryRun,

            bool? enabled,

            bool? ignorePodDisruptionBudgets,

            int? nodeGracePeriodMinutes,

            string? podEvictionFailureBackOffInterval,

            bool? scopedMode)
        {
            AggressiveMode = aggressiveMode;
            CycleInterval = cycleInterval;
            DryRun = dryRun;
            Enabled = enabled;
            IgnorePodDisruptionBudgets = ignorePodDisruptionBudgets;
            NodeGracePeriodMinutes = nodeGracePeriodMinutes;
            PodEvictionFailureBackOffInterval = podEvictionFailureBackOffInterval;
            ScopedMode = scopedMode;
        }
    }
}
