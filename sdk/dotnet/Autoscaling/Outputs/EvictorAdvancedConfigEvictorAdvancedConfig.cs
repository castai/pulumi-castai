// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Autoscaling.Outputs
{

    [OutputType]
    public sealed class EvictorAdvancedConfigEvictorAdvancedConfig
    {
        /// <summary>
        /// Apply Aggressive mode to Evictor
        /// </summary>
        public readonly bool? Aggressive;
        /// <summary>
        /// Mark node as disposable
        /// </summary>
        public readonly bool? Disposable;
        /// <summary>
        /// node selector
        /// </summary>
        public readonly ImmutableArray<Outputs.EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector> NodeSelectors;
        /// <summary>
        /// pod selector
        /// </summary>
        public readonly ImmutableArray<Outputs.EvictorAdvancedConfigEvictorAdvancedConfigPodSelector> PodSelectors;
        /// <summary>
        /// Mark pods as removal disabled
        /// </summary>
        public readonly bool? RemovalDisabled;

        [OutputConstructor]
        private EvictorAdvancedConfigEvictorAdvancedConfig(
            bool? aggressive,

            bool? disposable,

            ImmutableArray<Outputs.EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector> nodeSelectors,

            ImmutableArray<Outputs.EvictorAdvancedConfigEvictorAdvancedConfigPodSelector> podSelectors,

            bool? removalDisabled)
        {
            Aggressive = aggressive;
            Disposable = disposable;
            NodeSelectors = nodeSelectors;
            PodSelectors = podSelectors;
            RemovalDisabled = removalDisabled;
        }
    }
}
