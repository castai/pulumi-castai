// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Autoscaling.Inputs
{

    public sealed class AutoscalerAutoscalerSettingsNodeDownscalerEvictorGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
        /// </summary>
        [Input("aggressiveMode")]
        public Input<bool>? AggressiveMode { get; set; }

        /// <summary>
        /// configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
        /// </summary>
        [Input("cycleInterval")]
        public Input<string>? CycleInterval { get; set; }

        /// <summary>
        /// enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
        /// </summary>
        [Input("ignorePodDisruptionBudgets")]
        public Input<bool>? IgnorePodDisruptionBudgets { get; set; }

        /// <summary>
        /// configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
        /// </summary>
        [Input("nodeGracePeriodMinutes")]
        public Input<int>? NodeGracePeriodMinutes { get; set; }

        /// <summary>
        /// configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
        /// </summary>
        [Input("podEvictionFailureBackOffInterval")]
        public Input<string>? PodEvictionFailureBackOffInterval { get; set; }

        /// <summary>
        /// enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
        /// </summary>
        [Input("scopedMode")]
        public Input<bool>? ScopedMode { get; set; }

        public AutoscalerAutoscalerSettingsNodeDownscalerEvictorGetArgs()
        {
        }
        public static new AutoscalerAutoscalerSettingsNodeDownscalerEvictorGetArgs Empty => new AutoscalerAutoscalerSettingsNodeDownscalerEvictorGetArgs();
    }
}
