// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:index:Commitments")]
    public partial class Commitments : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of Azure reservations.
        /// </summary>
        [Output("azureReservations")]
        public Output<ImmutableArray<Outputs.CommitmentsAzureReservation>> AzureReservations { get; private set; } = null!;

        /// <summary>
        /// CSV file containing reservations exported from Azure.
        /// </summary>
        [Output("azureReservationsCsv")]
        public Output<string?> AzureReservationsCsv { get; private set; } = null!;

        /// <summary>
        /// List of commitment configurations.
        /// </summary>
        [Output("commitmentConfigs")]
        public Output<ImmutableArray<Outputs.CommitmentsCommitmentConfig>> CommitmentConfigs { get; private set; } = null!;

        /// <summary>
        /// List of GCP CUDs.
        /// </summary>
        [Output("gcpCuds")]
        public Output<ImmutableArray<Outputs.CommitmentsGcpCud>> GcpCuds { get; private set; } = null!;

        /// <summary>
        /// JSON file containing CUDs exported from GCP.
        /// </summary>
        [Output("gcpCudsJson")]
        public Output<string?> GcpCudsJson { get; private set; } = null!;


        /// <summary>
        /// Create a Commitments resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Commitments(string name, CommitmentsArgs? args = null, CustomResourceOptions? options = null)
            : base("castai:index:Commitments", name, args ?? new CommitmentsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Commitments(string name, Input<string> id, CommitmentsState? state = null, CustomResourceOptions? options = null)
            : base("castai:index:Commitments", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Commitments resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Commitments Get(string name, Input<string> id, CommitmentsState? state = null, CustomResourceOptions? options = null)
        {
            return new Commitments(name, id, state, options);
        }
    }

    public sealed class CommitmentsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CSV file containing reservations exported from Azure.
        /// </summary>
        [Input("azureReservationsCsv")]
        public Input<string>? AzureReservationsCsv { get; set; }

        [Input("commitmentConfigs")]
        private InputList<Inputs.CommitmentsCommitmentConfigArgs>? _commitmentConfigs;

        /// <summary>
        /// List of commitment configurations.
        /// </summary>
        public InputList<Inputs.CommitmentsCommitmentConfigArgs> CommitmentConfigs
        {
            get => _commitmentConfigs ?? (_commitmentConfigs = new InputList<Inputs.CommitmentsCommitmentConfigArgs>());
            set => _commitmentConfigs = value;
        }

        /// <summary>
        /// JSON file containing CUDs exported from GCP.
        /// </summary>
        [Input("gcpCudsJson")]
        public Input<string>? GcpCudsJson { get; set; }

        public CommitmentsArgs()
        {
        }
        public static new CommitmentsArgs Empty => new CommitmentsArgs();
    }

    public sealed class CommitmentsState : global::Pulumi.ResourceArgs
    {
        [Input("azureReservations")]
        private InputList<Inputs.CommitmentsAzureReservationGetArgs>? _azureReservations;

        /// <summary>
        /// List of Azure reservations.
        /// </summary>
        public InputList<Inputs.CommitmentsAzureReservationGetArgs> AzureReservations
        {
            get => _azureReservations ?? (_azureReservations = new InputList<Inputs.CommitmentsAzureReservationGetArgs>());
            set => _azureReservations = value;
        }

        /// <summary>
        /// CSV file containing reservations exported from Azure.
        /// </summary>
        [Input("azureReservationsCsv")]
        public Input<string>? AzureReservationsCsv { get; set; }

        [Input("commitmentConfigs")]
        private InputList<Inputs.CommitmentsCommitmentConfigGetArgs>? _commitmentConfigs;

        /// <summary>
        /// List of commitment configurations.
        /// </summary>
        public InputList<Inputs.CommitmentsCommitmentConfigGetArgs> CommitmentConfigs
        {
            get => _commitmentConfigs ?? (_commitmentConfigs = new InputList<Inputs.CommitmentsCommitmentConfigGetArgs>());
            set => _commitmentConfigs = value;
        }

        [Input("gcpCuds")]
        private InputList<Inputs.CommitmentsGcpCudGetArgs>? _gcpCuds;

        /// <summary>
        /// List of GCP CUDs.
        /// </summary>
        public InputList<Inputs.CommitmentsGcpCudGetArgs> GcpCuds
        {
            get => _gcpCuds ?? (_gcpCuds = new InputList<Inputs.CommitmentsGcpCudGetArgs>());
            set => _gcpCuds = value;
        }

        /// <summary>
        /// JSON file containing CUDs exported from GCP.
        /// </summary>
        [Input("gcpCudsJson")]
        public Input<string>? GcpCudsJson { get; set; }

        public CommitmentsState()
        {
        }
        public static new CommitmentsState Empty => new CommitmentsState();
    }
}
