// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Rebalancing.Inputs
{

    public sealed class RebalancingScheduleLaunchConfigurationAggressiveModeConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rebalance workloads that use local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
        /// </summary>
        [Input("ignoreLocalPersistentVolumes", required: true)]
        public Input<bool> IgnoreLocalPersistentVolumes { get; set; } = null!;

        /// <summary>
        /// Pods spawned by Jobs or CronJobs will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, pods spawned by Jobs or CronJobs will be terminated if the Rebalancer picks a node that runs them. As such, they are likely to lose their progress.
        /// </summary>
        [Input("ignoreProblemJobPods", required: true)]
        public Input<bool> IgnoreProblemJobPods { get; set; } = null!;

        /// <summary>
        /// Pods that don't have a controller (bare pods) will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, such pods might not restart, since they have no controller to do it.
        /// </summary>
        [Input("ignoreProblemPodsWithoutController", required: true)]
        public Input<bool> IgnoreProblemPodsWithoutController { get; set; } = null!;

        /// <summary>
        /// Pods that are marked with "removal disabled" will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, such pods will be evicted and disrupted.
        /// </summary>
        [Input("ignoreProblemRemovalDisabledPods", required: true)]
        public Input<bool> IgnoreProblemRemovalDisabledPods { get; set; } = null!;

        public RebalancingScheduleLaunchConfigurationAggressiveModeConfigGetArgs()
        {
        }
        public static new RebalancingScheduleLaunchConfigurationAggressiveModeConfigGetArgs Empty => new RebalancingScheduleLaunchConfigurationAggressiveModeConfigGetArgs();
    }
}
