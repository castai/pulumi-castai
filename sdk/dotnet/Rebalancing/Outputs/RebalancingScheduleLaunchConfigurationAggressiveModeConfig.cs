// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI.Rebalancing.Outputs
{

    [OutputType]
    public sealed class RebalancingScheduleLaunchConfigurationAggressiveModeConfig
    {
        /// <summary>
        /// Rebalance workloads that use local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
        /// </summary>
        public readonly bool IgnoreLocalPersistentVolumes;
        /// <summary>
        /// Pods spawned by Jobs or CronJobs will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, pods spawned by Jobs or CronJobs will be terminated if the Rebalancer picks a node that runs them. As such, they are likely to lose their progress.
        /// </summary>
        public readonly bool IgnoreProblemJobPods;
        /// <summary>
        /// Pods that don't have a controller (bare pods) will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, such pods might not restart, since they have no controller to do it.
        /// </summary>
        public readonly bool IgnoreProblemPodsWithoutController;
        /// <summary>
        /// Pods that are marked with "removal disabled" will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, such pods will be evicted and disrupted.
        /// </summary>
        public readonly bool IgnoreProblemRemovalDisabledPods;

        [OutputConstructor]
        private RebalancingScheduleLaunchConfigurationAggressiveModeConfig(
            bool ignoreLocalPersistentVolumes,

            bool ignoreProblemJobPods,

            bool ignoreProblemPodsWithoutController,

            bool ignoreProblemRemovalDisabledPods)
        {
            IgnoreLocalPersistentVolumes = ignoreLocalPersistentVolumes;
            IgnoreProblemJobPods = ignoreProblemJobPods;
            IgnoreProblemPodsWithoutController = ignoreProblemPodsWithoutController;
            IgnoreProblemRemovalDisabledPods = ignoreProblemRemovalDisabledPods;
        }
    }
}
