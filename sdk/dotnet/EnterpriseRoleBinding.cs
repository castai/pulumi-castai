// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:iam:EnterpriseRoleBinding")]
    public partial class EnterpriseRoleBinding : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the role binding.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enterprise organization ID.
        /// </summary>
        [Output("enterpriseId")]
        public Output<string> EnterpriseId { get; private set; } = null!;

        /// <summary>
        /// Name of the role binding.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Organization ID (either enterprise or it's child) where the role binding is created.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Role UUID to bind.
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;

        /// <summary>
        /// Scopes (organization or cluster) for this role binding.
        /// </summary>
        [Output("scopes")]
        public Output<Pulumi.CastAI.Iam.Outputs.EnterpriseRoleBindingScopes> Scopes { get; private set; } = null!;

        /// <summary>
        /// Subjects (users, service accounts, groups) for this role binding.
        /// </summary>
        [Output("subjects")]
        public Output<Pulumi.CastAI.Iam.Outputs.EnterpriseRoleBindingSubjects> Subjects { get; private set; } = null!;


        /// <summary>
        /// Create a EnterpriseRoleBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnterpriseRoleBinding(string name, EnterpriseRoleBindingArgs args, CustomResourceOptions? options = null)
            : base("castai:iam:EnterpriseRoleBinding", name, args ?? new EnterpriseRoleBindingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnterpriseRoleBinding(string name, Input<string> id, EnterpriseRoleBindingState? state = null, CustomResourceOptions? options = null)
            : base("castai:iam:EnterpriseRoleBinding", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnterpriseRoleBinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnterpriseRoleBinding Get(string name, Input<string> id, EnterpriseRoleBindingState? state = null, CustomResourceOptions? options = null)
        {
            return new EnterpriseRoleBinding(name, id, state, options);
        }
    }

    public sealed class EnterpriseRoleBindingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the role binding.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enterprise organization ID.
        /// </summary>
        [Input("enterpriseId", required: true)]
        public Input<string> EnterpriseId { get; set; } = null!;

        /// <summary>
        /// Name of the role binding.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Organization ID (either enterprise or it's child) where the role binding is created.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// Role UUID to bind.
        /// </summary>
        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        /// <summary>
        /// Scopes (organization or cluster) for this role binding.
        /// </summary>
        [Input("scopes", required: true)]
        public Input<Pulumi.CastAI.Iam.Inputs.EnterpriseRoleBindingScopesArgs> Scopes { get; set; } = null!;

        /// <summary>
        /// Subjects (users, service accounts, groups) for this role binding.
        /// </summary>
        [Input("subjects", required: true)]
        public Input<Pulumi.CastAI.Iam.Inputs.EnterpriseRoleBindingSubjectsArgs> Subjects { get; set; } = null!;

        public EnterpriseRoleBindingArgs()
        {
        }
        public static new EnterpriseRoleBindingArgs Empty => new EnterpriseRoleBindingArgs();
    }

    public sealed class EnterpriseRoleBindingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the role binding.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enterprise organization ID.
        /// </summary>
        [Input("enterpriseId")]
        public Input<string>? EnterpriseId { get; set; }

        /// <summary>
        /// Name of the role binding.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Organization ID (either enterprise or it's child) where the role binding is created.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Role UUID to bind.
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// Scopes (organization or cluster) for this role binding.
        /// </summary>
        [Input("scopes")]
        public Input<Pulumi.CastAI.Iam.Inputs.EnterpriseRoleBindingScopesGetArgs>? Scopes { get; set; }

        /// <summary>
        /// Subjects (users, service accounts, groups) for this role binding.
        /// </summary>
        [Input("subjects")]
        public Input<Pulumi.CastAI.Iam.Inputs.EnterpriseRoleBindingSubjectsGetArgs>? Subjects { get; set; }

        public EnterpriseRoleBindingState()
        {
        }
        public static new EnterpriseRoleBindingState Empty => new EnterpriseRoleBindingState();
    }
}
