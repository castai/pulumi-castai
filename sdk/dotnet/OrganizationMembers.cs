// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:organization:OrganizationMembers")]
    public partial class OrganizationMembers : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of email addresses corresponding to users who should be given member access to the organization.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<string>> Members { get; private set; } = null!;

        /// <summary>
        /// CAST AI organization ID.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given owner access to the organization.
        /// </summary>
        [Output("owners")]
        public Output<ImmutableArray<string>> Owners { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given viewer access to the organization.
        /// </summary>
        [Output("viewers")]
        public Output<ImmutableArray<string>> Viewers { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationMembers resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationMembers(string name, OrganizationMembersArgs args, CustomResourceOptions? options = null)
            : base("castai:organization:OrganizationMembers", name, args ?? new OrganizationMembersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationMembers(string name, Input<string> id, OrganizationMembersState? state = null, CustomResourceOptions? options = null)
            : base("castai:organization:OrganizationMembers", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationMembers resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationMembers Get(string name, Input<string> id, OrganizationMembersState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationMembers(name, id, state, options);
        }
    }

    public sealed class OrganizationMembersArgs : global::Pulumi.ResourceArgs
    {
        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given member access to the organization.
        /// </summary>
        [Obsolete(@"The 'members' field is deprecated. Use 'castai_role_bindings' resource instead for more granular role management. This field will be removed in a future version.")]
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// CAST AI organization ID.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("owners")]
        private InputList<string>? _owners;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given owner access to the organization.
        /// </summary>
        [Obsolete(@"The 'owners' field is deprecated. Use 'castai_role_bindings' resource instead for more granular role management. This field will be removed in a future version.")]
        public InputList<string> Owners
        {
            get => _owners ?? (_owners = new InputList<string>());
            set => _owners = value;
        }

        [Input("viewers")]
        private InputList<string>? _viewers;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given viewer access to the organization.
        /// </summary>
        [Obsolete(@"The 'viewers' field is deprecated. Use 'castai_role_bindings' resource instead for more granular role management. This field will be removed in a future version.")]
        public InputList<string> Viewers
        {
            get => _viewers ?? (_viewers = new InputList<string>());
            set => _viewers = value;
        }

        public OrganizationMembersArgs()
        {
        }
        public static new OrganizationMembersArgs Empty => new OrganizationMembersArgs();
    }

    public sealed class OrganizationMembersState : global::Pulumi.ResourceArgs
    {
        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given member access to the organization.
        /// </summary>
        [Obsolete(@"The 'members' field is deprecated. Use 'castai_role_bindings' resource instead for more granular role management. This field will be removed in a future version.")]
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// CAST AI organization ID.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("owners")]
        private InputList<string>? _owners;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given owner access to the organization.
        /// </summary>
        [Obsolete(@"The 'owners' field is deprecated. Use 'castai_role_bindings' resource instead for more granular role management. This field will be removed in a future version.")]
        public InputList<string> Owners
        {
            get => _owners ?? (_owners = new InputList<string>());
            set => _owners = value;
        }

        [Input("viewers")]
        private InputList<string>? _viewers;

        /// <summary>
        /// A list of email addresses corresponding to users who should be given viewer access to the organization.
        /// </summary>
        [Obsolete(@"The 'viewers' field is deprecated. Use 'castai_role_bindings' resource instead for more granular role management. This field will be removed in a future version.")]
        public InputList<string> Viewers
        {
            get => _viewers ?? (_viewers = new InputList<string>());
            set => _viewers = value;
        }

        public OrganizationMembersState()
        {
        }
        public static new OrganizationMembersState Empty => new OrganizationMembersState();
    }
}
