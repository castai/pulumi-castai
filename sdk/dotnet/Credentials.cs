// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    [CastAIResourceType("castai:index:Credentials")]
    public partial class Credentials : global::Pulumi.CustomResource
    {
        [Output("aws")]
        public Output<Outputs.CredentialsAws?> Aws { get; private set; } = null!;

        [Output("azure")]
        public Output<Outputs.CredentialsAzure?> Azure { get; private set; } = null!;

        [Output("cloud")]
        public Output<string> Cloud { get; private set; } = null!;

        [Output("do")]
        public Output<Outputs.CredentialsDo?> Do { get; private set; } = null!;

        [Output("gcp")]
        public Output<Outputs.CredentialsGcp?> Gcp { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Credentials resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Credentials(string name, CredentialsArgs? args = null, CustomResourceOptions? options = null)
            : base("castai:index:Credentials", name, args ?? new CredentialsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Credentials(string name, Input<string> id, CredentialsState? state = null, CustomResourceOptions? options = null)
            : base("castai:index:Credentials", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/castai",
                AdditionalSecretOutputs =
                {
                    "aws",
                    "azure",
                    "do",
                    "gcp",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Credentials resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Credentials Get(string name, Input<string> id, CredentialsState? state = null, CustomResourceOptions? options = null)
        {
            return new Credentials(name, id, state, options);
        }
    }

    public sealed class CredentialsArgs : global::Pulumi.ResourceArgs
    {
        [Input("aws")]
        private Input<Inputs.CredentialsAwsArgs>? _aws;
        public Input<Inputs.CredentialsAwsArgs>? Aws
        {
            get => _aws;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _aws = Output.Tuple<Input<Inputs.CredentialsAwsArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("azure")]
        private Input<Inputs.CredentialsAzureArgs>? _azure;
        public Input<Inputs.CredentialsAzureArgs>? Azure
        {
            get => _azure;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _azure = Output.Tuple<Input<Inputs.CredentialsAzureArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("do")]
        private Input<Inputs.CredentialsDoArgs>? _do;
        public Input<Inputs.CredentialsDoArgs>? Do
        {
            get => _do;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _do = Output.Tuple<Input<Inputs.CredentialsDoArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("gcp")]
        private Input<Inputs.CredentialsGcpArgs>? _gcp;
        public Input<Inputs.CredentialsGcpArgs>? Gcp
        {
            get => _gcp;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _gcp = Output.Tuple<Input<Inputs.CredentialsGcpArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public CredentialsArgs()
        {
        }
        public static new CredentialsArgs Empty => new CredentialsArgs();
    }

    public sealed class CredentialsState : global::Pulumi.ResourceArgs
    {
        [Input("aws")]
        private Input<Inputs.CredentialsAwsGetArgs>? _aws;
        public Input<Inputs.CredentialsAwsGetArgs>? Aws
        {
            get => _aws;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _aws = Output.Tuple<Input<Inputs.CredentialsAwsGetArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("azure")]
        private Input<Inputs.CredentialsAzureGetArgs>? _azure;
        public Input<Inputs.CredentialsAzureGetArgs>? Azure
        {
            get => _azure;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _azure = Output.Tuple<Input<Inputs.CredentialsAzureGetArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        [Input("do")]
        private Input<Inputs.CredentialsDoGetArgs>? _do;
        public Input<Inputs.CredentialsDoGetArgs>? Do
        {
            get => _do;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _do = Output.Tuple<Input<Inputs.CredentialsDoGetArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("gcp")]
        private Input<Inputs.CredentialsGcpGetArgs>? _gcp;
        public Input<Inputs.CredentialsGcpGetArgs>? Gcp
        {
            get => _gcp;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _gcp = Output.Tuple<Input<Inputs.CredentialsGcpGetArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public CredentialsState()
        {
        }
        public static new CredentialsState Empty => new CredentialsState();
    }
}
