"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Credentials = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class Credentials extends pulumi.CustomResource {
    /**
     * Get an existing Credentials resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Credentials(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Credentials.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Credentials.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["azure"] = state ? state.azure : undefined;
            resourceInputs["cloud"] = state ? state.cloud : undefined;
            resourceInputs["do"] = state ? state.do : undefined;
            resourceInputs["gcp"] = state ? state.gcp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["aws"] = (args === null || args === void 0 ? void 0 : args.aws) ? pulumi.secret(args.aws) : undefined;
            resourceInputs["azure"] = (args === null || args === void 0 ? void 0 : args.azure) ? pulumi.secret(args.azure) : undefined;
            resourceInputs["do"] = (args === null || args === void 0 ? void 0 : args.do) ? pulumi.secret(args.do) : undefined;
            resourceInputs["gcp"] = (args === null || args === void 0 ? void 0 : args.gcp) ? pulumi.secret(args.gcp) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["cloud"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["aws", "azure", "do", "gcp"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Credentials.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Credentials = Credentials;
/** @internal */
Credentials.__pulumiType = 'castai:index:Credentials';
//# sourceMappingURL=credentials.js.map