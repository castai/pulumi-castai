// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * EKS cluster resource allows connecting an existing EKS cluster to CAST AI.
 */
export class EksCluster extends pulumi.CustomResource {
    /**
     * Get an existing EksCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EksClusterState, opts?: pulumi.CustomResourceOptions): EksCluster {
        return new EksCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'castai:aws:EksCluster';

    /**
     * Returns true if the given object is an instance of EksCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EksCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EksCluster.__pulumiType;
    }

    /**
     * AWS access key ID of the CAST AI IAM account
     */
    public readonly accessKeyId!: pulumi.Output<string | undefined>;
    /**
     * ID of AWS account
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * @deprecated agent_token is deprecated, use clusterToken instead
     */
    public /*out*/ readonly agentToken!: pulumi.Output<string>;
    /**
     * AWS ARN for assume role that should be used instead of IAM account
     */
    public readonly assumeRoleArn!: pulumi.Output<string | undefined>;
    /**
     * CAST AI internal credentials ID
     */
    public /*out*/ readonly credentialsId!: pulumi.Output<string>;
    /**
     * Should CAST AI remove nodes managed by CAST AI on disconnect
     */
    public readonly deleteNodesOnDisconnect!: pulumi.Output<boolean | undefined>;
    /**
     * Overrides the IP address to use for DNS queries within the cluster. Defaults to 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface
     */
    public readonly dnsClusterIp!: pulumi.Output<string | undefined>;
    /**
     * AWS ARN of the instance profile to be used by CAST AI
     */
    public readonly instanceProfileArn!: pulumi.Output<string | undefined>;
    /**
     * name of your EKS cluster
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Optional custom security groups for the cluster. If not set security groups from the EKS cluster configuration are used.
     */
    public readonly overrideSecurityGroups!: pulumi.Output<string[] | undefined>;
    /**
     * AWS region where the cluster is placed
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * AWS secret access key of the CAST AI IAM account
     */
    public readonly secretAccessKey!: pulumi.Output<string | undefined>;
    /**
     * IDs of security groups that are used by CAST AI
     */
    public /*out*/ readonly securityGroups!: pulumi.Output<string[]>;
    /**
     * Accepted values are base64 encoded SSH public key or AWS key pair ID.
     */
    public readonly sshPublicKey!: pulumi.Output<string | undefined>;
    /**
     * Custom subnets for the cluster. If not set subnets from the EKS cluster configuration are used.
     */
    public readonly subnets!: pulumi.Output<string[] | undefined>;
    /**
     * Tags which should be added to CAST AI nodes
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a EksCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EksClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EksClusterArgs | EksClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EksClusterState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["agentToken"] = state ? state.agentToken : undefined;
            resourceInputs["assumeRoleArn"] = state ? state.assumeRoleArn : undefined;
            resourceInputs["credentialsId"] = state ? state.credentialsId : undefined;
            resourceInputs["deleteNodesOnDisconnect"] = state ? state.deleteNodesOnDisconnect : undefined;
            resourceInputs["dnsClusterIp"] = state ? state.dnsClusterIp : undefined;
            resourceInputs["instanceProfileArn"] = state ? state.instanceProfileArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideSecurityGroups"] = state ? state.overrideSecurityGroups : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["secretAccessKey"] = state ? state.secretAccessKey : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["sshPublicKey"] = state ? state.sshPublicKey : undefined;
            resourceInputs["subnets"] = state ? state.subnets : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as EksClusterArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["accessKeyId"] = args?.accessKeyId ? pulumi.secret(args.accessKeyId) : undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["assumeRoleArn"] = args ? args.assumeRoleArn : undefined;
            resourceInputs["deleteNodesOnDisconnect"] = args ? args.deleteNodesOnDisconnect : undefined;
            resourceInputs["dnsClusterIp"] = args ? args.dnsClusterIp : undefined;
            resourceInputs["instanceProfileArn"] = args ? args.instanceProfileArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideSecurityGroups"] = args ? args.overrideSecurityGroups : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["secretAccessKey"] = args?.secretAccessKey ? pulumi.secret(args.secretAccessKey) : undefined;
            resourceInputs["sshPublicKey"] = args ? args.sshPublicKey : undefined;
            resourceInputs["subnets"] = args ? args.subnets : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["agentToken"] = undefined /*out*/;
            resourceInputs["credentialsId"] = undefined /*out*/;
            resourceInputs["securityGroups"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessKeyId", "agentToken", "secretAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(EksCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EksCluster resources.
 */
export interface EksClusterState {
    /**
     * AWS access key ID of the CAST AI IAM account
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * ID of AWS account
     */
    accountId?: pulumi.Input<string>;
    /**
     * @deprecated agent_token is deprecated, use clusterToken instead
     */
    agentToken?: pulumi.Input<string>;
    /**
     * AWS ARN for assume role that should be used instead of IAM account
     */
    assumeRoleArn?: pulumi.Input<string>;
    /**
     * CAST AI internal credentials ID
     */
    credentialsId?: pulumi.Input<string>;
    /**
     * Should CAST AI remove nodes managed by CAST AI on disconnect
     */
    deleteNodesOnDisconnect?: pulumi.Input<boolean>;
    /**
     * Overrides the IP address to use for DNS queries within the cluster. Defaults to 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface
     */
    dnsClusterIp?: pulumi.Input<string>;
    /**
     * AWS ARN of the instance profile to be used by CAST AI
     */
    instanceProfileArn?: pulumi.Input<string>;
    /**
     * name of your EKS cluster
     */
    name?: pulumi.Input<string>;
    /**
     * Optional custom security groups for the cluster. If not set security groups from the EKS cluster configuration are used.
     */
    overrideSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS region where the cluster is placed
     */
    region?: pulumi.Input<string>;
    /**
     * AWS secret access key of the CAST AI IAM account
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * IDs of security groups that are used by CAST AI
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Accepted values are base64 encoded SSH public key or AWS key pair ID.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Custom subnets for the cluster. If not set subnets from the EKS cluster configuration are used.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags which should be added to CAST AI nodes
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a EksCluster resource.
 */
export interface EksClusterArgs {
    /**
     * AWS access key ID of the CAST AI IAM account
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * ID of AWS account
     */
    accountId: pulumi.Input<string>;
    /**
     * AWS ARN for assume role that should be used instead of IAM account
     */
    assumeRoleArn?: pulumi.Input<string>;
    /**
     * Should CAST AI remove nodes managed by CAST AI on disconnect
     */
    deleteNodesOnDisconnect?: pulumi.Input<boolean>;
    /**
     * Overrides the IP address to use for DNS queries within the cluster. Defaults to 10.100.0.10 or 172.20.0.10 based on the IP address of the primary interface
     */
    dnsClusterIp?: pulumi.Input<string>;
    /**
     * AWS ARN of the instance profile to be used by CAST AI
     */
    instanceProfileArn?: pulumi.Input<string>;
    /**
     * name of your EKS cluster
     */
    name?: pulumi.Input<string>;
    /**
     * Optional custom security groups for the cluster. If not set security groups from the EKS cluster configuration are used.
     */
    overrideSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS region where the cluster is placed
     */
    region: pulumi.Input<string>;
    /**
     * AWS secret access key of the CAST AI IAM account
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * Accepted values are base64 encoded SSH public key or AWS key pair ID.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Custom subnets for the cluster. If not set subnets from the EKS cluster configuration are used.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags which should be added to CAST AI nodes
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
