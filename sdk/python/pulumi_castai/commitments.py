# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CommitmentsArgs', 'Commitments']

@pulumi.input_type
class CommitmentsArgs:
    def __init__(__self__, *,
                 azure_reservations_csv: Optional[pulumi.Input[_builtins.str]] = None,
                 commitment_configs: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]]] = None,
                 gcp_cuds_json: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a Commitments resource.
        :param pulumi.Input[_builtins.str] azure_reservations_csv: CSV file containing reservations exported from Azure.
        :param pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]] commitment_configs: List of commitment configurations.
        :param pulumi.Input[_builtins.str] gcp_cuds_json: JSON file containing CUDs exported from GCP.
        """
        if azure_reservations_csv is not None:
            pulumi.set(__self__, "azure_reservations_csv", azure_reservations_csv)
        if commitment_configs is not None:
            pulumi.set(__self__, "commitment_configs", commitment_configs)
        if gcp_cuds_json is not None:
            pulumi.set(__self__, "gcp_cuds_json", gcp_cuds_json)

    @_builtins.property
    @pulumi.getter(name="azureReservationsCsv")
    def azure_reservations_csv(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CSV file containing reservations exported from Azure.
        """
        return pulumi.get(self, "azure_reservations_csv")

    @azure_reservations_csv.setter
    def azure_reservations_csv(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "azure_reservations_csv", value)

    @_builtins.property
    @pulumi.getter(name="commitmentConfigs")
    def commitment_configs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]]]:
        """
        List of commitment configurations.
        """
        return pulumi.get(self, "commitment_configs")

    @commitment_configs.setter
    def commitment_configs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]]]):
        pulumi.set(self, "commitment_configs", value)

    @_builtins.property
    @pulumi.getter(name="gcpCudsJson")
    def gcp_cuds_json(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        JSON file containing CUDs exported from GCP.
        """
        return pulumi.get(self, "gcp_cuds_json")

    @gcp_cuds_json.setter
    def gcp_cuds_json(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "gcp_cuds_json", value)


@pulumi.input_type
class _CommitmentsState:
    def __init__(__self__, *,
                 azure_reservations: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsAzureReservationArgs']]]] = None,
                 azure_reservations_csv: Optional[pulumi.Input[_builtins.str]] = None,
                 commitment_configs: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]]] = None,
                 gcp_cuds: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsGcpCudArgs']]]] = None,
                 gcp_cuds_json: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Commitments resources.
        :param pulumi.Input[Sequence[pulumi.Input['CommitmentsAzureReservationArgs']]] azure_reservations: List of Azure reservations.
        :param pulumi.Input[_builtins.str] azure_reservations_csv: CSV file containing reservations exported from Azure.
        :param pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]] commitment_configs: List of commitment configurations.
        :param pulumi.Input[Sequence[pulumi.Input['CommitmentsGcpCudArgs']]] gcp_cuds: List of GCP CUDs.
        :param pulumi.Input[_builtins.str] gcp_cuds_json: JSON file containing CUDs exported from GCP.
        """
        if azure_reservations is not None:
            pulumi.set(__self__, "azure_reservations", azure_reservations)
        if azure_reservations_csv is not None:
            pulumi.set(__self__, "azure_reservations_csv", azure_reservations_csv)
        if commitment_configs is not None:
            pulumi.set(__self__, "commitment_configs", commitment_configs)
        if gcp_cuds is not None:
            pulumi.set(__self__, "gcp_cuds", gcp_cuds)
        if gcp_cuds_json is not None:
            pulumi.set(__self__, "gcp_cuds_json", gcp_cuds_json)

    @_builtins.property
    @pulumi.getter(name="azureReservations")
    def azure_reservations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsAzureReservationArgs']]]]:
        """
        List of Azure reservations.
        """
        return pulumi.get(self, "azure_reservations")

    @azure_reservations.setter
    def azure_reservations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsAzureReservationArgs']]]]):
        pulumi.set(self, "azure_reservations", value)

    @_builtins.property
    @pulumi.getter(name="azureReservationsCsv")
    def azure_reservations_csv(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CSV file containing reservations exported from Azure.
        """
        return pulumi.get(self, "azure_reservations_csv")

    @azure_reservations_csv.setter
    def azure_reservations_csv(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "azure_reservations_csv", value)

    @_builtins.property
    @pulumi.getter(name="commitmentConfigs")
    def commitment_configs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]]]:
        """
        List of commitment configurations.
        """
        return pulumi.get(self, "commitment_configs")

    @commitment_configs.setter
    def commitment_configs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsCommitmentConfigArgs']]]]):
        pulumi.set(self, "commitment_configs", value)

    @_builtins.property
    @pulumi.getter(name="gcpCuds")
    def gcp_cuds(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsGcpCudArgs']]]]:
        """
        List of GCP CUDs.
        """
        return pulumi.get(self, "gcp_cuds")

    @gcp_cuds.setter
    def gcp_cuds(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CommitmentsGcpCudArgs']]]]):
        pulumi.set(self, "gcp_cuds", value)

    @_builtins.property
    @pulumi.getter(name="gcpCudsJson")
    def gcp_cuds_json(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        JSON file containing CUDs exported from GCP.
        """
        return pulumi.get(self, "gcp_cuds_json")

    @gcp_cuds_json.setter
    def gcp_cuds_json(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "gcp_cuds_json", value)


@pulumi.type_token("castai:index:Commitments")
class Commitments(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 azure_reservations_csv: Optional[pulumi.Input[_builtins.str]] = None,
                 commitment_configs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsCommitmentConfigArgs', 'CommitmentsCommitmentConfigArgsDict']]]]] = None,
                 gcp_cuds_json: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a Commitments resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] azure_reservations_csv: CSV file containing reservations exported from Azure.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsCommitmentConfigArgs', 'CommitmentsCommitmentConfigArgsDict']]]] commitment_configs: List of commitment configurations.
        :param pulumi.Input[_builtins.str] gcp_cuds_json: JSON file containing CUDs exported from GCP.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[CommitmentsArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Commitments resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CommitmentsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CommitmentsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 azure_reservations_csv: Optional[pulumi.Input[_builtins.str]] = None,
                 commitment_configs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsCommitmentConfigArgs', 'CommitmentsCommitmentConfigArgsDict']]]]] = None,
                 gcp_cuds_json: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CommitmentsArgs.__new__(CommitmentsArgs)

            __props__.__dict__["azure_reservations_csv"] = azure_reservations_csv
            __props__.__dict__["commitment_configs"] = commitment_configs
            __props__.__dict__["gcp_cuds_json"] = gcp_cuds_json
            __props__.__dict__["azure_reservations"] = None
            __props__.__dict__["gcp_cuds"] = None
        super(Commitments, __self__).__init__(
            'castai:index:Commitments',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            azure_reservations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsAzureReservationArgs', 'CommitmentsAzureReservationArgsDict']]]]] = None,
            azure_reservations_csv: Optional[pulumi.Input[_builtins.str]] = None,
            commitment_configs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsCommitmentConfigArgs', 'CommitmentsCommitmentConfigArgsDict']]]]] = None,
            gcp_cuds: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsGcpCudArgs', 'CommitmentsGcpCudArgsDict']]]]] = None,
            gcp_cuds_json: Optional[pulumi.Input[_builtins.str]] = None) -> 'Commitments':
        """
        Get an existing Commitments resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsAzureReservationArgs', 'CommitmentsAzureReservationArgsDict']]]] azure_reservations: List of Azure reservations.
        :param pulumi.Input[_builtins.str] azure_reservations_csv: CSV file containing reservations exported from Azure.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsCommitmentConfigArgs', 'CommitmentsCommitmentConfigArgsDict']]]] commitment_configs: List of commitment configurations.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CommitmentsGcpCudArgs', 'CommitmentsGcpCudArgsDict']]]] gcp_cuds: List of GCP CUDs.
        :param pulumi.Input[_builtins.str] gcp_cuds_json: JSON file containing CUDs exported from GCP.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CommitmentsState.__new__(_CommitmentsState)

        __props__.__dict__["azure_reservations"] = azure_reservations
        __props__.__dict__["azure_reservations_csv"] = azure_reservations_csv
        __props__.__dict__["commitment_configs"] = commitment_configs
        __props__.__dict__["gcp_cuds"] = gcp_cuds
        __props__.__dict__["gcp_cuds_json"] = gcp_cuds_json
        return Commitments(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="azureReservations")
    def azure_reservations(self) -> pulumi.Output[Sequence['outputs.CommitmentsAzureReservation']]:
        """
        List of Azure reservations.
        """
        return pulumi.get(self, "azure_reservations")

    @_builtins.property
    @pulumi.getter(name="azureReservationsCsv")
    def azure_reservations_csv(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        CSV file containing reservations exported from Azure.
        """
        return pulumi.get(self, "azure_reservations_csv")

    @_builtins.property
    @pulumi.getter(name="commitmentConfigs")
    def commitment_configs(self) -> pulumi.Output[Optional[Sequence['outputs.CommitmentsCommitmentConfig']]]:
        """
        List of commitment configurations.
        """
        return pulumi.get(self, "commitment_configs")

    @_builtins.property
    @pulumi.getter(name="gcpCuds")
    def gcp_cuds(self) -> pulumi.Output[Sequence['outputs.CommitmentsGcpCud']]:
        """
        List of GCP CUDs.
        """
        return pulumi.get(self, "gcp_cuds")

    @_builtins.property
    @pulumi.getter(name="gcpCudsJson")
    def gcp_cuds_json(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        JSON file containing CUDs exported from GCP.
        """
        return pulumi.get(self, "gcp_cuds_json")

