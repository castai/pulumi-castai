# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'AksClusterHttpProxyConfigArgs',
    'AksClusterHttpProxyConfigArgsDict',
]

MYPY = False

if not MYPY:
    class AksClusterHttpProxyConfigArgsDict(TypedDict):
        http_proxy: NotRequired[pulumi.Input[_builtins.str]]
        """
        Address to use for proxying HTTP requests.
        """
        https_proxy: NotRequired[pulumi.Input[_builtins.str]]
        """
        Address to use for proxying HTTPS/TLS requests.
        """
        no_proxies: NotRequired[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]
        """
        List of destinations that should not go through proxy.
        """
elif False:
    AksClusterHttpProxyConfigArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AksClusterHttpProxyConfigArgs:
    def __init__(__self__, *,
                 http_proxy: Optional[pulumi.Input[_builtins.str]] = None,
                 https_proxy: Optional[pulumi.Input[_builtins.str]] = None,
                 no_proxies: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        :param pulumi.Input[_builtins.str] http_proxy: Address to use for proxying HTTP requests.
        :param pulumi.Input[_builtins.str] https_proxy: Address to use for proxying HTTPS/TLS requests.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] no_proxies: List of destinations that should not go through proxy.
        """
        if http_proxy is not None:
            pulumi.set(__self__, "http_proxy", http_proxy)
        if https_proxy is not None:
            pulumi.set(__self__, "https_proxy", https_proxy)
        if no_proxies is not None:
            pulumi.set(__self__, "no_proxies", no_proxies)

    @_builtins.property
    @pulumi.getter(name="httpProxy")
    def http_proxy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Address to use for proxying HTTP requests.
        """
        return pulumi.get(self, "http_proxy")

    @http_proxy.setter
    def http_proxy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_proxy", value)

    @_builtins.property
    @pulumi.getter(name="httpsProxy")
    def https_proxy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Address to use for proxying HTTPS/TLS requests.
        """
        return pulumi.get(self, "https_proxy")

    @https_proxy.setter
    def https_proxy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "https_proxy", value)

    @_builtins.property
    @pulumi.getter(name="noProxies")
    def no_proxies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        List of destinations that should not go through proxy.
        """
        return pulumi.get(self, "no_proxies")

    @no_proxies.setter
    def no_proxies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "no_proxies", value)


