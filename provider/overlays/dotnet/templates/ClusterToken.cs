// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CastAI
{
    /// <summary>
    /// ClusterToken resource allows to create a token for a cluster.
    /// </summary>
    [CastAIResourceType("castai:index:ClusterToken")]
    public partial class ClusterToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CAST AI cluster id
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// computed value to store cluster token
        /// </summary>
        [Output("clusterToken")]
        public Output<string> TokenValue { get; private set; } = null!;

        /// <summary>
        /// Create a ClusterToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterToken(string name, ClusterTokenArgs args, CustomResourceOptions? options = null)
            : base("castai:index:ClusterToken", name, args ?? new ClusterTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterToken(string name, Input<string> id, ClusterTokenState? state = null, CustomResourceOptions? options = null)
            : base("castai:index:ClusterToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cast-ai",
                AdditionalSecretOutputs =
                {
                    "clusterToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

        /// <summary>
        /// Get an existing ClusterToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterToken Get(string name, Input<string> id, ClusterTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterToken(name, id, state, options);
        }
    }

    public sealed class ClusterTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CAST AI cluster id
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        public ClusterTokenArgs()
        {
        }
        public static new ClusterTokenArgs Empty => new ClusterTokenArgs();
    }

    public sealed class ClusterTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CAST AI cluster id
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterToken")]
        private Input<string>? _tokenValue;

        /// <summary>
        /// computed value to store cluster token
        /// </summary>
        public Input<string>? TokenValue
        {
            get => _tokenValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ClusterTokenState()
        {
        }
        public static new ClusterTokenState Empty => new ClusterTokenState();
    }
}
